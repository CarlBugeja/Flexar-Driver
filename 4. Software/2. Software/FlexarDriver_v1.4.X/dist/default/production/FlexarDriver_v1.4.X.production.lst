

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul 07 13:00:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF18323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.30
    49                           ; Generated 15/09/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16LF18323 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0097                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  018C                     	;# 
   142  018E                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  028C                     	;# 
   187  028E                     	;# 
   188  0291                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0294                     	;# 
   193  0295                     	;# 
   194  0295                     	;# 
   195  0296                     	;# 
   196  0297                     	;# 
   197  0298                     	;# 
   198  030C                     	;# 
   199  030E                     	;# 
   200  038C                     	;# 
   201  038E                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0397                     	;# 
   206  0398                     	;# 
   207  0399                     	;# 
   208  039A                     	;# 
   209  039C                     	;# 
   210  039D                     	;# 
   211  039E                     	;# 
   212  039F                     	;# 
   213  0498                     	;# 
   214  0498                     	;# 
   215  0499                     	;# 
   216  049A                     	;# 
   217  049B                     	;# 
   218  049B                     	;# 
   219  049C                     	;# 
   220  049D                     	;# 
   221  049E                     	;# 
   222  049F                     	;# 
   223  0617                     	;# 
   224  0618                     	;# 
   225  0619                     	;# 
   226  0619                     	;# 
   227  061A                     	;# 
   228  061B                     	;# 
   229  061C                     	;# 
   230  061C                     	;# 
   231  0691                     	;# 
   232  0692                     	;# 
   233  0693                     	;# 
   234  0694                     	;# 
   235  0695                     	;# 
   236  0696                     	;# 
   237  0697                     	;# 
   238  0698                     	;# 
   239  0699                     	;# 
   240  0891                     	;# 
   241  0891                     	;# 
   242  0891                     	;# 
   243  0891                     	;# 
   244  0891                     	;# 
   245  0891                     	;# 
   246  0892                     	;# 
   247  0892                     	;# 
   248  0892                     	;# 
   249  0893                     	;# 
   250  0893                     	;# 
   251  0893                     	;# 
   252  0893                     	;# 
   253  0893                     	;# 
   254  0893                     	;# 
   255  0894                     	;# 
   256  0894                     	;# 
   257  0894                     	;# 
   258  0895                     	;# 
   259  0895                     	;# 
   260  0895                     	;# 
   261  0896                     	;# 
   262  0896                     	;# 
   263  0896                     	;# 
   264  089B                     	;# 
   265  0911                     	;# 
   266  0912                     	;# 
   267  0913                     	;# 
   268  0914                     	;# 
   269  0915                     	;# 
   270  0916                     	;# 
   271  0918                     	;# 
   272  0919                     	;# 
   273  091A                     	;# 
   274  091B                     	;# 
   275  091C                     	;# 
   276  091D                     	;# 
   277  091E                     	;# 
   278  091F                     	;# 
   279  0E0F                     	;# 
   280  0E10                     	;# 
   281  0E11                     	;# 
   282  0E12                     	;# 
   283  0E13                     	;# 
   284  0E14                     	;# 
   285  0E15                     	;# 
   286  0E18                     	;# 
   287  0E1A                     	;# 
   288  0E1B                     	;# 
   289  0E1C                     	;# 
   290  0E20                     	;# 
   291  0E21                     	;# 
   292  0E22                     	;# 
   293  0E24                     	;# 
   294  0E25                     	;# 
   295  0E28                     	;# 
   296  0E29                     	;# 
   297  0E2A                     	;# 
   298  0E2B                     	;# 
   299  0E90                     	;# 
   300  0E91                     	;# 
   301  0E92                     	;# 
   302  0E94                     	;# 
   303  0E95                     	;# 
   304  0EA0                     	;# 
   305  0EA1                     	;# 
   306  0EA2                     	;# 
   307  0EA3                     	;# 
   308  0EA4                     	;# 
   309  0EA5                     	;# 
   310  0F0F                     	;# 
   311  0F10                     	;# 
   312  0F11                     	;# 
   313  0F12                     	;# 
   314  0F13                     	;# 
   315  0F14                     	;# 
   316  0F15                     	;# 
   317  0F16                     	;# 
   318  0F17                     	;# 
   319  0F18                     	;# 
   320  0F19                     	;# 
   321  0F1A                     	;# 
   322  0F1B                     	;# 
   323  0F1C                     	;# 
   324  0F1D                     	;# 
   325  0F1E                     	;# 
   326  0F1F                     	;# 
   327  0F20                     	;# 
   328  0F21                     	;# 
   329  0F22                     	;# 
   330  0F23                     	;# 
   331  0FE4                     	;# 
   332  0FE5                     	;# 
   333  0FE6                     	;# 
   334  0FE7                     	;# 
   335  0FE8                     	;# 
   336  0FE9                     	;# 
   337  0FEA                     	;# 
   338  0FEB                     	;# 
   339  0FED                     	;# 
   340  0FEE                     	;# 
   341  0FEF                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0008                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000E                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  008C                     	;# 
   376  008E                     	;# 
   377  0090                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0094                     	;# 
   382  0097                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  010C                     	;# 
   390  010E                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  018C                     	;# 
   401  018E                     	;# 
   402  0199                     	;# 
   403  0199                     	;# 
   404  0199                     	;# 
   405  019A                     	;# 
   406  019A                     	;# 
   407  019A                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019C                     	;# 
   414  019C                     	;# 
   415  019C                     	;# 
   416  019D                     	;# 
   417  019D                     	;# 
   418  019D                     	;# 
   419  019E                     	;# 
   420  019E                     	;# 
   421  019E                     	;# 
   422  019F                     	;# 
   423  019F                     	;# 
   424  019F                     	;# 
   425  019F                     	;# 
   426  019F                     	;# 
   427  020C                     	;# 
   428  020E                     	;# 
   429  0211                     	;# 
   430  0211                     	;# 
   431  0212                     	;# 
   432  0212                     	;# 
   433  0213                     	;# 
   434  0213                     	;# 
   435  0214                     	;# 
   436  0214                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0216                     	;# 
   442  0216                     	;# 
   443  0217                     	;# 
   444  0217                     	;# 
   445  028C                     	;# 
   446  028E                     	;# 
   447  0291                     	;# 
   448  0291                     	;# 
   449  0292                     	;# 
   450  0293                     	;# 
   451  0294                     	;# 
   452  0295                     	;# 
   453  0295                     	;# 
   454  0296                     	;# 
   455  0297                     	;# 
   456  0298                     	;# 
   457  030C                     	;# 
   458  030E                     	;# 
   459  038C                     	;# 
   460  038E                     	;# 
   461  0391                     	;# 
   462  0392                     	;# 
   463  0393                     	;# 
   464  0397                     	;# 
   465  0398                     	;# 
   466  0399                     	;# 
   467  039A                     	;# 
   468  039C                     	;# 
   469  039D                     	;# 
   470  039E                     	;# 
   471  039F                     	;# 
   472  0498                     	;# 
   473  0498                     	;# 
   474  0499                     	;# 
   475  049A                     	;# 
   476  049B                     	;# 
   477  049B                     	;# 
   478  049C                     	;# 
   479  049D                     	;# 
   480  049E                     	;# 
   481  049F                     	;# 
   482  0617                     	;# 
   483  0618                     	;# 
   484  0619                     	;# 
   485  0619                     	;# 
   486  061A                     	;# 
   487  061B                     	;# 
   488  061C                     	;# 
   489  061C                     	;# 
   490  0691                     	;# 
   491  0692                     	;# 
   492  0693                     	;# 
   493  0694                     	;# 
   494  0695                     	;# 
   495  0696                     	;# 
   496  0697                     	;# 
   497  0698                     	;# 
   498  0699                     	;# 
   499  0891                     	;# 
   500  0891                     	;# 
   501  0891                     	;# 
   502  0891                     	;# 
   503  0891                     	;# 
   504  0891                     	;# 
   505  0892                     	;# 
   506  0892                     	;# 
   507  0892                     	;# 
   508  0893                     	;# 
   509  0893                     	;# 
   510  0893                     	;# 
   511  0893                     	;# 
   512  0893                     	;# 
   513  0893                     	;# 
   514  0894                     	;# 
   515  0894                     	;# 
   516  0894                     	;# 
   517  0895                     	;# 
   518  0895                     	;# 
   519  0895                     	;# 
   520  0896                     	;# 
   521  0896                     	;# 
   522  0896                     	;# 
   523  089B                     	;# 
   524  0911                     	;# 
   525  0912                     	;# 
   526  0913                     	;# 
   527  0914                     	;# 
   528  0915                     	;# 
   529  0916                     	;# 
   530  0918                     	;# 
   531  0919                     	;# 
   532  091A                     	;# 
   533  091B                     	;# 
   534  091C                     	;# 
   535  091D                     	;# 
   536  091E                     	;# 
   537  091F                     	;# 
   538  0E0F                     	;# 
   539  0E10                     	;# 
   540  0E11                     	;# 
   541  0E12                     	;# 
   542  0E13                     	;# 
   543  0E14                     	;# 
   544  0E15                     	;# 
   545  0E18                     	;# 
   546  0E1A                     	;# 
   547  0E1B                     	;# 
   548  0E1C                     	;# 
   549  0E20                     	;# 
   550  0E21                     	;# 
   551  0E22                     	;# 
   552  0E24                     	;# 
   553  0E25                     	;# 
   554  0E28                     	;# 
   555  0E29                     	;# 
   556  0E2A                     	;# 
   557  0E2B                     	;# 
   558  0E90                     	;# 
   559  0E91                     	;# 
   560  0E92                     	;# 
   561  0E94                     	;# 
   562  0E95                     	;# 
   563  0EA0                     	;# 
   564  0EA1                     	;# 
   565  0EA2                     	;# 
   566  0EA3                     	;# 
   567  0EA4                     	;# 
   568  0EA5                     	;# 
   569  0F0F                     	;# 
   570  0F10                     	;# 
   571  0F11                     	;# 
   572  0F12                     	;# 
   573  0F13                     	;# 
   574  0F14                     	;# 
   575  0F15                     	;# 
   576  0F16                     	;# 
   577  0F17                     	;# 
   578  0F18                     	;# 
   579  0F19                     	;# 
   580  0F1A                     	;# 
   581  0F1B                     	;# 
   582  0F1C                     	;# 
   583  0F1D                     	;# 
   584  0F1E                     	;# 
   585  0F1F                     	;# 
   586  0F20                     	;# 
   587  0F21                     	;# 
   588  0F22                     	;# 
   589  0F23                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000E                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0013                     	;# 
   619  0014                     	;# 
   620  0015                     	;# 
   621  0015                     	;# 
   622  0016                     	;# 
   623  0016                     	;# 
   624  0017                     	;# 
   625  0018                     	;# 
   626  0019                     	;# 
   627  0019                     	;# 
   628  001A                     	;# 
   629  001B                     	;# 
   630  001C                     	;# 
   631  001D                     	;# 
   632  001E                     	;# 
   633  001F                     	;# 
   634  008C                     	;# 
   635  008E                     	;# 
   636  0090                     	;# 
   637  0091                     	;# 
   638  0092                     	;# 
   639  0093                     	;# 
   640  0094                     	;# 
   641  0097                     	;# 
   642  009B                     	;# 
   643  009B                     	;# 
   644  009C                     	;# 
   645  009D                     	;# 
   646  009E                     	;# 
   647  009F                     	;# 
   648  010C                     	;# 
   649  010E                     	;# 
   650  0111                     	;# 
   651  0112                     	;# 
   652  0113                     	;# 
   653  0114                     	;# 
   654  0115                     	;# 
   655  0116                     	;# 
   656  0117                     	;# 
   657  0118                     	;# 
   658  0119                     	;# 
   659  018C                     	;# 
   660  018E                     	;# 
   661  0199                     	;# 
   662  0199                     	;# 
   663  0199                     	;# 
   664  019A                     	;# 
   665  019A                     	;# 
   666  019A                     	;# 
   667  019B                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019C                     	;# 
   673  019C                     	;# 
   674  019C                     	;# 
   675  019D                     	;# 
   676  019D                     	;# 
   677  019D                     	;# 
   678  019E                     	;# 
   679  019E                     	;# 
   680  019E                     	;# 
   681  019F                     	;# 
   682  019F                     	;# 
   683  019F                     	;# 
   684  019F                     	;# 
   685  019F                     	;# 
   686  020C                     	;# 
   687  020E                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0212                     	;# 
   692  0213                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0214                     	;# 
   696  0215                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0217                     	;# 
   704  028C                     	;# 
   705  028E                     	;# 
   706  0291                     	;# 
   707  0291                     	;# 
   708  0292                     	;# 
   709  0293                     	;# 
   710  0294                     	;# 
   711  0295                     	;# 
   712  0295                     	;# 
   713  0296                     	;# 
   714  0297                     	;# 
   715  0298                     	;# 
   716  030C                     	;# 
   717  030E                     	;# 
   718  038C                     	;# 
   719  038E                     	;# 
   720  0391                     	;# 
   721  0392                     	;# 
   722  0393                     	;# 
   723  0397                     	;# 
   724  0398                     	;# 
   725  0399                     	;# 
   726  039A                     	;# 
   727  039C                     	;# 
   728  039D                     	;# 
   729  039E                     	;# 
   730  039F                     	;# 
   731  0498                     	;# 
   732  0498                     	;# 
   733  0499                     	;# 
   734  049A                     	;# 
   735  049B                     	;# 
   736  049B                     	;# 
   737  049C                     	;# 
   738  049D                     	;# 
   739  049E                     	;# 
   740  049F                     	;# 
   741  0617                     	;# 
   742  0618                     	;# 
   743  0619                     	;# 
   744  0619                     	;# 
   745  061A                     	;# 
   746  061B                     	;# 
   747  061C                     	;# 
   748  061C                     	;# 
   749  0691                     	;# 
   750  0692                     	;# 
   751  0693                     	;# 
   752  0694                     	;# 
   753  0695                     	;# 
   754  0696                     	;# 
   755  0697                     	;# 
   756  0698                     	;# 
   757  0699                     	;# 
   758  0891                     	;# 
   759  0891                     	;# 
   760  0891                     	;# 
   761  0891                     	;# 
   762  0891                     	;# 
   763  0891                     	;# 
   764  0892                     	;# 
   765  0892                     	;# 
   766  0892                     	;# 
   767  0893                     	;# 
   768  0893                     	;# 
   769  0893                     	;# 
   770  0893                     	;# 
   771  0893                     	;# 
   772  0893                     	;# 
   773  0894                     	;# 
   774  0894                     	;# 
   775  0894                     	;# 
   776  0895                     	;# 
   777  0895                     	;# 
   778  0895                     	;# 
   779  0896                     	;# 
   780  0896                     	;# 
   781  0896                     	;# 
   782  089B                     	;# 
   783  0911                     	;# 
   784  0912                     	;# 
   785  0913                     	;# 
   786  0914                     	;# 
   787  0915                     	;# 
   788  0916                     	;# 
   789  0918                     	;# 
   790  0919                     	;# 
   791  091A                     	;# 
   792  091B                     	;# 
   793  091C                     	;# 
   794  091D                     	;# 
   795  091E                     	;# 
   796  091F                     	;# 
   797  0E0F                     	;# 
   798  0E10                     	;# 
   799  0E11                     	;# 
   800  0E12                     	;# 
   801  0E13                     	;# 
   802  0E14                     	;# 
   803  0E15                     	;# 
   804  0E18                     	;# 
   805  0E1A                     	;# 
   806  0E1B                     	;# 
   807  0E1C                     	;# 
   808  0E20                     	;# 
   809  0E21                     	;# 
   810  0E22                     	;# 
   811  0E24                     	;# 
   812  0E25                     	;# 
   813  0E28                     	;# 
   814  0E29                     	;# 
   815  0E2A                     	;# 
   816  0E2B                     	;# 
   817  0E90                     	;# 
   818  0E91                     	;# 
   819  0E92                     	;# 
   820  0E94                     	;# 
   821  0E95                     	;# 
   822  0EA0                     	;# 
   823  0EA1                     	;# 
   824  0EA2                     	;# 
   825  0EA3                     	;# 
   826  0EA4                     	;# 
   827  0EA5                     	;# 
   828  0F0F                     	;# 
   829  0F10                     	;# 
   830  0F11                     	;# 
   831  0F12                     	;# 
   832  0F13                     	;# 
   833  0F14                     	;# 
   834  0F15                     	;# 
   835  0F16                     	;# 
   836  0F17                     	;# 
   837  0F18                     	;# 
   838  0F19                     	;# 
   839  0F1A                     	;# 
   840  0F1B                     	;# 
   841  0F1C                     	;# 
   842  0F1D                     	;# 
   843  0F1E                     	;# 
   844  0F1F                     	;# 
   845  0F20                     	;# 
   846  0F21                     	;# 
   847  0F22                     	;# 
   848  0F23                     	;# 
   849  0FE4                     	;# 
   850  0FE5                     	;# 
   851  0FE6                     	;# 
   852  0FE7                     	;# 
   853  0FE8                     	;# 
   854  0FE9                     	;# 
   855  0FEA                     	;# 
   856  0FEB                     	;# 
   857  0FED                     	;# 
   858  0FEE                     	;# 
   859  0FEF                     	;# 
   860  0000                     	;# 
   861  0001                     	;# 
   862  0002                     	;# 
   863  0003                     	;# 
   864  0004                     	;# 
   865  0005                     	;# 
   866  0006                     	;# 
   867  0007                     	;# 
   868  0008                     	;# 
   869  0009                     	;# 
   870  000A                     	;# 
   871  000B                     	;# 
   872  000C                     	;# 
   873  000E                     	;# 
   874  0010                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0013                     	;# 
   878  0014                     	;# 
   879  0015                     	;# 
   880  0015                     	;# 
   881  0016                     	;# 
   882  0016                     	;# 
   883  0017                     	;# 
   884  0018                     	;# 
   885  0019                     	;# 
   886  0019                     	;# 
   887  001A                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001D                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008E                     	;# 
   895  0090                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0097                     	;# 
   901  009B                     	;# 
   902  009B                     	;# 
   903  009C                     	;# 
   904  009D                     	;# 
   905  009E                     	;# 
   906  009F                     	;# 
   907  010C                     	;# 
   908  010E                     	;# 
   909  0111                     	;# 
   910  0112                     	;# 
   911  0113                     	;# 
   912  0114                     	;# 
   913  0115                     	;# 
   914  0116                     	;# 
   915  0117                     	;# 
   916  0118                     	;# 
   917  0119                     	;# 
   918  018C                     	;# 
   919  018E                     	;# 
   920  0199                     	;# 
   921  0199                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019A                     	;# 
   925  019A                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019B                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019C                     	;# 
   932  019C                     	;# 
   933  019C                     	;# 
   934  019D                     	;# 
   935  019D                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019E                     	;# 
   939  019E                     	;# 
   940  019F                     	;# 
   941  019F                     	;# 
   942  019F                     	;# 
   943  019F                     	;# 
   944  019F                     	;# 
   945  020C                     	;# 
   946  020E                     	;# 
   947  0211                     	;# 
   948  0211                     	;# 
   949  0212                     	;# 
   950  0212                     	;# 
   951  0213                     	;# 
   952  0213                     	;# 
   953  0214                     	;# 
   954  0214                     	;# 
   955  0215                     	;# 
   956  0215                     	;# 
   957  0215                     	;# 
   958  0215                     	;# 
   959  0216                     	;# 
   960  0216                     	;# 
   961  0217                     	;# 
   962  0217                     	;# 
   963  028C                     	;# 
   964  028E                     	;# 
   965  0291                     	;# 
   966  0291                     	;# 
   967  0292                     	;# 
   968  0293                     	;# 
   969  0294                     	;# 
   970  0295                     	;# 
   971  0295                     	;# 
   972  0296                     	;# 
   973  0297                     	;# 
   974  0298                     	;# 
   975  030C                     	;# 
   976  030E                     	;# 
   977  038C                     	;# 
   978  038E                     	;# 
   979  0391                     	;# 
   980  0392                     	;# 
   981  0393                     	;# 
   982  0397                     	;# 
   983  0398                     	;# 
   984  0399                     	;# 
   985  039A                     	;# 
   986  039C                     	;# 
   987  039D                     	;# 
   988  039E                     	;# 
   989  039F                     	;# 
   990  0498                     	;# 
   991  0498                     	;# 
   992  0499                     	;# 
   993  049A                     	;# 
   994  049B                     	;# 
   995  049B                     	;# 
   996  049C                     	;# 
   997  049D                     	;# 
   998  049E                     	;# 
   999  049F                     	;# 
  1000  0617                     	;# 
  1001  0618                     	;# 
  1002  0619                     	;# 
  1003  0619                     	;# 
  1004  061A                     	;# 
  1005  061B                     	;# 
  1006  061C                     	;# 
  1007  061C                     	;# 
  1008  0691                     	;# 
  1009  0692                     	;# 
  1010  0693                     	;# 
  1011  0694                     	;# 
  1012  0695                     	;# 
  1013  0696                     	;# 
  1014  0697                     	;# 
  1015  0698                     	;# 
  1016  0699                     	;# 
  1017  0891                     	;# 
  1018  0891                     	;# 
  1019  0891                     	;# 
  1020  0891                     	;# 
  1021  0891                     	;# 
  1022  0891                     	;# 
  1023  0892                     	;# 
  1024  0892                     	;# 
  1025  0892                     	;# 
  1026  0893                     	;# 
  1027  0893                     	;# 
  1028  0893                     	;# 
  1029  0893                     	;# 
  1030  0893                     	;# 
  1031  0893                     	;# 
  1032  0894                     	;# 
  1033  0894                     	;# 
  1034  0894                     	;# 
  1035  0895                     	;# 
  1036  0895                     	;# 
  1037  0895                     	;# 
  1038  0896                     	;# 
  1039  0896                     	;# 
  1040  0896                     	;# 
  1041  089B                     	;# 
  1042  0911                     	;# 
  1043  0912                     	;# 
  1044  0913                     	;# 
  1045  0914                     	;# 
  1046  0915                     	;# 
  1047  0916                     	;# 
  1048  0918                     	;# 
  1049  0919                     	;# 
  1050  091A                     	;# 
  1051  091B                     	;# 
  1052  091C                     	;# 
  1053  091D                     	;# 
  1054  091E                     	;# 
  1055  091F                     	;# 
  1056  0E0F                     	;# 
  1057  0E10                     	;# 
  1058  0E11                     	;# 
  1059  0E12                     	;# 
  1060  0E13                     	;# 
  1061  0E14                     	;# 
  1062  0E15                     	;# 
  1063  0E18                     	;# 
  1064  0E1A                     	;# 
  1065  0E1B                     	;# 
  1066  0E1C                     	;# 
  1067  0E20                     	;# 
  1068  0E21                     	;# 
  1069  0E22                     	;# 
  1070  0E24                     	;# 
  1071  0E25                     	;# 
  1072  0E28                     	;# 
  1073  0E29                     	;# 
  1074  0E2A                     	;# 
  1075  0E2B                     	;# 
  1076  0E90                     	;# 
  1077  0E91                     	;# 
  1078  0E92                     	;# 
  1079  0E94                     	;# 
  1080  0E95                     	;# 
  1081  0EA0                     	;# 
  1082  0EA1                     	;# 
  1083  0EA2                     	;# 
  1084  0EA3                     	;# 
  1085  0EA4                     	;# 
  1086  0EA5                     	;# 
  1087  0F0F                     	;# 
  1088  0F10                     	;# 
  1089  0F11                     	;# 
  1090  0F12                     	;# 
  1091  0F13                     	;# 
  1092  0F14                     	;# 
  1093  0F15                     	;# 
  1094  0F16                     	;# 
  1095  0F17                     	;# 
  1096  0F18                     	;# 
  1097  0F19                     	;# 
  1098  0F1A                     	;# 
  1099  0F1B                     	;# 
  1100  0F1C                     	;# 
  1101  0F1D                     	;# 
  1102  0F1E                     	;# 
  1103  0F1F                     	;# 
  1104  0F20                     	;# 
  1105  0F21                     	;# 
  1106  0F22                     	;# 
  1107  0F23                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000E                     	;# 
  1133  0010                     	;# 
  1134  0011                     	;# 
  1135  0012                     	;# 
  1136  0013                     	;# 
  1137  0014                     	;# 
  1138  0015                     	;# 
  1139  0015                     	;# 
  1140  0016                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  0019                     	;# 
  1145  0019                     	;# 
  1146  001A                     	;# 
  1147  001B                     	;# 
  1148  001C                     	;# 
  1149  001D                     	;# 
  1150  001E                     	;# 
  1151  001F                     	;# 
  1152  008C                     	;# 
  1153  008E                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0093                     	;# 
  1158  0094                     	;# 
  1159  0097                     	;# 
  1160  009B                     	;# 
  1161  009B                     	;# 
  1162  009C                     	;# 
  1163  009D                     	;# 
  1164  009E                     	;# 
  1165  009F                     	;# 
  1166  010C                     	;# 
  1167  010E                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0113                     	;# 
  1171  0114                     	;# 
  1172  0115                     	;# 
  1173  0116                     	;# 
  1174  0117                     	;# 
  1175  0118                     	;# 
  1176  0119                     	;# 
  1177  018C                     	;# 
  1178  018E                     	;# 
  1179  0199                     	;# 
  1180  0199                     	;# 
  1181  0199                     	;# 
  1182  019A                     	;# 
  1183  019A                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019B                     	;# 
  1187  019B                     	;# 
  1188  019B                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  019C                     	;# 
  1192  019C                     	;# 
  1193  019D                     	;# 
  1194  019D                     	;# 
  1195  019D                     	;# 
  1196  019E                     	;# 
  1197  019E                     	;# 
  1198  019E                     	;# 
  1199  019F                     	;# 
  1200  019F                     	;# 
  1201  019F                     	;# 
  1202  019F                     	;# 
  1203  019F                     	;# 
  1204  020C                     	;# 
  1205  020E                     	;# 
  1206  0211                     	;# 
  1207  0211                     	;# 
  1208  0212                     	;# 
  1209  0212                     	;# 
  1210  0213                     	;# 
  1211  0213                     	;# 
  1212  0214                     	;# 
  1213  0214                     	;# 
  1214  0215                     	;# 
  1215  0215                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0216                     	;# 
  1219  0216                     	;# 
  1220  0217                     	;# 
  1221  0217                     	;# 
  1222  028C                     	;# 
  1223  028E                     	;# 
  1224  0291                     	;# 
  1225  0291                     	;# 
  1226  0292                     	;# 
  1227  0293                     	;# 
  1228  0294                     	;# 
  1229  0295                     	;# 
  1230  0295                     	;# 
  1231  0296                     	;# 
  1232  0297                     	;# 
  1233  0298                     	;# 
  1234  030C                     	;# 
  1235  030E                     	;# 
  1236  038C                     	;# 
  1237  038E                     	;# 
  1238  0391                     	;# 
  1239  0392                     	;# 
  1240  0393                     	;# 
  1241  0397                     	;# 
  1242  0398                     	;# 
  1243  0399                     	;# 
  1244  039A                     	;# 
  1245  039C                     	;# 
  1246  039D                     	;# 
  1247  039E                     	;# 
  1248  039F                     	;# 
  1249  0498                     	;# 
  1250  0498                     	;# 
  1251  0499                     	;# 
  1252  049A                     	;# 
  1253  049B                     	;# 
  1254  049B                     	;# 
  1255  049C                     	;# 
  1256  049D                     	;# 
  1257  049E                     	;# 
  1258  049F                     	;# 
  1259  0617                     	;# 
  1260  0618                     	;# 
  1261  0619                     	;# 
  1262  0619                     	;# 
  1263  061A                     	;# 
  1264  061B                     	;# 
  1265  061C                     	;# 
  1266  061C                     	;# 
  1267  0691                     	;# 
  1268  0692                     	;# 
  1269  0693                     	;# 
  1270  0694                     	;# 
  1271  0695                     	;# 
  1272  0696                     	;# 
  1273  0697                     	;# 
  1274  0698                     	;# 
  1275  0699                     	;# 
  1276  0891                     	;# 
  1277  0891                     	;# 
  1278  0891                     	;# 
  1279  0891                     	;# 
  1280  0891                     	;# 
  1281  0891                     	;# 
  1282  0892                     	;# 
  1283  0892                     	;# 
  1284  0892                     	;# 
  1285  0893                     	;# 
  1286  0893                     	;# 
  1287  0893                     	;# 
  1288  0893                     	;# 
  1289  0893                     	;# 
  1290  0893                     	;# 
  1291  0894                     	;# 
  1292  0894                     	;# 
  1293  0894                     	;# 
  1294  0895                     	;# 
  1295  0895                     	;# 
  1296  0895                     	;# 
  1297  0896                     	;# 
  1298  0896                     	;# 
  1299  0896                     	;# 
  1300  089B                     	;# 
  1301  0911                     	;# 
  1302  0912                     	;# 
  1303  0913                     	;# 
  1304  0914                     	;# 
  1305  0915                     	;# 
  1306  0916                     	;# 
  1307  0918                     	;# 
  1308  0919                     	;# 
  1309  091A                     	;# 
  1310  091B                     	;# 
  1311  091C                     	;# 
  1312  091D                     	;# 
  1313  091E                     	;# 
  1314  091F                     	;# 
  1315  0E0F                     	;# 
  1316  0E10                     	;# 
  1317  0E11                     	;# 
  1318  0E12                     	;# 
  1319  0E13                     	;# 
  1320  0E14                     	;# 
  1321  0E15                     	;# 
  1322  0E18                     	;# 
  1323  0E1A                     	;# 
  1324  0E1B                     	;# 
  1325  0E1C                     	;# 
  1326  0E20                     	;# 
  1327  0E21                     	;# 
  1328  0E22                     	;# 
  1329  0E24                     	;# 
  1330  0E25                     	;# 
  1331  0E28                     	;# 
  1332  0E29                     	;# 
  1333  0E2A                     	;# 
  1334  0E2B                     	;# 
  1335  0E90                     	;# 
  1336  0E91                     	;# 
  1337  0E92                     	;# 
  1338  0E94                     	;# 
  1339  0E95                     	;# 
  1340  0EA0                     	;# 
  1341  0EA1                     	;# 
  1342  0EA2                     	;# 
  1343  0EA3                     	;# 
  1344  0EA4                     	;# 
  1345  0EA5                     	;# 
  1346  0F0F                     	;# 
  1347  0F10                     	;# 
  1348  0F11                     	;# 
  1349  0F12                     	;# 
  1350  0F13                     	;# 
  1351  0F14                     	;# 
  1352  0F15                     	;# 
  1353  0F16                     	;# 
  1354  0F17                     	;# 
  1355  0F18                     	;# 
  1356  0F19                     	;# 
  1357  0F1A                     	;# 
  1358  0F1B                     	;# 
  1359  0F1C                     	;# 
  1360  0F1D                     	;# 
  1361  0F1E                     	;# 
  1362  0F1F                     	;# 
  1363  0F20                     	;# 
  1364  0F21                     	;# 
  1365  0F22                     	;# 
  1366  0F23                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000E                     	;# 
  1392  0010                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0013                     	;# 
  1396  0014                     	;# 
  1397  0015                     	;# 
  1398  0015                     	;# 
  1399  0016                     	;# 
  1400  0016                     	;# 
  1401  0017                     	;# 
  1402  0018                     	;# 
  1403  0019                     	;# 
  1404  0019                     	;# 
  1405  001A                     	;# 
  1406  001B                     	;# 
  1407  001C                     	;# 
  1408  001D                     	;# 
  1409  001E                     	;# 
  1410  001F                     	;# 
  1411  008C                     	;# 
  1412  008E                     	;# 
  1413  0090                     	;# 
  1414  0091                     	;# 
  1415  0092                     	;# 
  1416  0093                     	;# 
  1417  0094                     	;# 
  1418  0097                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  009F                     	;# 
  1425  010C                     	;# 
  1426  010E                     	;# 
  1427  0111                     	;# 
  1428  0112                     	;# 
  1429  0113                     	;# 
  1430  0114                     	;# 
  1431  0115                     	;# 
  1432  0116                     	;# 
  1433  0117                     	;# 
  1434  0118                     	;# 
  1435  0119                     	;# 
  1436  018C                     	;# 
  1437  018E                     	;# 
  1438  0199                     	;# 
  1439  0199                     	;# 
  1440  0199                     	;# 
  1441  019A                     	;# 
  1442  019A                     	;# 
  1443  019A                     	;# 
  1444  019B                     	;# 
  1445  019B                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019C                     	;# 
  1450  019C                     	;# 
  1451  019C                     	;# 
  1452  019D                     	;# 
  1453  019D                     	;# 
  1454  019D                     	;# 
  1455  019E                     	;# 
  1456  019E                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  019F                     	;# 
  1460  019F                     	;# 
  1461  019F                     	;# 
  1462  019F                     	;# 
  1463  020C                     	;# 
  1464  020E                     	;# 
  1465  0211                     	;# 
  1466  0211                     	;# 
  1467  0212                     	;# 
  1468  0212                     	;# 
  1469  0213                     	;# 
  1470  0213                     	;# 
  1471  0214                     	;# 
  1472  0214                     	;# 
  1473  0215                     	;# 
  1474  0215                     	;# 
  1475  0215                     	;# 
  1476  0215                     	;# 
  1477  0216                     	;# 
  1478  0216                     	;# 
  1479  0217                     	;# 
  1480  0217                     	;# 
  1481  028C                     	;# 
  1482  028E                     	;# 
  1483  0291                     	;# 
  1484  0291                     	;# 
  1485  0292                     	;# 
  1486  0293                     	;# 
  1487  0294                     	;# 
  1488  0295                     	;# 
  1489  0295                     	;# 
  1490  0296                     	;# 
  1491  0297                     	;# 
  1492  0298                     	;# 
  1493  030C                     	;# 
  1494  030E                     	;# 
  1495  038C                     	;# 
  1496  038E                     	;# 
  1497  0391                     	;# 
  1498  0392                     	;# 
  1499  0393                     	;# 
  1500  0397                     	;# 
  1501  0398                     	;# 
  1502  0399                     	;# 
  1503  039A                     	;# 
  1504  039C                     	;# 
  1505  039D                     	;# 
  1506  039E                     	;# 
  1507  039F                     	;# 
  1508  0498                     	;# 
  1509  0498                     	;# 
  1510  0499                     	;# 
  1511  049A                     	;# 
  1512  049B                     	;# 
  1513  049B                     	;# 
  1514  049C                     	;# 
  1515  049D                     	;# 
  1516  049E                     	;# 
  1517  049F                     	;# 
  1518  0617                     	;# 
  1519  0618                     	;# 
  1520  0619                     	;# 
  1521  0619                     	;# 
  1522  061A                     	;# 
  1523  061B                     	;# 
  1524  061C                     	;# 
  1525  061C                     	;# 
  1526  0691                     	;# 
  1527  0692                     	;# 
  1528  0693                     	;# 
  1529  0694                     	;# 
  1530  0695                     	;# 
  1531  0696                     	;# 
  1532  0697                     	;# 
  1533  0698                     	;# 
  1534  0699                     	;# 
  1535  0891                     	;# 
  1536  0891                     	;# 
  1537  0891                     	;# 
  1538  0891                     	;# 
  1539  0891                     	;# 
  1540  0891                     	;# 
  1541  0892                     	;# 
  1542  0892                     	;# 
  1543  0892                     	;# 
  1544  0893                     	;# 
  1545  0893                     	;# 
  1546  0893                     	;# 
  1547  0893                     	;# 
  1548  0893                     	;# 
  1549  0893                     	;# 
  1550  0894                     	;# 
  1551  0894                     	;# 
  1552  0894                     	;# 
  1553  0895                     	;# 
  1554  0895                     	;# 
  1555  0895                     	;# 
  1556  0896                     	;# 
  1557  0896                     	;# 
  1558  0896                     	;# 
  1559  089B                     	;# 
  1560  0911                     	;# 
  1561  0912                     	;# 
  1562  0913                     	;# 
  1563  0914                     	;# 
  1564  0915                     	;# 
  1565  0916                     	;# 
  1566  0918                     	;# 
  1567  0919                     	;# 
  1568  091A                     	;# 
  1569  091B                     	;# 
  1570  091C                     	;# 
  1571  091D                     	;# 
  1572  091E                     	;# 
  1573  091F                     	;# 
  1574  0E0F                     	;# 
  1575  0E10                     	;# 
  1576  0E11                     	;# 
  1577  0E12                     	;# 
  1578  0E13                     	;# 
  1579  0E14                     	;# 
  1580  0E15                     	;# 
  1581  0E18                     	;# 
  1582  0E1A                     	;# 
  1583  0E1B                     	;# 
  1584  0E1C                     	;# 
  1585  0E20                     	;# 
  1586  0E21                     	;# 
  1587  0E22                     	;# 
  1588  0E24                     	;# 
  1589  0E25                     	;# 
  1590  0E28                     	;# 
  1591  0E29                     	;# 
  1592  0E2A                     	;# 
  1593  0E2B                     	;# 
  1594  0E90                     	;# 
  1595  0E91                     	;# 
  1596  0E92                     	;# 
  1597  0E94                     	;# 
  1598  0E95                     	;# 
  1599  0EA0                     	;# 
  1600  0EA1                     	;# 
  1601  0EA2                     	;# 
  1602  0EA3                     	;# 
  1603  0EA4                     	;# 
  1604  0EA5                     	;# 
  1605  0F0F                     	;# 
  1606  0F10                     	;# 
  1607  0F11                     	;# 
  1608  0F12                     	;# 
  1609  0F13                     	;# 
  1610  0F14                     	;# 
  1611  0F15                     	;# 
  1612  0F16                     	;# 
  1613  0F17                     	;# 
  1614  0F18                     	;# 
  1615  0F19                     	;# 
  1616  0F1A                     	;# 
  1617  0F1B                     	;# 
  1618  0F1C                     	;# 
  1619  0F1D                     	;# 
  1620  0F1E                     	;# 
  1621  0F1F                     	;# 
  1622  0F20                     	;# 
  1623  0F21                     	;# 
  1624  0F22                     	;# 
  1625  0F23                     	;# 
  1626  0FE4                     	;# 
  1627  0FE5                     	;# 
  1628  0FE6                     	;# 
  1629  0FE7                     	;# 
  1630  0FE8                     	;# 
  1631  0FE9                     	;# 
  1632  0FEA                     	;# 
  1633  0FEB                     	;# 
  1634  0FED                     	;# 
  1635  0FEE                     	;# 
  1636  0FEF                     	;# 
  1637  0000                     	;# 
  1638  0001                     	;# 
  1639  0002                     	;# 
  1640  0003                     	;# 
  1641  0004                     	;# 
  1642  0005                     	;# 
  1643  0006                     	;# 
  1644  0007                     	;# 
  1645  0008                     	;# 
  1646  0009                     	;# 
  1647  000A                     	;# 
  1648  000B                     	;# 
  1649  000C                     	;# 
  1650  000E                     	;# 
  1651  0010                     	;# 
  1652  0011                     	;# 
  1653  0012                     	;# 
  1654  0013                     	;# 
  1655  0014                     	;# 
  1656  0015                     	;# 
  1657  0015                     	;# 
  1658  0016                     	;# 
  1659  0016                     	;# 
  1660  0017                     	;# 
  1661  0018                     	;# 
  1662  0019                     	;# 
  1663  0019                     	;# 
  1664  001A                     	;# 
  1665  001B                     	;# 
  1666  001C                     	;# 
  1667  001D                     	;# 
  1668  001E                     	;# 
  1669  001F                     	;# 
  1670  008C                     	;# 
  1671  008E                     	;# 
  1672  0090                     	;# 
  1673  0091                     	;# 
  1674  0092                     	;# 
  1675  0093                     	;# 
  1676  0094                     	;# 
  1677  0097                     	;# 
  1678  009B                     	;# 
  1679  009B                     	;# 
  1680  009C                     	;# 
  1681  009D                     	;# 
  1682  009E                     	;# 
  1683  009F                     	;# 
  1684  010C                     	;# 
  1685  010E                     	;# 
  1686  0111                     	;# 
  1687  0112                     	;# 
  1688  0113                     	;# 
  1689  0114                     	;# 
  1690  0115                     	;# 
  1691  0116                     	;# 
  1692  0117                     	;# 
  1693  0118                     	;# 
  1694  0119                     	;# 
  1695  018C                     	;# 
  1696  018E                     	;# 
  1697  0199                     	;# 
  1698  0199                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019A                     	;# 
  1702  019A                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019B                     	;# 
  1706  019B                     	;# 
  1707  019B                     	;# 
  1708  019C                     	;# 
  1709  019C                     	;# 
  1710  019C                     	;# 
  1711  019D                     	;# 
  1712  019D                     	;# 
  1713  019D                     	;# 
  1714  019E                     	;# 
  1715  019E                     	;# 
  1716  019E                     	;# 
  1717  019F                     	;# 
  1718  019F                     	;# 
  1719  019F                     	;# 
  1720  019F                     	;# 
  1721  019F                     	;# 
  1722  020C                     	;# 
  1723  020E                     	;# 
  1724  0211                     	;# 
  1725  0211                     	;# 
  1726  0212                     	;# 
  1727  0212                     	;# 
  1728  0213                     	;# 
  1729  0213                     	;# 
  1730  0214                     	;# 
  1731  0214                     	;# 
  1732  0215                     	;# 
  1733  0215                     	;# 
  1734  0215                     	;# 
  1735  0215                     	;# 
  1736  0216                     	;# 
  1737  0216                     	;# 
  1738  0217                     	;# 
  1739  0217                     	;# 
  1740  028C                     	;# 
  1741  028E                     	;# 
  1742  0291                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0295                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  030C                     	;# 
  1753  030E                     	;# 
  1754  038C                     	;# 
  1755  038E                     	;# 
  1756  0391                     	;# 
  1757  0392                     	;# 
  1758  0393                     	;# 
  1759  0397                     	;# 
  1760  0398                     	;# 
  1761  0399                     	;# 
  1762  039A                     	;# 
  1763  039C                     	;# 
  1764  039D                     	;# 
  1765  039E                     	;# 
  1766  039F                     	;# 
  1767  0498                     	;# 
  1768  0498                     	;# 
  1769  0499                     	;# 
  1770  049A                     	;# 
  1771  049B                     	;# 
  1772  049B                     	;# 
  1773  049C                     	;# 
  1774  049D                     	;# 
  1775  049E                     	;# 
  1776  049F                     	;# 
  1777  0617                     	;# 
  1778  0618                     	;# 
  1779  0619                     	;# 
  1780  0619                     	;# 
  1781  061A                     	;# 
  1782  061B                     	;# 
  1783  061C                     	;# 
  1784  061C                     	;# 
  1785  0691                     	;# 
  1786  0692                     	;# 
  1787  0693                     	;# 
  1788  0694                     	;# 
  1789  0695                     	;# 
  1790  0696                     	;# 
  1791  0697                     	;# 
  1792  0698                     	;# 
  1793  0699                     	;# 
  1794  0891                     	;# 
  1795  0891                     	;# 
  1796  0891                     	;# 
  1797  0891                     	;# 
  1798  0891                     	;# 
  1799  0891                     	;# 
  1800  0892                     	;# 
  1801  0892                     	;# 
  1802  0892                     	;# 
  1803  0893                     	;# 
  1804  0893                     	;# 
  1805  0893                     	;# 
  1806  0893                     	;# 
  1807  0893                     	;# 
  1808  0893                     	;# 
  1809  0894                     	;# 
  1810  0894                     	;# 
  1811  0894                     	;# 
  1812  0895                     	;# 
  1813  0895                     	;# 
  1814  0895                     	;# 
  1815  0896                     	;# 
  1816  0896                     	;# 
  1817  0896                     	;# 
  1818  089B                     	;# 
  1819  0911                     	;# 
  1820  0912                     	;# 
  1821  0913                     	;# 
  1822  0914                     	;# 
  1823  0915                     	;# 
  1824  0916                     	;# 
  1825  0918                     	;# 
  1826  0919                     	;# 
  1827  091A                     	;# 
  1828  091B                     	;# 
  1829  091C                     	;# 
  1830  091D                     	;# 
  1831  091E                     	;# 
  1832  091F                     	;# 
  1833  0E0F                     	;# 
  1834  0E10                     	;# 
  1835  0E11                     	;# 
  1836  0E12                     	;# 
  1837  0E13                     	;# 
  1838  0E14                     	;# 
  1839  0E15                     	;# 
  1840  0E18                     	;# 
  1841  0E1A                     	;# 
  1842  0E1B                     	;# 
  1843  0E1C                     	;# 
  1844  0E20                     	;# 
  1845  0E21                     	;# 
  1846  0E22                     	;# 
  1847  0E24                     	;# 
  1848  0E25                     	;# 
  1849  0E28                     	;# 
  1850  0E29                     	;# 
  1851  0E2A                     	;# 
  1852  0E2B                     	;# 
  1853  0E90                     	;# 
  1854  0E91                     	;# 
  1855  0E92                     	;# 
  1856  0E94                     	;# 
  1857  0E95                     	;# 
  1858  0EA0                     	;# 
  1859  0EA1                     	;# 
  1860  0EA2                     	;# 
  1861  0EA3                     	;# 
  1862  0EA4                     	;# 
  1863  0EA5                     	;# 
  1864  0F0F                     	;# 
  1865  0F10                     	;# 
  1866  0F11                     	;# 
  1867  0F12                     	;# 
  1868  0F13                     	;# 
  1869  0F14                     	;# 
  1870  0F15                     	;# 
  1871  0F16                     	;# 
  1872  0F17                     	;# 
  1873  0F18                     	;# 
  1874  0F19                     	;# 
  1875  0F1A                     	;# 
  1876  0F1B                     	;# 
  1877  0F1C                     	;# 
  1878  0F1D                     	;# 
  1879  0F1E                     	;# 
  1880  0F1F                     	;# 
  1881  0F20                     	;# 
  1882  0F21                     	;# 
  1883  0F22                     	;# 
  1884  0F23                     	;# 
  1885  0FE4                     	;# 
  1886  0FE5                     	;# 
  1887  0FE6                     	;# 
  1888  0FE7                     	;# 
  1889  0FE8                     	;# 
  1890  0FE9                     	;# 
  1891  0FEA                     	;# 
  1892  0FEB                     	;# 
  1893  0FED                     	;# 
  1894  0FEE                     	;# 
  1895  0FEF                     	;# 
  1896  0000                     	;# 
  1897  0001                     	;# 
  1898  0002                     	;# 
  1899  0003                     	;# 
  1900  0004                     	;# 
  1901  0005                     	;# 
  1902  0006                     	;# 
  1903  0007                     	;# 
  1904  0008                     	;# 
  1905  0009                     	;# 
  1906  000A                     	;# 
  1907  000B                     	;# 
  1908  000C                     	;# 
  1909  000E                     	;# 
  1910  0010                     	;# 
  1911  0011                     	;# 
  1912  0012                     	;# 
  1913  0013                     	;# 
  1914  0014                     	;# 
  1915  0015                     	;# 
  1916  0015                     	;# 
  1917  0016                     	;# 
  1918  0016                     	;# 
  1919  0017                     	;# 
  1920  0018                     	;# 
  1921  0019                     	;# 
  1922  0019                     	;# 
  1923  001A                     	;# 
  1924  001B                     	;# 
  1925  001C                     	;# 
  1926  001D                     	;# 
  1927  001E                     	;# 
  1928  001F                     	;# 
  1929  008C                     	;# 
  1930  008E                     	;# 
  1931  0090                     	;# 
  1932  0091                     	;# 
  1933  0092                     	;# 
  1934  0093                     	;# 
  1935  0094                     	;# 
  1936  0097                     	;# 
  1937  009B                     	;# 
  1938  009B                     	;# 
  1939  009C                     	;# 
  1940  009D                     	;# 
  1941  009E                     	;# 
  1942  009F                     	;# 
  1943  010C                     	;# 
  1944  010E                     	;# 
  1945  0111                     	;# 
  1946  0112                     	;# 
  1947  0113                     	;# 
  1948  0114                     	;# 
  1949  0115                     	;# 
  1950  0116                     	;# 
  1951  0117                     	;# 
  1952  0118                     	;# 
  1953  0119                     	;# 
  1954  018C                     	;# 
  1955  018E                     	;# 
  1956  0199                     	;# 
  1957  0199                     	;# 
  1958  0199                     	;# 
  1959  019A                     	;# 
  1960  019A                     	;# 
  1961  019A                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019C                     	;# 
  1968  019C                     	;# 
  1969  019C                     	;# 
  1970  019D                     	;# 
  1971  019D                     	;# 
  1972  019D                     	;# 
  1973  019E                     	;# 
  1974  019E                     	;# 
  1975  019E                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  020C                     	;# 
  1982  020E                     	;# 
  1983  0211                     	;# 
  1984  0211                     	;# 
  1985  0212                     	;# 
  1986  0212                     	;# 
  1987  0213                     	;# 
  1988  0213                     	;# 
  1989  0214                     	;# 
  1990  0214                     	;# 
  1991  0215                     	;# 
  1992  0215                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0216                     	;# 
  1996  0216                     	;# 
  1997  0217                     	;# 
  1998  0217                     	;# 
  1999  028C                     	;# 
  2000  028E                     	;# 
  2001  0291                     	;# 
  2002  0291                     	;# 
  2003  0292                     	;# 
  2004  0293                     	;# 
  2005  0294                     	;# 
  2006  0295                     	;# 
  2007  0295                     	;# 
  2008  0296                     	;# 
  2009  0297                     	;# 
  2010  0298                     	;# 
  2011  030C                     	;# 
  2012  030E                     	;# 
  2013  038C                     	;# 
  2014  038E                     	;# 
  2015  0391                     	;# 
  2016  0392                     	;# 
  2017  0393                     	;# 
  2018  0397                     	;# 
  2019  0398                     	;# 
  2020  0399                     	;# 
  2021  039A                     	;# 
  2022  039C                     	;# 
  2023  039D                     	;# 
  2024  039E                     	;# 
  2025  039F                     	;# 
  2026  0498                     	;# 
  2027  0498                     	;# 
  2028  0499                     	;# 
  2029  049A                     	;# 
  2030  049B                     	;# 
  2031  049B                     	;# 
  2032  049C                     	;# 
  2033  049D                     	;# 
  2034  049E                     	;# 
  2035  049F                     	;# 
  2036  0617                     	;# 
  2037  0618                     	;# 
  2038  0619                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061B                     	;# 
  2042  061C                     	;# 
  2043  061C                     	;# 
  2044  0691                     	;# 
  2045  0692                     	;# 
  2046  0693                     	;# 
  2047  0694                     	;# 
  2048  0695                     	;# 
  2049  0696                     	;# 
  2050  0697                     	;# 
  2051  0698                     	;# 
  2052  0699                     	;# 
  2053  0891                     	;# 
  2054  0891                     	;# 
  2055  0891                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0892                     	;# 
  2060  0892                     	;# 
  2061  0892                     	;# 
  2062  0893                     	;# 
  2063  0893                     	;# 
  2064  0893                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0894                     	;# 
  2069  0894                     	;# 
  2070  0894                     	;# 
  2071  0895                     	;# 
  2072  0895                     	;# 
  2073  0895                     	;# 
  2074  0896                     	;# 
  2075  0896                     	;# 
  2076  0896                     	;# 
  2077  089B                     	;# 
  2078  0911                     	;# 
  2079  0912                     	;# 
  2080  0913                     	;# 
  2081  0914                     	;# 
  2082  0915                     	;# 
  2083  0916                     	;# 
  2084  0918                     	;# 
  2085  0919                     	;# 
  2086  091A                     	;# 
  2087  091B                     	;# 
  2088  091C                     	;# 
  2089  091D                     	;# 
  2090  091E                     	;# 
  2091  091F                     	;# 
  2092  0E0F                     	;# 
  2093  0E10                     	;# 
  2094  0E11                     	;# 
  2095  0E12                     	;# 
  2096  0E13                     	;# 
  2097  0E14                     	;# 
  2098  0E15                     	;# 
  2099  0E18                     	;# 
  2100  0E1A                     	;# 
  2101  0E1B                     	;# 
  2102  0E1C                     	;# 
  2103  0E20                     	;# 
  2104  0E21                     	;# 
  2105  0E22                     	;# 
  2106  0E24                     	;# 
  2107  0E25                     	;# 
  2108  0E28                     	;# 
  2109  0E29                     	;# 
  2110  0E2A                     	;# 
  2111  0E2B                     	;# 
  2112  0E90                     	;# 
  2113  0E91                     	;# 
  2114  0E92                     	;# 
  2115  0E94                     	;# 
  2116  0E95                     	;# 
  2117  0EA0                     	;# 
  2118  0EA1                     	;# 
  2119  0EA2                     	;# 
  2120  0EA3                     	;# 
  2121  0EA4                     	;# 
  2122  0EA5                     	;# 
  2123  0F0F                     	;# 
  2124  0F10                     	;# 
  2125  0F11                     	;# 
  2126  0F12                     	;# 
  2127  0F13                     	;# 
  2128  0F14                     	;# 
  2129  0F15                     	;# 
  2130  0F16                     	;# 
  2131  0F17                     	;# 
  2132  0F18                     	;# 
  2133  0F19                     	;# 
  2134  0F1A                     	;# 
  2135  0F1B                     	;# 
  2136  0F1C                     	;# 
  2137  0F1D                     	;# 
  2138  0F1E                     	;# 
  2139  0F1F                     	;# 
  2140  0F20                     	;# 
  2141  0F21                     	;# 
  2142  0F22                     	;# 
  2143  0F23                     	;# 
  2144  0FE4                     	;# 
  2145  0FE5                     	;# 
  2146  0FE6                     	;# 
  2147  0FE7                     	;# 
  2148  0FE8                     	;# 
  2149  0FE9                     	;# 
  2150  0FEA                     	;# 
  2151  0FEB                     	;# 
  2152  0FED                     	;# 
  2153  0FEE                     	;# 
  2154  0FEF                     	;# 
  2155  0000                     	;# 
  2156  0001                     	;# 
  2157  0002                     	;# 
  2158  0003                     	;# 
  2159  0004                     	;# 
  2160  0005                     	;# 
  2161  0006                     	;# 
  2162  0007                     	;# 
  2163  0008                     	;# 
  2164  0009                     	;# 
  2165  000A                     	;# 
  2166  000B                     	;# 
  2167  000C                     	;# 
  2168  000E                     	;# 
  2169  0010                     	;# 
  2170  0011                     	;# 
  2171  0012                     	;# 
  2172  0013                     	;# 
  2173  0014                     	;# 
  2174  0015                     	;# 
  2175  0015                     	;# 
  2176  0016                     	;# 
  2177  0016                     	;# 
  2178  0017                     	;# 
  2179  0018                     	;# 
  2180  0019                     	;# 
  2181  0019                     	;# 
  2182  001A                     	;# 
  2183  001B                     	;# 
  2184  001C                     	;# 
  2185  001D                     	;# 
  2186  001E                     	;# 
  2187  001F                     	;# 
  2188  008C                     	;# 
  2189  008E                     	;# 
  2190  0090                     	;# 
  2191  0091                     	;# 
  2192  0092                     	;# 
  2193  0093                     	;# 
  2194  0094                     	;# 
  2195  0097                     	;# 
  2196  009B                     	;# 
  2197  009B                     	;# 
  2198  009C                     	;# 
  2199  009D                     	;# 
  2200  009E                     	;# 
  2201  009F                     	;# 
  2202  010C                     	;# 
  2203  010E                     	;# 
  2204  0111                     	;# 
  2205  0112                     	;# 
  2206  0113                     	;# 
  2207  0114                     	;# 
  2208  0115                     	;# 
  2209  0116                     	;# 
  2210  0117                     	;# 
  2211  0118                     	;# 
  2212  0119                     	;# 
  2213  018C                     	;# 
  2214  018E                     	;# 
  2215  0199                     	;# 
  2216  0199                     	;# 
  2217  0199                     	;# 
  2218  019A                     	;# 
  2219  019A                     	;# 
  2220  019A                     	;# 
  2221  019B                     	;# 
  2222  019B                     	;# 
  2223  019B                     	;# 
  2224  019B                     	;# 
  2225  019B                     	;# 
  2226  019C                     	;# 
  2227  019C                     	;# 
  2228  019C                     	;# 
  2229  019D                     	;# 
  2230  019D                     	;# 
  2231  019D                     	;# 
  2232  019E                     	;# 
  2233  019E                     	;# 
  2234  019E                     	;# 
  2235  019F                     	;# 
  2236  019F                     	;# 
  2237  019F                     	;# 
  2238  019F                     	;# 
  2239  019F                     	;# 
  2240  020C                     	;# 
  2241  020E                     	;# 
  2242  0211                     	;# 
  2243  0211                     	;# 
  2244  0212                     	;# 
  2245  0212                     	;# 
  2246  0213                     	;# 
  2247  0213                     	;# 
  2248  0214                     	;# 
  2249  0214                     	;# 
  2250  0215                     	;# 
  2251  0215                     	;# 
  2252  0215                     	;# 
  2253  0215                     	;# 
  2254  0216                     	;# 
  2255  0216                     	;# 
  2256  0217                     	;# 
  2257  0217                     	;# 
  2258  028C                     	;# 
  2259  028E                     	;# 
  2260  0291                     	;# 
  2261  0291                     	;# 
  2262  0292                     	;# 
  2263  0293                     	;# 
  2264  0294                     	;# 
  2265  0295                     	;# 
  2266  0295                     	;# 
  2267  0296                     	;# 
  2268  0297                     	;# 
  2269  0298                     	;# 
  2270  030C                     	;# 
  2271  030E                     	;# 
  2272  038C                     	;# 
  2273  038E                     	;# 
  2274  0391                     	;# 
  2275  0392                     	;# 
  2276  0393                     	;# 
  2277  0397                     	;# 
  2278  0398                     	;# 
  2279  0399                     	;# 
  2280  039A                     	;# 
  2281  039C                     	;# 
  2282  039D                     	;# 
  2283  039E                     	;# 
  2284  039F                     	;# 
  2285  0498                     	;# 
  2286  0498                     	;# 
  2287  0499                     	;# 
  2288  049A                     	;# 
  2289  049B                     	;# 
  2290  049B                     	;# 
  2291  049C                     	;# 
  2292  049D                     	;# 
  2293  049E                     	;# 
  2294  049F                     	;# 
  2295  0617                     	;# 
  2296  0618                     	;# 
  2297  0619                     	;# 
  2298  0619                     	;# 
  2299  061A                     	;# 
  2300  061B                     	;# 
  2301  061C                     	;# 
  2302  061C                     	;# 
  2303  0691                     	;# 
  2304  0692                     	;# 
  2305  0693                     	;# 
  2306  0694                     	;# 
  2307  0695                     	;# 
  2308  0696                     	;# 
  2309  0697                     	;# 
  2310  0698                     	;# 
  2311  0699                     	;# 
  2312  0891                     	;# 
  2313  0891                     	;# 
  2314  0891                     	;# 
  2315  0891                     	;# 
  2316  0891                     	;# 
  2317  0891                     	;# 
  2318  0892                     	;# 
  2319  0892                     	;# 
  2320  0892                     	;# 
  2321  0893                     	;# 
  2322  0893                     	;# 
  2323  0893                     	;# 
  2324  0893                     	;# 
  2325  0893                     	;# 
  2326  0893                     	;# 
  2327  0894                     	;# 
  2328  0894                     	;# 
  2329  0894                     	;# 
  2330  0895                     	;# 
  2331  0895                     	;# 
  2332  0895                     	;# 
  2333  0896                     	;# 
  2334  0896                     	;# 
  2335  0896                     	;# 
  2336  089B                     	;# 
  2337  0911                     	;# 
  2338  0912                     	;# 
  2339  0913                     	;# 
  2340  0914                     	;# 
  2341  0915                     	;# 
  2342  0916                     	;# 
  2343  0918                     	;# 
  2344  0919                     	;# 
  2345  091A                     	;# 
  2346  091B                     	;# 
  2347  091C                     	;# 
  2348  091D                     	;# 
  2349  091E                     	;# 
  2350  091F                     	;# 
  2351  0E0F                     	;# 
  2352  0E10                     	;# 
  2353  0E11                     	;# 
  2354  0E12                     	;# 
  2355  0E13                     	;# 
  2356  0E14                     	;# 
  2357  0E15                     	;# 
  2358  0E18                     	;# 
  2359  0E1A                     	;# 
  2360  0E1B                     	;# 
  2361  0E1C                     	;# 
  2362  0E20                     	;# 
  2363  0E21                     	;# 
  2364  0E22                     	;# 
  2365  0E24                     	;# 
  2366  0E25                     	;# 
  2367  0E28                     	;# 
  2368  0E29                     	;# 
  2369  0E2A                     	;# 
  2370  0E2B                     	;# 
  2371  0E90                     	;# 
  2372  0E91                     	;# 
  2373  0E92                     	;# 
  2374  0E94                     	;# 
  2375  0E95                     	;# 
  2376  0EA0                     	;# 
  2377  0EA1                     	;# 
  2378  0EA2                     	;# 
  2379  0EA3                     	;# 
  2380  0EA4                     	;# 
  2381  0EA5                     	;# 
  2382  0F0F                     	;# 
  2383  0F10                     	;# 
  2384  0F11                     	;# 
  2385  0F12                     	;# 
  2386  0F13                     	;# 
  2387  0F14                     	;# 
  2388  0F15                     	;# 
  2389  0F16                     	;# 
  2390  0F17                     	;# 
  2391  0F18                     	;# 
  2392  0F19                     	;# 
  2393  0F1A                     	;# 
  2394  0F1B                     	;# 
  2395  0F1C                     	;# 
  2396  0F1D                     	;# 
  2397  0F1E                     	;# 
  2398  0F1F                     	;# 
  2399  0F20                     	;# 
  2400  0F21                     	;# 
  2401  0F22                     	;# 
  2402  0F23                     	;# 
  2403  0FE4                     	;# 
  2404  0FE5                     	;# 
  2405  0FE6                     	;# 
  2406  0FE7                     	;# 
  2407  0FE8                     	;# 
  2408  0FE9                     	;# 
  2409  0FEA                     	;# 
  2410  0FEB                     	;# 
  2411  0FED                     	;# 
  2412  0FEE                     	;# 
  2413  0FEF                     	;# 
  2414  0000                     	;# 
  2415  0001                     	;# 
  2416  0002                     	;# 
  2417  0003                     	;# 
  2418  0004                     	;# 
  2419  0005                     	;# 
  2420  0006                     	;# 
  2421  0007                     	;# 
  2422  0008                     	;# 
  2423  0009                     	;# 
  2424  000A                     	;# 
  2425  000B                     	;# 
  2426  000C                     	;# 
  2427  000E                     	;# 
  2428  0010                     	;# 
  2429  0011                     	;# 
  2430  0012                     	;# 
  2431  0013                     	;# 
  2432  0014                     	;# 
  2433  0015                     	;# 
  2434  0015                     	;# 
  2435  0016                     	;# 
  2436  0016                     	;# 
  2437  0017                     	;# 
  2438  0018                     	;# 
  2439  0019                     	;# 
  2440  0019                     	;# 
  2441  001A                     	;# 
  2442  001B                     	;# 
  2443  001C                     	;# 
  2444  001D                     	;# 
  2445  001E                     	;# 
  2446  001F                     	;# 
  2447  008C                     	;# 
  2448  008E                     	;# 
  2449  0090                     	;# 
  2450  0091                     	;# 
  2451  0092                     	;# 
  2452  0093                     	;# 
  2453  0094                     	;# 
  2454  0097                     	;# 
  2455  009B                     	;# 
  2456  009B                     	;# 
  2457  009C                     	;# 
  2458  009D                     	;# 
  2459  009E                     	;# 
  2460  009F                     	;# 
  2461  010C                     	;# 
  2462  010E                     	;# 
  2463  0111                     	;# 
  2464  0112                     	;# 
  2465  0113                     	;# 
  2466  0114                     	;# 
  2467  0115                     	;# 
  2468  0116                     	;# 
  2469  0117                     	;# 
  2470  0118                     	;# 
  2471  0119                     	;# 
  2472  018C                     	;# 
  2473  018E                     	;# 
  2474  0199                     	;# 
  2475  0199                     	;# 
  2476  0199                     	;# 
  2477  019A                     	;# 
  2478  019A                     	;# 
  2479  019A                     	;# 
  2480  019B                     	;# 
  2481  019B                     	;# 
  2482  019B                     	;# 
  2483  019B                     	;# 
  2484  019B                     	;# 
  2485  019C                     	;# 
  2486  019C                     	;# 
  2487  019C                     	;# 
  2488  019D                     	;# 
  2489  019D                     	;# 
  2490  019D                     	;# 
  2491  019E                     	;# 
  2492  019E                     	;# 
  2493  019E                     	;# 
  2494  019F                     	;# 
  2495  019F                     	;# 
  2496  019F                     	;# 
  2497  019F                     	;# 
  2498  019F                     	;# 
  2499  020C                     	;# 
  2500  020E                     	;# 
  2501  0211                     	;# 
  2502  0211                     	;# 
  2503  0212                     	;# 
  2504  0212                     	;# 
  2505  0213                     	;# 
  2506  0213                     	;# 
  2507  0214                     	;# 
  2508  0214                     	;# 
  2509  0215                     	;# 
  2510  0215                     	;# 
  2511  0215                     	;# 
  2512  0215                     	;# 
  2513  0216                     	;# 
  2514  0216                     	;# 
  2515  0217                     	;# 
  2516  0217                     	;# 
  2517  028C                     	;# 
  2518  028E                     	;# 
  2519  0291                     	;# 
  2520  0291                     	;# 
  2521  0292                     	;# 
  2522  0293                     	;# 
  2523  0294                     	;# 
  2524  0295                     	;# 
  2525  0295                     	;# 
  2526  0296                     	;# 
  2527  0297                     	;# 
  2528  0298                     	;# 
  2529  030C                     	;# 
  2530  030E                     	;# 
  2531  038C                     	;# 
  2532  038E                     	;# 
  2533  0391                     	;# 
  2534  0392                     	;# 
  2535  0393                     	;# 
  2536  0397                     	;# 
  2537  0398                     	;# 
  2538  0399                     	;# 
  2539  039A                     	;# 
  2540  039C                     	;# 
  2541  039D                     	;# 
  2542  039E                     	;# 
  2543  039F                     	;# 
  2544  0498                     	;# 
  2545  0498                     	;# 
  2546  0499                     	;# 
  2547  049A                     	;# 
  2548  049B                     	;# 
  2549  049B                     	;# 
  2550  049C                     	;# 
  2551  049D                     	;# 
  2552  049E                     	;# 
  2553  049F                     	;# 
  2554  0617                     	;# 
  2555  0618                     	;# 
  2556  0619                     	;# 
  2557  0619                     	;# 
  2558  061A                     	;# 
  2559  061B                     	;# 
  2560  061C                     	;# 
  2561  061C                     	;# 
  2562  0691                     	;# 
  2563  0692                     	;# 
  2564  0693                     	;# 
  2565  0694                     	;# 
  2566  0695                     	;# 
  2567  0696                     	;# 
  2568  0697                     	;# 
  2569  0698                     	;# 
  2570  0699                     	;# 
  2571  0891                     	;# 
  2572  0891                     	;# 
  2573  0891                     	;# 
  2574  0891                     	;# 
  2575  0891                     	;# 
  2576  0891                     	;# 
  2577  0892                     	;# 
  2578  0892                     	;# 
  2579  0892                     	;# 
  2580  0893                     	;# 
  2581  0893                     	;# 
  2582  0893                     	;# 
  2583  0893                     	;# 
  2584  0893                     	;# 
  2585  0893                     	;# 
  2586  0894                     	;# 
  2587  0894                     	;# 
  2588  0894                     	;# 
  2589  0895                     	;# 
  2590  0895                     	;# 
  2591  0895                     	;# 
  2592  0896                     	;# 
  2593  0896                     	;# 
  2594  0896                     	;# 
  2595  089B                     	;# 
  2596  0911                     	;# 
  2597  0912                     	;# 
  2598  0913                     	;# 
  2599  0914                     	;# 
  2600  0915                     	;# 
  2601  0916                     	;# 
  2602  0918                     	;# 
  2603  0919                     	;# 
  2604  091A                     	;# 
  2605  091B                     	;# 
  2606  091C                     	;# 
  2607  091D                     	;# 
  2608  091E                     	;# 
  2609  091F                     	;# 
  2610  0E0F                     	;# 
  2611  0E10                     	;# 
  2612  0E11                     	;# 
  2613  0E12                     	;# 
  2614  0E13                     	;# 
  2615  0E14                     	;# 
  2616  0E15                     	;# 
  2617  0E18                     	;# 
  2618  0E1A                     	;# 
  2619  0E1B                     	;# 
  2620  0E1C                     	;# 
  2621  0E20                     	;# 
  2622  0E21                     	;# 
  2623  0E22                     	;# 
  2624  0E24                     	;# 
  2625  0E25                     	;# 
  2626  0E28                     	;# 
  2627  0E29                     	;# 
  2628  0E2A                     	;# 
  2629  0E2B                     	;# 
  2630  0E90                     	;# 
  2631  0E91                     	;# 
  2632  0E92                     	;# 
  2633  0E94                     	;# 
  2634  0E95                     	;# 
  2635  0EA0                     	;# 
  2636  0EA1                     	;# 
  2637  0EA2                     	;# 
  2638  0EA3                     	;# 
  2639  0EA4                     	;# 
  2640  0EA5                     	;# 
  2641  0F0F                     	;# 
  2642  0F10                     	;# 
  2643  0F11                     	;# 
  2644  0F12                     	;# 
  2645  0F13                     	;# 
  2646  0F14                     	;# 
  2647  0F15                     	;# 
  2648  0F16                     	;# 
  2649  0F17                     	;# 
  2650  0F18                     	;# 
  2651  0F19                     	;# 
  2652  0F1A                     	;# 
  2653  0F1B                     	;# 
  2654  0F1C                     	;# 
  2655  0F1D                     	;# 
  2656  0F1E                     	;# 
  2657  0F1F                     	;# 
  2658  0F20                     	;# 
  2659  0F21                     	;# 
  2660  0F22                     	;# 
  2661  0F23                     	;# 
  2662  0FE4                     	;# 
  2663  0FE5                     	;# 
  2664  0FE6                     	;# 
  2665  0FE7                     	;# 
  2666  0FE8                     	;# 
  2667  0FE9                     	;# 
  2668  0FEA                     	;# 
  2669  0FEB                     	;# 
  2670  0FED                     	;# 
  2671  0FEE                     	;# 
  2672  0FEF                     	;# 
  2673  0000                     	;# 
  2674  0001                     	;# 
  2675  0002                     	;# 
  2676  0003                     	;# 
  2677  0004                     	;# 
  2678  0005                     	;# 
  2679  0006                     	;# 
  2680  0007                     	;# 
  2681  0008                     	;# 
  2682  0009                     	;# 
  2683  000A                     	;# 
  2684  000B                     	;# 
  2685  000C                     	;# 
  2686  000E                     	;# 
  2687  0010                     	;# 
  2688  0011                     	;# 
  2689  0012                     	;# 
  2690  0013                     	;# 
  2691  0014                     	;# 
  2692  0015                     	;# 
  2693  0015                     	;# 
  2694  0016                     	;# 
  2695  0016                     	;# 
  2696  0017                     	;# 
  2697  0018                     	;# 
  2698  0019                     	;# 
  2699  0019                     	;# 
  2700  001A                     	;# 
  2701  001B                     	;# 
  2702  001C                     	;# 
  2703  001D                     	;# 
  2704  001E                     	;# 
  2705  001F                     	;# 
  2706  008C                     	;# 
  2707  008E                     	;# 
  2708  0090                     	;# 
  2709  0091                     	;# 
  2710  0092                     	;# 
  2711  0093                     	;# 
  2712  0094                     	;# 
  2713  0097                     	;# 
  2714  009B                     	;# 
  2715  009B                     	;# 
  2716  009C                     	;# 
  2717  009D                     	;# 
  2718  009E                     	;# 
  2719  009F                     	;# 
  2720  010C                     	;# 
  2721  010E                     	;# 
  2722  0111                     	;# 
  2723  0112                     	;# 
  2724  0113                     	;# 
  2725  0114                     	;# 
  2726  0115                     	;# 
  2727  0116                     	;# 
  2728  0117                     	;# 
  2729  0118                     	;# 
  2730  0119                     	;# 
  2731  018C                     	;# 
  2732  018E                     	;# 
  2733  0199                     	;# 
  2734  0199                     	;# 
  2735  0199                     	;# 
  2736  019A                     	;# 
  2737  019A                     	;# 
  2738  019A                     	;# 
  2739  019B                     	;# 
  2740  019B                     	;# 
  2741  019B                     	;# 
  2742  019B                     	;# 
  2743  019B                     	;# 
  2744  019C                     	;# 
  2745  019C                     	;# 
  2746  019C                     	;# 
  2747  019D                     	;# 
  2748  019D                     	;# 
  2749  019D                     	;# 
  2750  019E                     	;# 
  2751  019E                     	;# 
  2752  019E                     	;# 
  2753  019F                     	;# 
  2754  019F                     	;# 
  2755  019F                     	;# 
  2756  019F                     	;# 
  2757  019F                     	;# 
  2758  020C                     	;# 
  2759  020E                     	;# 
  2760  0211                     	;# 
  2761  0211                     	;# 
  2762  0212                     	;# 
  2763  0212                     	;# 
  2764  0213                     	;# 
  2765  0213                     	;# 
  2766  0214                     	;# 
  2767  0214                     	;# 
  2768  0215                     	;# 
  2769  0215                     	;# 
  2770  0215                     	;# 
  2771  0215                     	;# 
  2772  0216                     	;# 
  2773  0216                     	;# 
  2774  0217                     	;# 
  2775  0217                     	;# 
  2776  028C                     	;# 
  2777  028E                     	;# 
  2778  0291                     	;# 
  2779  0291                     	;# 
  2780  0292                     	;# 
  2781  0293                     	;# 
  2782  0294                     	;# 
  2783  0295                     	;# 
  2784  0295                     	;# 
  2785  0296                     	;# 
  2786  0297                     	;# 
  2787  0298                     	;# 
  2788  030C                     	;# 
  2789  030E                     	;# 
  2790  038C                     	;# 
  2791  038E                     	;# 
  2792  0391                     	;# 
  2793  0392                     	;# 
  2794  0393                     	;# 
  2795  0397                     	;# 
  2796  0398                     	;# 
  2797  0399                     	;# 
  2798  039A                     	;# 
  2799  039C                     	;# 
  2800  039D                     	;# 
  2801  039E                     	;# 
  2802  039F                     	;# 
  2803  0498                     	;# 
  2804  0498                     	;# 
  2805  0499                     	;# 
  2806  049A                     	;# 
  2807  049B                     	;# 
  2808  049B                     	;# 
  2809  049C                     	;# 
  2810  049D                     	;# 
  2811  049E                     	;# 
  2812  049F                     	;# 
  2813  0617                     	;# 
  2814  0618                     	;# 
  2815  0619                     	;# 
  2816  0619                     	;# 
  2817  061A                     	;# 
  2818  061B                     	;# 
  2819  061C                     	;# 
  2820  061C                     	;# 
  2821  0691                     	;# 
  2822  0692                     	;# 
  2823  0693                     	;# 
  2824  0694                     	;# 
  2825  0695                     	;# 
  2826  0696                     	;# 
  2827  0697                     	;# 
  2828  0698                     	;# 
  2829  0699                     	;# 
  2830  0891                     	;# 
  2831  0891                     	;# 
  2832  0891                     	;# 
  2833  0891                     	;# 
  2834  0891                     	;# 
  2835  0891                     	;# 
  2836  0892                     	;# 
  2837  0892                     	;# 
  2838  0892                     	;# 
  2839  0893                     	;# 
  2840  0893                     	;# 
  2841  0893                     	;# 
  2842  0893                     	;# 
  2843  0893                     	;# 
  2844  0893                     	;# 
  2845  0894                     	;# 
  2846  0894                     	;# 
  2847  0894                     	;# 
  2848  0895                     	;# 
  2849  0895                     	;# 
  2850  0895                     	;# 
  2851  0896                     	;# 
  2852  0896                     	;# 
  2853  0896                     	;# 
  2854  089B                     	;# 
  2855  0911                     	;# 
  2856  0912                     	;# 
  2857  0913                     	;# 
  2858  0914                     	;# 
  2859  0915                     	;# 
  2860  0916                     	;# 
  2861  0918                     	;# 
  2862  0919                     	;# 
  2863  091A                     	;# 
  2864  091B                     	;# 
  2865  091C                     	;# 
  2866  091D                     	;# 
  2867  091E                     	;# 
  2868  091F                     	;# 
  2869  0E0F                     	;# 
  2870  0E10                     	;# 
  2871  0E11                     	;# 
  2872  0E12                     	;# 
  2873  0E13                     	;# 
  2874  0E14                     	;# 
  2875  0E15                     	;# 
  2876  0E18                     	;# 
  2877  0E1A                     	;# 
  2878  0E1B                     	;# 
  2879  0E1C                     	;# 
  2880  0E20                     	;# 
  2881  0E21                     	;# 
  2882  0E22                     	;# 
  2883  0E24                     	;# 
  2884  0E25                     	;# 
  2885  0E28                     	;# 
  2886  0E29                     	;# 
  2887  0E2A                     	;# 
  2888  0E2B                     	;# 
  2889  0E90                     	;# 
  2890  0E91                     	;# 
  2891  0E92                     	;# 
  2892  0E94                     	;# 
  2893  0E95                     	;# 
  2894  0EA0                     	;# 
  2895  0EA1                     	;# 
  2896  0EA2                     	;# 
  2897  0EA3                     	;# 
  2898  0EA4                     	;# 
  2899  0EA5                     	;# 
  2900  0F0F                     	;# 
  2901  0F10                     	;# 
  2902  0F11                     	;# 
  2903  0F12                     	;# 
  2904  0F13                     	;# 
  2905  0F14                     	;# 
  2906  0F15                     	;# 
  2907  0F16                     	;# 
  2908  0F17                     	;# 
  2909  0F18                     	;# 
  2910  0F19                     	;# 
  2911  0F1A                     	;# 
  2912  0F1B                     	;# 
  2913  0F1C                     	;# 
  2914  0F1D                     	;# 
  2915  0F1E                     	;# 
  2916  0F1F                     	;# 
  2917  0F20                     	;# 
  2918  0F21                     	;# 
  2919  0F22                     	;# 
  2920  0F23                     	;# 
  2921  0FE4                     	;# 
  2922  0FE5                     	;# 
  2923  0FE6                     	;# 
  2924  0FE7                     	;# 
  2925  0FE8                     	;# 
  2926  0FE9                     	;# 
  2927  0FEA                     	;# 
  2928  0FEB                     	;# 
  2929  0FED                     	;# 
  2930  0FEE                     	;# 
  2931  0FEF                     	;# 
  2932  0000                     	;# 
  2933  0001                     	;# 
  2934  0002                     	;# 
  2935  0003                     	;# 
  2936  0004                     	;# 
  2937  0005                     	;# 
  2938  0006                     	;# 
  2939  0007                     	;# 
  2940  0008                     	;# 
  2941  0009                     	;# 
  2942  000A                     	;# 
  2943  000B                     	;# 
  2944  000C                     	;# 
  2945  000E                     	;# 
  2946  0010                     	;# 
  2947  0011                     	;# 
  2948  0012                     	;# 
  2949  0013                     	;# 
  2950  0014                     	;# 
  2951  0015                     	;# 
  2952  0015                     	;# 
  2953  0016                     	;# 
  2954  0016                     	;# 
  2955  0017                     	;# 
  2956  0018                     	;# 
  2957  0019                     	;# 
  2958  0019                     	;# 
  2959  001A                     	;# 
  2960  001B                     	;# 
  2961  001C                     	;# 
  2962  001D                     	;# 
  2963  001E                     	;# 
  2964  001F                     	;# 
  2965  008C                     	;# 
  2966  008E                     	;# 
  2967  0090                     	;# 
  2968  0091                     	;# 
  2969  0092                     	;# 
  2970  0093                     	;# 
  2971  0094                     	;# 
  2972  0097                     	;# 
  2973  009B                     	;# 
  2974  009B                     	;# 
  2975  009C                     	;# 
  2976  009D                     	;# 
  2977  009E                     	;# 
  2978  009F                     	;# 
  2979  010C                     	;# 
  2980  010E                     	;# 
  2981  0111                     	;# 
  2982  0112                     	;# 
  2983  0113                     	;# 
  2984  0114                     	;# 
  2985  0115                     	;# 
  2986  0116                     	;# 
  2987  0117                     	;# 
  2988  0118                     	;# 
  2989  0119                     	;# 
  2990  018C                     	;# 
  2991  018E                     	;# 
  2992  0199                     	;# 
  2993  0199                     	;# 
  2994  0199                     	;# 
  2995  019A                     	;# 
  2996  019A                     	;# 
  2997  019A                     	;# 
  2998  019B                     	;# 
  2999  019B                     	;# 
  3000  019B                     	;# 
  3001  019B                     	;# 
  3002  019B                     	;# 
  3003  019C                     	;# 
  3004  019C                     	;# 
  3005  019C                     	;# 
  3006  019D                     	;# 
  3007  019D                     	;# 
  3008  019D                     	;# 
  3009  019E                     	;# 
  3010  019E                     	;# 
  3011  019E                     	;# 
  3012  019F                     	;# 
  3013  019F                     	;# 
  3014  019F                     	;# 
  3015  019F                     	;# 
  3016  019F                     	;# 
  3017  020C                     	;# 
  3018  020E                     	;# 
  3019  0211                     	;# 
  3020  0211                     	;# 
  3021  0212                     	;# 
  3022  0212                     	;# 
  3023  0213                     	;# 
  3024  0213                     	;# 
  3025  0214                     	;# 
  3026  0214                     	;# 
  3027  0215                     	;# 
  3028  0215                     	;# 
  3029  0215                     	;# 
  3030  0215                     	;# 
  3031  0216                     	;# 
  3032  0216                     	;# 
  3033  0217                     	;# 
  3034  0217                     	;# 
  3035  028C                     	;# 
  3036  028E                     	;# 
  3037  0291                     	;# 
  3038  0291                     	;# 
  3039  0292                     	;# 
  3040  0293                     	;# 
  3041  0294                     	;# 
  3042  0295                     	;# 
  3043  0295                     	;# 
  3044  0296                     	;# 
  3045  0297                     	;# 
  3046  0298                     	;# 
  3047  030C                     	;# 
  3048  030E                     	;# 
  3049  038C                     	;# 
  3050  038E                     	;# 
  3051  0391                     	;# 
  3052  0392                     	;# 
  3053  0393                     	;# 
  3054  0397                     	;# 
  3055  0398                     	;# 
  3056  0399                     	;# 
  3057  039A                     	;# 
  3058  039C                     	;# 
  3059  039D                     	;# 
  3060  039E                     	;# 
  3061  039F                     	;# 
  3062  0498                     	;# 
  3063  0498                     	;# 
  3064  0499                     	;# 
  3065  049A                     	;# 
  3066  049B                     	;# 
  3067  049B                     	;# 
  3068  049C                     	;# 
  3069  049D                     	;# 
  3070  049E                     	;# 
  3071  049F                     	;# 
  3072  0617                     	;# 
  3073  0618                     	;# 
  3074  0619                     	;# 
  3075  0619                     	;# 
  3076  061A                     	;# 
  3077  061B                     	;# 
  3078  061C                     	;# 
  3079  061C                     	;# 
  3080  0691                     	;# 
  3081  0692                     	;# 
  3082  0693                     	;# 
  3083  0694                     	;# 
  3084  0695                     	;# 
  3085  0696                     	;# 
  3086  0697                     	;# 
  3087  0698                     	;# 
  3088  0699                     	;# 
  3089  0891                     	;# 
  3090  0891                     	;# 
  3091  0891                     	;# 
  3092  0891                     	;# 
  3093  0891                     	;# 
  3094  0891                     	;# 
  3095  0892                     	;# 
  3096  0892                     	;# 
  3097  0892                     	;# 
  3098  0893                     	;# 
  3099  0893                     	;# 
  3100  0893                     	;# 
  3101  0893                     	;# 
  3102  0893                     	;# 
  3103  0893                     	;# 
  3104  0894                     	;# 
  3105  0894                     	;# 
  3106  0894                     	;# 
  3107  0895                     	;# 
  3108  0895                     	;# 
  3109  0895                     	;# 
  3110  0896                     	;# 
  3111  0896                     	;# 
  3112  0896                     	;# 
  3113  089B                     	;# 
  3114  0911                     	;# 
  3115  0912                     	;# 
  3116  0913                     	;# 
  3117  0914                     	;# 
  3118  0915                     	;# 
  3119  0916                     	;# 
  3120  0918                     	;# 
  3121  0919                     	;# 
  3122  091A                     	;# 
  3123  091B                     	;# 
  3124  091C                     	;# 
  3125  091D                     	;# 
  3126  091E                     	;# 
  3127  091F                     	;# 
  3128  0E0F                     	;# 
  3129  0E10                     	;# 
  3130  0E11                     	;# 
  3131  0E12                     	;# 
  3132  0E13                     	;# 
  3133  0E14                     	;# 
  3134  0E15                     	;# 
  3135  0E18                     	;# 
  3136  0E1A                     	;# 
  3137  0E1B                     	;# 
  3138  0E1C                     	;# 
  3139  0E20                     	;# 
  3140  0E21                     	;# 
  3141  0E22                     	;# 
  3142  0E24                     	;# 
  3143  0E25                     	;# 
  3144  0E28                     	;# 
  3145  0E29                     	;# 
  3146  0E2A                     	;# 
  3147  0E2B                     	;# 
  3148  0E90                     	;# 
  3149  0E91                     	;# 
  3150  0E92                     	;# 
  3151  0E94                     	;# 
  3152  0E95                     	;# 
  3153  0EA0                     	;# 
  3154  0EA1                     	;# 
  3155  0EA2                     	;# 
  3156  0EA3                     	;# 
  3157  0EA4                     	;# 
  3158  0EA5                     	;# 
  3159  0F0F                     	;# 
  3160  0F10                     	;# 
  3161  0F11                     	;# 
  3162  0F12                     	;# 
  3163  0F13                     	;# 
  3164  0F14                     	;# 
  3165  0F15                     	;# 
  3166  0F16                     	;# 
  3167  0F17                     	;# 
  3168  0F18                     	;# 
  3169  0F19                     	;# 
  3170  0F1A                     	;# 
  3171  0F1B                     	;# 
  3172  0F1C                     	;# 
  3173  0F1D                     	;# 
  3174  0F1E                     	;# 
  3175  0F1F                     	;# 
  3176  0F20                     	;# 
  3177  0F21                     	;# 
  3178  0F22                     	;# 
  3179  0F23                     	;# 
  3180  0FE4                     	;# 
  3181  0FE5                     	;# 
  3182  0FE6                     	;# 
  3183  0FE7                     	;# 
  3184  0FE8                     	;# 
  3185  0FE9                     	;# 
  3186  0FEA                     	;# 
  3187  0FEB                     	;# 
  3188  0FED                     	;# 
  3189  0FEE                     	;# 
  3190  0FEF                     	;# 
  3191                           
  3192                           	psect	idataCOMMON
  3193  077B                     __pidataCOMMON:
  3194                           
  3195                           ;initializer for _eepdriver_mode
  3196  077B  3401               	retlw	1
  3197                           
  3198                           	psect	idataBANK0
  3199  0778                     __pidataBANK0:
  3200                           
  3201                           ;initializer for _index_lastval
  3202  0778  34FF               	retlw	255
  3203  0779  34FF               	retlw	255
  3204                           
  3205                           ;initializer for _driver_mode
  3206  077A  3401               	retlw	1
  3207                           
  3208                           	psect	stringtext1
  3209  0421                     __pstringtext1:
  3210  0421                     _period_buffer:
  3211  0421  34A8               	retlw	168
  3212  0422  3418               	retlw	24
  3213  0423  34A8               	retlw	168
  3214  0424  3418               	retlw	24
  3215  0425  34A8               	retlw	168
  3216  0426  3418               	retlw	24
  3217  0427  34A8               	retlw	168
  3218  0428  3418               	retlw	24
  3219  0429  34A8               	retlw	168
  3220  042A  3418               	retlw	24
  3221  042B  3449               	retlw	73
  3222  042C  340C               	retlw	12
  3223  042D  3432               	retlw	50
  3224  042E  3408               	retlw	8
  3225  042F  3426               	retlw	38
  3226  0430  3406               	retlw	6
  3227  0431  34EC               	retlw	236
  3228  0432  3404               	retlw	4
  3229  0433  341B               	retlw	27
  3230  0434  3404               	retlw	4
  3231  0435  3485               	retlw	133
  3232  0436  3403               	retlw	3
  3233  0437  3415               	retlw	21
  3234  0438  3403               	retlw	3
  3235  0439  34BD               	retlw	189
  3236  043A  3402               	retlw	2
  3237  043B  3477               	retlw	119
  3238  043C  3402               	retlw	2
  3239  043D  343E               	retlw	62
  3240  043E  3402               	retlw	2
  3241  043F  340E               	retlw	14
  3242  0440  3402               	retlw	2
  3243  0441  34E5               	retlw	229
  3244  0442  3401               	retlw	1
  3245  0443  34C3               	retlw	195
  3246  0444  3401               	retlw	1
  3247  0445  34A5               	retlw	165
  3248  0446  3401               	retlw	1
  3249  0447  348A               	retlw	138
  3250  0448  3401               	retlw	1
  3251  0449  3473               	retlw	115
  3252  044A  3401               	retlw	1
  3253  044B  345F               	retlw	95
  3254  044C  3401               	retlw	1
  3255  044D  344C               	retlw	76
  3256  044E  3401               	retlw	1
  3257  044F  343B               	retlw	59
  3258  0450  3401               	retlw	1
  3259  0451  342C               	retlw	44
  3260  0452  3401               	retlw	1
  3261  0453  341F               	retlw	31
  3262  0454  3401               	retlw	1
  3263  0455  3412               	retlw	18
  3264  0456  3401               	retlw	1
  3265  0457  3407               	retlw	7
  3266  0458  3401               	retlw	1
  3267  0459  34FC               	retlw	252
  3268  045A  3400               	retlw	0
  3269  045B  34F3               	retlw	243
  3270  045C  3400               	retlw	0
  3271  045D  34EA               	retlw	234
  3272  045E  3400               	retlw	0
  3273  045F  34E1               	retlw	225
  3274  0460  3400               	retlw	0
  3275  0461  34DA               	retlw	218
  3276  0462  3400               	retlw	0
  3277  0463  34D2               	retlw	210
  3278  0464  3400               	retlw	0
  3279  0465  34CC               	retlw	204
  3280  0466  3400               	retlw	0
  3281  0467  34C5               	retlw	197
  3282  0468  3400               	retlw	0
  3283  0469  34BF               	retlw	191
  3284  046A  3400               	retlw	0
  3285  046B  34BA               	retlw	186
  3286  046C  3400               	retlw	0
  3287  046D  34B5               	retlw	181
  3288  046E  3400               	retlw	0
  3289  046F  34B0               	retlw	176
  3290  0470  3400               	retlw	0
  3291  0471  34AB               	retlw	171
  3292  0472  3400               	retlw	0
  3293  0473  34A6               	retlw	166
  3294  0474  3400               	retlw	0
  3295  0475  34A2               	retlw	162
  3296  0476  3400               	retlw	0
  3297  0477  349E               	retlw	158
  3298  0478  3400               	retlw	0
  3299  0479  349A               	retlw	154
  3300  047A  3400               	retlw	0
  3301  047B  3496               	retlw	150
  3302  047C  3400               	retlw	0
  3303  047D  3493               	retlw	147
  3304  047E  3400               	retlw	0
  3305  047F  3490               	retlw	144
  3306  0480  3400               	retlw	0
  3307  0481  348C               	retlw	140
  3308  0482  3400               	retlw	0
  3309  0483  3489               	retlw	137
  3310  0484  3400               	retlw	0
  3311  0485  3486               	retlw	134
  3312  0486  3400               	retlw	0
  3313  0487  3484               	retlw	132
  3314  0488  3400               	retlw	0
  3315  0489  3481               	retlw	129
  3316  048A  3400               	retlw	0
  3317  048B  347E               	retlw	126
  3318  048C  3400               	retlw	0
  3319  048D  347C               	retlw	124
  3320  048E  3400               	retlw	0
  3321  048F  3479               	retlw	121
  3322  0490  3400               	retlw	0
  3323  0491  3477               	retlw	119
  3324  0492  3400               	retlw	0
  3325  0493  3475               	retlw	117
  3326  0494  3400               	retlw	0
  3327  0495  3473               	retlw	115
  3328  0496  3400               	retlw	0
  3329  0497  3471               	retlw	113
  3330  0498  3400               	retlw	0
  3331  0499  346F               	retlw	111
  3332  049A  3400               	retlw	0
  3333  049B  346D               	retlw	109
  3334  049C  3400               	retlw	0
  3335  049D  346B               	retlw	107
  3336  049E  3400               	retlw	0
  3337  049F  3469               	retlw	105
  3338  04A0  3400               	retlw	0
  3339  04A1                     __end_of_period_buffer:
  3340                           
  3341                           	psect	nvBANK0
  3342  005D                     __pnvBANK0:
  3343  005D                     _TMR0_InterruptHandler:
  3344  005D                     	ds	2
  3345  000C                     _PORTAbits	set	12
  3346  000B                     _INTCONbits	set	11
  3347  001F                     _T2CONbits	set	31
  3348  001F                     _T2CON	set	31
  3349  0011                     _PIR1bits	set	17
  3350  001D                     _TMR2	set	29
  3351  0017                     _T0CON0bits	set	23
  3352  0017                     _T0CON0	set	23
  3353  0010                     _PIR0bits	set	16
  3354  0015                     _TMR0L	set	21
  3355  0016                     _TMR0H	set	22
  3356  0018                     _T0CON1	set	24
  3357  001E                     _PR2	set	30
  3358  008C                     _TRISAbits	set	140
  3359  008E                     _TRISCbits	set	142
  3360  009D                     _ADCON0bits	set	157
  3361  009D                     _ADCON0	set	157
  3362  009C                     _ADRESH	set	156
  3363  009B                     _ADRESL	set	155
  3364  009F                     _ADACT	set	159
  3365  009E                     _ADCON1	set	158
  3366  0090                     _PIE0bits	set	144
  3367  008E                     _TRISC	set	142
  3368  008C                     _TRISA	set	140
  3369  0097                     _WDTCON	set	151
  3370  010E                     _LATC	set	270
  3371  010C                     _LATA	set	268
  3372  018C                     _ANSELA	set	396
  3373  018E                     _ANSELC	set	398
  3374  020E                     _WPUC	set	526
  3375  020C                     _WPUA	set	524
  3376  028E                     _ODCONC	set	654
  3377  028C                     _ODCONA	set	652
  3378  030E                     _SLRCONC	set	782
  3379  030C                     _SLRCONA	set	780
  3380  038E                     _INLVLC	set	910
  3381  038C                     _INLVLA	set	908
  3382  0619                     _PWM5CONbits	set	1561
  3383  061C                     _PWM6CONbits	set	1564
  3384  0617                     _PWM5DCL	set	1559
  3385  0618                     _PWM5DCH	set	1560
  3386  0619                     _PWM5CON	set	1561
  3387  061A                     _PWM6DCL	set	1562
  3388  061B                     _PWM6DCH	set	1563
  3389  061C                     _PWM6CON	set	1564
  3390  0896                     _NVMCON2	set	2198
  3391  0893                     _NVMDATL	set	2195
  3392  0894                     _NVMDATH	set	2196
  3393  0895                     _NVMCON1bits	set	2197
  3394  0892                     _NVMADRH	set	2194
  3395  0891                     _NVMADRL	set	2193
  3396  0916                     _PMD5	set	2326
  3397  0915                     _PMD4	set	2325
  3398  0914                     _PMD3	set	2324
  3399  0913                     _PMD2	set	2323
  3400  0912                     _PMD1	set	2322
  3401  0911                     _PMD0	set	2321
  3402  091E                     _OSCTUNE	set	2334
  3403  091F                     _OSCFRQ	set	2335
  3404  091D                     _OSCEN	set	2333
  3405  091B                     _OSCCON3	set	2331
  3406  0919                     _OSCCON1	set	2329
  3407  0E92                     _RA2PPS	set	3730
  3408  0EA0                     _RC0PPS	set	3744
  3409                           
  3410                           	psect	cinit
  3411  0019                     start_initialization:	
  3412                           ; #config settings
  3413                           
  3414  0019                     __initialization:
  3415                           
  3416                           ; Initialize objects allocated to COMMON
  3417  0019  3187  277B  3180   	fcall	__pidataCOMMON	;fetch initializer
  3418  001C  00FD               	movwf	__pdataCOMMON& (0+127)
  3419                           
  3420                           ; Initialize objects allocated to BANK0
  3421  001D  3187  2778  3180   	fcall	__pidataBANK0	;fetch initializer
  3422  0020  00DA               	movwf	__pdataBANK0& (0+127)
  3423  0021  3187  2779  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3424  0024  00DB               	movwf	(__pdataBANK0+1)& (0+127)
  3425  0025  3187  277A  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3426  0028  00DC               	movwf	(__pdataBANK0+2)& (0+127)
  3427                           
  3428                           ; Clear objects allocated to BANK0
  3429  0029  3020               	movlw	low __pbssBANK0
  3430  002A  0084               	movwf	4
  3431  002B  3000               	movlw	high __pbssBANK0
  3432  002C  0085               	movwf	5
  3433  002D  3023               	movlw	35
  3434  002E  3187  2768  3180   	fcall	clear_ram0
  3435  0031                     end_of_initialization:	
  3436                           ;End of C runtime variable initialization code
  3437                           
  3438  0031                     __end_of__initialization:
  3439  0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3440  0032  0020               	movlb	0
  3441  0033  2E02               	ljmp	_main	;jump to C main() function
  3442                           
  3443                           	psect	dataCOMMON
  3444  007D                     __pdataCOMMON:
  3445  007D                     _eepdriver_mode:
  3446  007D                     	ds	1
  3447                           
  3448                           	psect	bssBANK0
  3449  0020                     __pbssBANK0:
  3450  0020                     _adc_avgval:
  3451  0020                     	ds	16
  3452  0030                     _eeptimer:
  3453  0030                     	ds	4
  3454  0034                     _period_tmr:
  3455  0034                     	ds	2
  3456  0036                     _period_halfval:
  3457  0036                     	ds	2
  3458  0038                     _period_val:
  3459  0038                     	ds	2
  3460  003A                     _ADC_InterruptHandler:
  3461  003A                     	ds	2
  3462  003C                     _LED_mode:
  3463  003C                     	ds	1
  3464  003D                     _LED_timer:
  3465  003D                     	ds	1
  3466  003E                     _button_tmr:
  3467  003E                     	ds	1
  3468  003F                     _adc_avgcounter:
  3469  003F                     	ds	1
  3470  0040                     _index_tmr:
  3471  0040                     	ds	1
  3472  0041                     _signal_toggle:
  3473  0041                     	ds	1
  3474  0042                     _timer_flag:
  3475  0042                     	ds	1
  3476                           
  3477                           	psect	dataBANK0
  3478  005A                     __pdataBANK0:
  3479  005A                     _index_lastval:
  3480  005A                     	ds	2
  3481  005C                     _driver_mode:
  3482  005C                     	ds	1
  3483                           
  3484                           	psect	clrtext
  3485  0768                     clear_ram0:	
  3486                           ;	Called with FSR0 containing the base address, and
  3487                           ;	WREG with the size to clear
  3488                           
  3489  0768  0064               	clrwdt	;clear the watchdog before getting into this loop
  3490  0769                     clrloop0:
  3491  0769  0180               	clrf	0	;clear RAM location pointed to by FSR
  3492  076A  3101               	addfsr 0,1
  3493  076B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3494  076C  2F69               	goto	clrloop0	;have we reached the end yet?
  3495  076D  3400               	retlw	0	;all done for this memory range, return
  3496                           
  3497                           	psect	cstackCOMMON
  3498  0070                     __pcstackCOMMON:
  3499  0070                     ?_PMD_Initialize:
  3500  0070                     ??_PMD_Initialize:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0070                     ?_PIN_MANAGER_Initialize:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0070                     ??_PIN_MANAGER_Initialize:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0070                     ?_OSCILLATOR_Initialize:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0070                     ??_OSCILLATOR_Initialize:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0070                     ?_WDT_Initialize:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  0070                     ??_WDT_Initialize:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  0070                     ?_PWM6_Initialize:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  0070                     ??_PWM6_Initialize:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527  0070                     ?_ADC_Initialize:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530  0070                     ??_ADC_Initialize:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533  0070                     ?_PWM5_Initialize:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536  0070                     ??_PWM5_Initialize:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539  0070                     ?_TMR2_Initialize:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542  0070                     ??_TMR2_Initialize:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545  0070                     ?_TMR0_Initialize:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  0070                     ?_TMR0_SetInterruptHandler:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  0070                     ?_TMR0_DefaultInterruptHandler:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554  0070                     ??_TMR0_DefaultInterruptHandler:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557  0070                     ?_driver_init:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560  0070                     ?_driver_run:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563  0070                     ?_loop_handler:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  0070                     ?_driver_handler:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0070                     ?_trimmer_handler:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0070                     ?_flash_handler:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575  0070                     ?_drive_pwm_config:	
  3576                           ; 1 bytes @ 0x0
  3577                           
  3578  0070                     ??_drive_pwm_config:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581  0070                     ?_buzzer_pwm_config:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584  0070                     ?_SYSTEM_Initialize:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587  0070                     ?_TMR0_ISR:	
  3588                           ; 1 bytes @ 0x0
  3589                           
  3590  0070                     ??_TMR0_ISR:	
  3591                           ; 1 bytes @ 0x0
  3592                           
  3593  0070                     ?_INTERRUPT_InterruptManager:	
  3594                           ; 1 bytes @ 0x0
  3595                           
  3596  0070                     ??_INTERRUPT_InterruptManager:	
  3597                           ; 1 bytes @ 0x0
  3598                           
  3599  0070                     ?_PWM6_LoadDutyValue:	
  3600                           ; 1 bytes @ 0x0
  3601                           
  3602  0070                     ?_PWM5_LoadDutyValue:	
  3603                           ; 1 bytes @ 0x0
  3604                           
  3605  0070                     ?_DATAEE_WriteByte:	
  3606                           ; 1 bytes @ 0x0
  3607                           
  3608  0070                     ?_DATAEE_ReadByte:	
  3609                           ; 1 bytes @ 0x0
  3610                           
  3611  0070                     ?_main:	
  3612                           ; 1 bytes @ 0x0
  3613                           
  3614  0070                     ?_ADC_GetConversion:	
  3615                           ; 1 bytes @ 0x0
  3616                           
  3617  0070                     ?___lmul:	
  3618                           ; 2 bytes @ 0x0
  3619                           
  3620  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  3621                           ; 4 bytes @ 0x0
  3622                           
  3623  0070                     PWM6_LoadDutyValue@dutyValue:	
  3624                           ; 2 bytes @ 0x0
  3625                           
  3626  0070                     PWM5_LoadDutyValue@dutyValue:	
  3627                           ; 2 bytes @ 0x0
  3628                           
  3629  0070                     DATAEE_WriteByte@bAdd:	
  3630                           ; 2 bytes @ 0x0
  3631                           
  3632  0070                     DATAEE_ReadByte@bAdd:	
  3633                           ; 2 bytes @ 0x0
  3634                           
  3635  0070                     ___lmul@multiplier:	
  3636                           ; 2 bytes @ 0x0
  3637                           
  3638                           
  3639                           ; 4 bytes @ 0x0
  3640  0070                     	ds	2
  3641  0072                     ??_TMR0_Initialize:
  3642  0072                     ??_TMR0_SetInterruptHandler:	
  3643                           ; 1 bytes @ 0x2
  3644                           
  3645  0072                     ??_SYSTEM_Initialize:	
  3646                           ; 1 bytes @ 0x2
  3647                           
  3648  0072                     ??_ADC_GetConversion:	
  3649                           ; 1 bytes @ 0x2
  3650                           
  3651  0072                     ??_PWM6_LoadDutyValue:	
  3652                           ; 1 bytes @ 0x2
  3653                           
  3654  0072                     ??_PWM5_LoadDutyValue:	
  3655                           ; 1 bytes @ 0x2
  3656                           
  3657  0072                     ??_DATAEE_ReadByte:	
  3658                           ; 1 bytes @ 0x2
  3659                           
  3660  0072                     DATAEE_WriteByte@bData:	
  3661                           ; 1 bytes @ 0x2
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0x2
  3665  0072                     	ds	1
  3666  0073                     ??_DATAEE_WriteByte:
  3667  0073                     ADC_GetConversion@channel:	
  3668                           ; 1 bytes @ 0x3
  3669                           
  3670  0073                     DATAEE_WriteByte@GIEBitValue:	
  3671                           ; 1 bytes @ 0x3
  3672                           
  3673                           
  3674                           ; 1 bytes @ 0x3
  3675  0073                     	ds	1
  3676  0074                     ??_driver_handler:
  3677  0074                     ??_trimmer_handler:	
  3678                           ; 1 bytes @ 0x4
  3679                           
  3680  0074                     ??_flash_handler:	
  3681                           ; 1 bytes @ 0x4
  3682                           
  3683  0074                     ??_buzzer_pwm_config:	
  3684                           ; 1 bytes @ 0x4
  3685                           
  3686  0074                     ___lmul@multiplicand:	
  3687                           ; 1 bytes @ 0x4
  3688                           
  3689                           
  3690                           ; 4 bytes @ 0x4
  3691  0074                     	ds	2
  3692  0076                     driver_handler@mode_select:
  3693                           
  3694                           ; 1 bytes @ 0x6
  3695  0076                     	ds	1
  3696  0077                     ??_driver_init:
  3697                           
  3698                           ; 1 bytes @ 0x7
  3699  0077                     	ds	1
  3700  0078                     ??_loop_handler:
  3701  0078                     ??___lmul:	
  3702                           ; 1 bytes @ 0x8
  3703                           
  3704  0078                     ___lmul@product:	
  3705                           ; 1 bytes @ 0x8
  3706                           
  3707                           
  3708                           ; 4 bytes @ 0x8
  3709  0078                     	ds	1
  3710  0079                     driver_init@adc_initval:
  3711                           
  3712                           ; 2 bytes @ 0x9
  3713  0079                     	ds	2
  3714  007B                     driver_init@i:
  3715                           
  3716                           ; 1 bytes @ 0xB
  3717  007B                     	ds	1
  3718  007C                     ??___lldiv:
  3719                           
  3720                           ; 1 bytes @ 0xC
  3721  007C                     	ds	1
  3722                           
  3723                           	psect	cstackBANK0
  3724  0043                     __pcstackBANK0:
  3725  0043                     ?___lldiv:
  3726  0043                     trimmer_handler@adc_newval:	
  3727                           ; 4 bytes @ 0x0
  3728                           
  3729  0043                     ___lldiv@divisor:	
  3730                           ; 2 bytes @ 0x0
  3731                           
  3732                           
  3733                           ; 4 bytes @ 0x0
  3734  0043                     	ds	2
  3735  0045                     trimmer_handler@adc_avgsum:
  3736                           
  3737                           ; 2 bytes @ 0x2
  3738  0045                     	ds	2
  3739  0047                     trimmer_handler@i:
  3740  0047                     ___lldiv@dividend:	
  3741                           ; 1 bytes @ 0x4
  3742                           
  3743                           
  3744                           ; 4 bytes @ 0x4
  3745  0047                     	ds	1
  3746  0048                     trimmer_handler@index_val:
  3747                           
  3748                           ; 2 bytes @ 0x5
  3749  0048                     	ds	2
  3750  004A                     trimmer_handler@array_val:
  3751                           
  3752                           ; 2 bytes @ 0x7
  3753  004A                     	ds	1
  3754  004B                     ___lldiv@quotient:
  3755                           
  3756                           ; 4 bytes @ 0x8
  3757  004B                     	ds	4
  3758  004F                     ___lldiv@counter:
  3759                           
  3760                           ; 1 bytes @ 0xC
  3761  004F                     	ds	1
  3762  0050                     ??_driver_run:
  3763                           
  3764                           ; 1 bytes @ 0xD
  3765  0050                     	ds	4
  3766  0054                     driver_run@duty_val:
  3767                           
  3768                           ; 4 bytes @ 0x11
  3769  0054                     	ds	4
  3770  0058                     ??_main:
  3771                           
  3772                           ; 1 bytes @ 0x15
  3773  0058                     	ds	2
  3774                           
  3775                           	psect	maintext
  3776  0602                     __pmaintext:	
  3777 ;;
  3778 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3779 ;;
  3780 ;; *************** function _main *****************
  3781 ;; Defined at:
  3782 ;;		line 13 in file "main.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : B1F/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         0       0       0       0
  3798 ;;      Temps:          0       2       0       0
  3799 ;;      Totals:         0       2       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels required when called: 7
  3802 ;; This function calls:
  3803 ;;		_SYSTEM_Initialize
  3804 ;;		_driver_init
  3805 ;;		_driver_run
  3806 ;;		_loop_handler
  3807 ;; This function is called by:
  3808 ;;		Startup code after reset
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           
  3813                           ;psect for function _main
  3814  0602                     _main:
  3815  0602                     l2244:	
  3816                           ;incstack = 0
  3817                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3818                           
  3819                           
  3820                           ;main.c: 14:     SYSTEM_Initialize();
  3821  0602  3186  26A3  3186   	fcall	_SYSTEM_Initialize
  3822  0605                     l2246:
  3823                           
  3824                           ;main.c: 16:     _delay((unsigned long)((100)*(32000000/4000.0)));
  3825  0605  3005               	movlw	5
  3826  0606  0020               	movlb	0	; select bank0
  3827  0607  00D9               	movwf	??_main+1
  3828  0608  300F               	movlw	15
  3829  0609  00D8               	movwf	??_main
  3830  060A  30F1               	movlw	241
  3831  060B                     u1027:
  3832  060B  0B89               	decfsz	9,f
  3833  060C  2E0B               	goto	u1027
  3834  060D  0BD8               	decfsz	??_main,f
  3835  060E  2E0B               	goto	u1027
  3836  060F  0BD9               	decfsz	??_main+1,f
  3837  0610  2E0B               	goto	u1027
  3838  0611                     l2248:
  3839                           
  3840                           ;main.c: 18:     (INTCONbits.GIE = 1);
  3841  0611  178B               	bsf	11,7	;volatile
  3842  0612                     l2250:
  3843                           
  3844                           ;main.c: 19:     (INTCONbits.PEIE = 1);
  3845  0612  170B               	bsf	11,6	;volatile
  3846  0613                     l2252:
  3847                           
  3848                           ;main.c: 21:     driver_init();
  3849  0613  3180  2034  3186   	fcall	_driver_init
  3850  0616                     l2254:
  3851                           
  3852                           ;main.c: 24:         if(timer_flag == 1){
  3853  0616  0020               	movlb	0	; select bank0
  3854  0617  0342               	decf	_timer_flag,w
  3855  0618  1D03               	btfss	3,2
  3856  0619  2E1B               	goto	u1011
  3857  061A  2E1C               	goto	u1010
  3858  061B                     u1011:
  3859  061B  2E16               	goto	l2254
  3860  061C                     u1010:
  3861  061C                     l2256:
  3862                           
  3863                           ;main.c: 25:             driver_run();
  3864  061C  3181  21A5  3186   	fcall	_driver_run
  3865  061F                     l2258:
  3866                           
  3867                           ;main.c: 26:             timer_flag = 0;
  3868  061F  0020               	movlb	0	; select bank0
  3869  0620  01C2               	clrf	_timer_flag
  3870  0621  0064               	clrwdt	;# 
  3871  0622                     l2260:
  3872                           
  3873                           ;main.c: 28:             loop_handler();
  3874  0622  3185  2593  3186   	fcall	_loop_handler
  3875                           
  3876                           ;main.c: 29:         }
  3877  0625  2E16               	goto	l2254
  3878  0626  2818               	ljmp	start
  3879  0627                     __end_of_main:
  3880                           
  3881                           	psect	text1
  3882  0593                     __ptext1:	
  3883 ;; *************** function _loop_handler *****************
  3884 ;; Defined at:
  3885 ;;		line 18 in file "flexar_driver.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3899 ;;      Params:         0       0       0       0
  3900 ;;      Locals:         0       0       0       0
  3901 ;;      Temps:          1       0       0       0
  3902 ;;      Totals:         1       0       0       0
  3903 ;;Total ram usage:        1 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 6
  3906 ;; This function calls:
  3907 ;;		_driver_handler
  3908 ;;		_flash_handler
  3909 ;;		_trimmer_handler
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _loop_handler
  3917  0593                     _loop_handler:
  3918  0593                     l2208:	
  3919                           ;incstack = 0
  3920                           ; Regs used in _loop_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3921                           
  3922                           
  3923                           ;flexar_driver.c: 19:     if(PORTAbits.RA0 == 0){
  3924  0593  0020               	movlb	0	; select bank0
  3925  0594  180C               	btfsc	12,0	;volatile
  3926  0595  2D97               	goto	u961
  3927  0596  2D98               	goto	u960
  3928  0597                     u961:
  3929  0597  2DC1               	goto	l2226
  3930  0598                     u960:
  3931  0598                     l2210:
  3932                           
  3933                           ;flexar_driver.c: 20:         if(button_tmr < 100U){
  3934  0598  3064               	movlw	100
  3935  0599  023E               	subwf	_button_tmr,w
  3936  059A  1803               	skipnc
  3937  059B  2D9D               	goto	u971
  3938  059C  2D9E               	goto	u970
  3939  059D                     u971:
  3940  059D  2DA7               	goto	l2216
  3941  059E                     u970:
  3942  059E                     l2212:
  3943                           
  3944                           ;flexar_driver.c: 22:             button_tmr++;
  3945  059E  3001               	movlw	1
  3946  059F  00F8               	movwf	??_loop_handler
  3947  05A0  0878               	movf	??_loop_handler,w
  3948  05A1  07BE               	addwf	_button_tmr,f
  3949                           
  3950                           ;flexar_driver.c: 23:         }
  3951  05A2  2DC5               	goto	l2230
  3952  05A3                     l2214:
  3953                           
  3954                           ;flexar_driver.c: 27:                 _delay((unsigned long)((100)*(32000000/4000000.0))
      +                          );
  3955  05A3  30A0               	movlw	160
  3956  05A4                     u1037:
  3957  05A4  3200               	nop2
  3958  05A5  0B89               	decfsz	9,f
  3959  05A6  2DA4               	goto	u1037
  3960  05A7                     l2216:
  3961                           
  3962                           ;flexar_driver.c: 26:             while(PORTAbits.RA0 == 0){
  3963  05A7  0020               	movlb	0	; select bank0
  3964  05A8  1C0C               	btfss	12,0	;volatile
  3965  05A9  2DAB               	goto	u981
  3966  05AA  2DAC               	goto	u980
  3967  05AB                     u981:
  3968  05AB  2DA3               	goto	l2214
  3969  05AC                     u980:
  3970  05AC                     l2218:
  3971                           
  3972                           ;flexar_driver.c: 29:             driver_mode++;
  3973  05AC  3001               	movlw	1
  3974  05AD  00F8               	movwf	??_loop_handler
  3975  05AE  0878               	movf	??_loop_handler,w
  3976  05AF  07DC               	addwf	_driver_mode,f
  3977  05B0                     l2220:
  3978                           
  3979                           ;flexar_driver.c: 30:             eeptimer = 0U;
  3980  05B0  3000               	movlw	0
  3981  05B1  00B3               	movwf	_eeptimer+3
  3982  05B2  3000               	movlw	0
  3983  05B3  00B2               	movwf	_eeptimer+2
  3984  05B4  3000               	movlw	0
  3985  05B5  00B1               	movwf	_eeptimer+1
  3986  05B6  3000               	movlw	0
  3987  05B7  00B0               	movwf	_eeptimer
  3988  05B8                     l2222:
  3989                           
  3990                           ;flexar_driver.c: 31:             index_lastval = 0xFFFFU;
  3991  05B8  30FF               	movlw	255
  3992  05B9  00DA               	movwf	_index_lastval
  3993  05BA  30FF               	movlw	255
  3994  05BB  00DB               	movwf	_index_lastval+1
  3995  05BC                     l2224:
  3996                           
  3997                           ;flexar_driver.c: 32:             driver_handler(driver_mode);
  3998  05BC  085C               	movf	_driver_mode,w
  3999  05BD  3184  24FC  3185   	fcall	_driver_handler
  4000  05C0  2DC5               	goto	l2230
  4001  05C1                     l2226:
  4002                           
  4003                           ;flexar_driver.c: 36:         button_tmr = 0U;
  4004  05C1  01BE               	clrf	_button_tmr
  4005  05C2                     l2228:
  4006                           
  4007                           ;flexar_driver.c: 37:         trimmer_handler();
  4008  05C2  3183  230F  3185   	fcall	_trimmer_handler
  4009  05C5                     l2230:
  4010                           
  4011                           ;flexar_driver.c: 39:     LATC = LED_mode;
  4012  05C5  0020               	movlb	0	; select bank0
  4013  05C6  083C               	movf	_LED_mode,w
  4014  05C7  0022               	movlb	2	; select bank2
  4015  05C8  008E               	movwf	14	;volatile
  4016  05C9                     l2232:
  4017                           
  4018                           ;flexar_driver.c: 40:     flash_handler();
  4019  05C9  3185  2552  3185   	fcall	_flash_handler
  4020  05CC                     l2234:
  4021                           
  4022                           ;flexar_driver.c: 41:     LATC = 0x00;
  4023  05CC  0022               	movlb	2	; select bank2
  4024  05CD  018E               	clrf	14	;volatile
  4025  05CE                     l410:
  4026  05CE  0008               	return
  4027  05CF                     __end_of_loop_handler:
  4028                           
  4029                           	psect	text2
  4030  030F                     __ptext2:	
  4031 ;; *************** function _trimmer_handler *****************
  4032 ;; Defined at:
  4033 ;;		line 102 in file "flexar_driver.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  array_val       2    7[BANK0 ] unsigned short 
  4038 ;;  i               1    4[BANK0 ] unsigned char 
  4039 ;;  index_val       2    5[BANK0 ] unsigned short 
  4040 ;;  adc_avgsum      2    2[BANK0 ] unsigned short 
  4041 ;;  adc_newval      2    0[BANK0 ] unsigned short 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4051 ;;      Params:         0       0       0       0
  4052 ;;      Locals:         0       9       0       0
  4053 ;;      Temps:          4       0       0       0
  4054 ;;      Totals:         4       9       0       0
  4055 ;;Total ram usage:       13 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 4
  4058 ;; This function calls:
  4059 ;;		_ADC_GetConversion
  4060 ;;		_PWM5_LoadDutyValue
  4061 ;;		_PWM6_LoadDutyValue
  4062 ;; This function is called by:
  4063 ;;		_loop_handler
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function _trimmer_handler
  4069  030F                     _trimmer_handler:
  4070  030F                     l1976:	
  4071                           ;incstack = 0
  4072                           ; Regs used in _trimmer_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4073                           
  4074                           
  4075                           ;flexar_driver.c: 103:     uint16_t adc_newval = ADC_GetConversion(channel_ANA4);
  4076  030F  3004               	movlw	4
  4077  0310  3186  26BF  3183   	fcall	_ADC_GetConversion
  4078  0313  0871               	movf	?_ADC_GetConversion+1,w
  4079  0314  0020               	movlb	0	; select bank0
  4080  0315  00C4               	movwf	trimmer_handler@adc_newval+1
  4081  0316  0870               	movf	?_ADC_GetConversion,w
  4082  0317  00C3               	movwf	trimmer_handler@adc_newval
  4083  0318                     l1978:
  4084  0318                     l1980:
  4085                           
  4086                           ;flexar_driver.c: 105:     uint16_t adc_avgsum = 0U;
  4087  0318  01C5               	clrf	trimmer_handler@adc_avgsum
  4088  0319  01C6               	clrf	trimmer_handler@adc_avgsum+1
  4089  031A                     l1982:
  4090                           
  4091                           ;flexar_driver.c: 108:     if(adc_newval > 1008U){
  4092  031A  3003               	movlw	3
  4093  031B  0244               	subwf	trimmer_handler@adc_newval+1,w
  4094  031C  30F1               	movlw	241
  4095  031D  1903               	skipnz
  4096  031E  0243               	subwf	trimmer_handler@adc_newval,w
  4097  031F  1C03               	skipc
  4098  0320  2B22               	goto	u581
  4099  0321  2B23               	goto	u580
  4100  0322                     u581:
  4101  0322  2B27               	goto	l1986
  4102  0323                     u580:
  4103  0323                     l1984:
  4104                           
  4105                           ;flexar_driver.c: 109:         adc_newval = 1008U;
  4106  0323  30F0               	movlw	240
  4107  0324  00C3               	movwf	trimmer_handler@adc_newval
  4108  0325  3003               	movlw	3
  4109  0326  00C4               	movwf	trimmer_handler@adc_newval+1
  4110  0327                     l1986:	
  4111                           ;flexar_driver.c: 110:     }
  4112                           
  4113                           
  4114                           ;flexar_driver.c: 116:     if(adc_avgcounter >= 7U){
  4115  0327  3007               	movlw	7
  4116  0328  023F               	subwf	_adc_avgcounter,w
  4117  0329  1C03               	skipc
  4118  032A  2B2C               	goto	u591
  4119  032B  2B2D               	goto	u590
  4120  032C                     u591:
  4121  032C  2B2F               	goto	l1990
  4122  032D                     u590:
  4123  032D                     l1988:
  4124                           
  4125                           ;flexar_driver.c: 117:         adc_avgcounter = 0U;
  4126  032D  01BF               	clrf	_adc_avgcounter
  4127                           
  4128                           ;flexar_driver.c: 118:     }
  4129  032E  2B33               	goto	l1992
  4130  032F                     l1990:
  4131                           
  4132                           ;flexar_driver.c: 120:         adc_avgcounter++;
  4133  032F  3001               	movlw	1
  4134  0330  00F4               	movwf	??_trimmer_handler
  4135  0331  0874               	movf	??_trimmer_handler,w
  4136  0332  07BF               	addwf	_adc_avgcounter,f
  4137  0333                     l1992:
  4138                           
  4139                           ;flexar_driver.c: 122:     adc_avgval[adc_avgcounter] = adc_newval;
  4140  0333  353F               	lslf	_adc_avgcounter,w
  4141  0334  3E20               	addlw	(low (_adc_avgval| 0))& (0+255)
  4142  0335  0086               	movwf	6
  4143  0336  0187               	clrf	7
  4144  0337  0843               	movf	trimmer_handler@adc_newval,w
  4145  0338  3FC0               	movwi [0]fsr1
  4146  0339  0844               	movf	trimmer_handler@adc_newval+1,w
  4147  033A  3FC1               	movwi [1]fsr1
  4148  033B                     l1994:
  4149                           
  4150                           ;flexar_driver.c: 123:     for (uint8_t i = 0; i <= 7U; i++){
  4151  033B  01C7               	clrf	trimmer_handler@i
  4152  033C                     l2000:
  4153                           
  4154                           ;flexar_driver.c: 124:         adc_avgsum += adc_avgval[adc_avgcounter];
  4155  033C  353F               	lslf	_adc_avgcounter,w
  4156  033D  3E20               	addlw	(low (_adc_avgval| 0))& (0+255)
  4157  033E  0086               	movwf	6
  4158  033F  0187               	clrf	7
  4159  0340  3F40               	moviw [0]fsr1
  4160  0341  00F4               	movwf	??_trimmer_handler
  4161  0342  3F41               	moviw [1]fsr1
  4162  0343  00F5               	movwf	??_trimmer_handler+1
  4163  0344  0874               	movf	??_trimmer_handler,w
  4164  0345  07C5               	addwf	trimmer_handler@adc_avgsum,f
  4165  0346  0875               	movf	??_trimmer_handler+1,w
  4166  0347  3DC6               	addwfc	trimmer_handler@adc_avgsum+1,f
  4167  0348                     l2002:
  4168                           
  4169                           ;flexar_driver.c: 125:     }
  4170  0348  3001               	movlw	1
  4171  0349  00F4               	movwf	??_trimmer_handler
  4172  034A  0874               	movf	??_trimmer_handler,w
  4173  034B  07C7               	addwf	trimmer_handler@i,f
  4174  034C                     l2004:
  4175  034C  3008               	movlw	8
  4176  034D  0247               	subwf	trimmer_handler@i,w
  4177  034E  1C03               	skipc
  4178  034F  2B51               	goto	u601
  4179  0350  2B52               	goto	u600
  4180  0351                     u601:
  4181  0351  2B3C               	goto	l2000
  4182  0352                     u600:
  4183  0352                     l2006:
  4184                           
  4185                           ;flexar_driver.c: 126:     adc_avgsum = adc_avgsum >> 3U;
  4186  0352  0846               	movf	trimmer_handler@adc_avgsum+1,w
  4187  0353  00F5               	movwf	??_trimmer_handler+1
  4188  0354  0845               	movf	trimmer_handler@adc_avgsum,w
  4189  0355  00F4               	movwf	??_trimmer_handler
  4190  0356  36F5               	lsrf	??_trimmer_handler+1,f
  4191  0357  0CF4               	rrf	??_trimmer_handler,f
  4192  0358  36F5               	lsrf	??_trimmer_handler+1,f
  4193  0359  0CF4               	rrf	??_trimmer_handler,f
  4194  035A  36F5               	lsrf	??_trimmer_handler+1,f
  4195  035B  0CF4               	rrf	??_trimmer_handler,f
  4196  035C  0874               	movf	??_trimmer_handler,w
  4197  035D  00C5               	movwf	trimmer_handler@adc_avgsum
  4198  035E  0875               	movf	??_trimmer_handler+1,w
  4199  035F  00C6               	movwf	trimmer_handler@adc_avgsum+1
  4200                           
  4201                           ;flexar_driver.c: 129:     index_val = adc_avgsum >> 4U;
  4202  0360  0E45               	swapf	trimmer_handler@adc_avgsum,w
  4203  0361  390F               	andlw	15
  4204  0362  00C8               	movwf	trimmer_handler@index_val
  4205  0363  0E46               	swapf	trimmer_handler@adc_avgsum+1,w
  4206  0364  39F0               	andlw	240
  4207  0365  04C8               	iorwf	trimmer_handler@index_val,f
  4208  0366  0E46               	swapf	trimmer_handler@adc_avgsum+1,w
  4209  0367  390F               	andlw	15
  4210  0368  00C9               	movwf	trimmer_handler@index_val+1
  4211  0369                     l2008:
  4212                           
  4213                           ;flexar_driver.c: 131:     if(index_val != index_lastval){
  4214  0369  085B               	movf	_index_lastval+1,w
  4215  036A  0649               	xorwf	trimmer_handler@index_val+1,w
  4216  036B  1D03               	skipz
  4217  036C  2B6F               	goto	u615
  4218  036D  085A               	movf	_index_lastval,w
  4219  036E  0648               	xorwf	trimmer_handler@index_val,w
  4220  036F                     u615:
  4221  036F  1903               	skipnz
  4222  0370  2B72               	goto	u611
  4223  0371  2B73               	goto	u610
  4224  0372                     u611:
  4225  0372  2C1F               	goto	l2040
  4226  0373                     u610:
  4227  0373                     l2010:
  4228                           
  4229                           ;flexar_driver.c: 133:         uint16_t array_val = index_val << 4U;
  4230  0373  0849               	movf	trimmer_handler@index_val+1,w
  4231  0374  00F5               	movwf	??_trimmer_handler+1
  4232  0375  0848               	movf	trimmer_handler@index_val,w
  4233  0376  00F4               	movwf	??_trimmer_handler
  4234  0377  0EF4               	swapf	??_trimmer_handler,f
  4235  0378  0EF5               	swapf	??_trimmer_handler+1,f
  4236  0379  30F0               	movlw	240
  4237  037A  05F5               	andwf	??_trimmer_handler+1,f
  4238  037B  0874               	movf	??_trimmer_handler,w
  4239  037C  390F               	andlw	15
  4240  037D  04F5               	iorwf	??_trimmer_handler+1,f
  4241  037E  30F0               	movlw	240
  4242  037F  05F4               	andwf	??_trimmer_handler,f
  4243  0380  0874               	movf	??_trimmer_handler,w
  4244  0381  00CA               	movwf	trimmer_handler@array_val
  4245  0382  0875               	movf	??_trimmer_handler+1,w
  4246  0383  00CB               	movwf	trimmer_handler@array_val+1
  4247                           
  4248                           ;flexar_driver.c: 134:         if(index_tmr < 250U){
  4249  0384  30FA               	movlw	250
  4250  0385  0240               	subwf	_index_tmr,w
  4251  0386  1803               	skipnc
  4252  0387  2B89               	goto	u621
  4253  0388  2B8A               	goto	u620
  4254  0389                     u621:
  4255  0389  2B8F               	goto	l2014
  4256  038A                     u620:
  4257  038A                     l2012:
  4258                           
  4259                           ;flexar_driver.c: 135:             index_tmr++;
  4260  038A  3001               	movlw	1
  4261  038B  00F4               	movwf	??_trimmer_handler
  4262  038C  0874               	movf	??_trimmer_handler,w
  4263  038D  07C0               	addwf	_index_tmr,f
  4264                           
  4265                           ;flexar_driver.c: 136:         }
  4266  038E  2C20               	goto	l453
  4267  038F                     l2014:
  4268                           
  4269                           ;flexar_driver.c: 138:             index_lastval = index_val;
  4270  038F  0849               	movf	trimmer_handler@index_val+1,w
  4271  0390  00DB               	movwf	_index_lastval+1
  4272  0391  0848               	movf	trimmer_handler@index_val,w
  4273  0392  00DA               	movwf	_index_lastval
  4274                           
  4275                           ;flexar_driver.c: 139:                 if(driver_mode <= 2U){
  4276  0393  3003               	movlw	3
  4277  0394  025C               	subwf	_driver_mode,w
  4278  0395  1803               	skipnc
  4279  0396  2B98               	goto	u631
  4280  0397  2B99               	goto	u630
  4281  0398                     u631:
  4282  0398  2BB2               	goto	l2020
  4283  0399                     u630:
  4284  0399                     l2016:
  4285                           
  4286                           ;flexar_driver.c: 141:                     period_val = period_buffer[index_val];
  4287  0399  0849               	movf	trimmer_handler@index_val+1,w
  4288  039A  0085               	movwf	5
  4289  039B  0848               	movf	trimmer_handler@index_val,w
  4290  039C  0084               	movwf	4
  4291  039D  3584               	lslf	4,f
  4292  039E  0D85               	rlf	5,f
  4293  039F  3021               	movlw	low (_period_buffer| (0+32768))
  4294  03A0  0784               	addwf	4,f
  4295  03A1  3084               	movlw	high (_period_buffer| (0+32768))
  4296  03A2  3D85               	addwfc	5,f
  4297  03A3  3F00               	moviw [0]fsr0
  4298  03A4  00B8               	movwf	_period_val
  4299  03A5  3F01               	moviw [1]fsr0
  4300  03A6  00B9               	movwf	_period_val+1
  4301  03A7                     l2018:
  4302                           
  4303                           ;flexar_driver.c: 142:                     period_halfval = period_val >> 1U;
  4304  03A7  0839               	movf	_period_val+1,w
  4305  03A8  00F5               	movwf	??_trimmer_handler+1
  4306  03A9  0838               	movf	_period_val,w
  4307  03AA  00F4               	movwf	??_trimmer_handler
  4308  03AB  36F5               	lsrf	??_trimmer_handler+1,f
  4309  03AC  0CF4               	rrf	??_trimmer_handler,f
  4310  03AD  0874               	movf	??_trimmer_handler,w
  4311  03AE  00B6               	movwf	_period_halfval
  4312  03AF  0875               	movf	??_trimmer_handler+1,w
  4313  03B0  00B7               	movwf	_period_halfval+1
  4314                           
  4315                           ;flexar_driver.c: 143:                 }
  4316  03B1  2C20               	goto	l453
  4317  03B2                     l2020:
  4318  03B2  3005               	movlw	5
  4319  03B3  025C               	subwf	_driver_mode,w
  4320  03B4  1803               	skipnc
  4321  03B5  2BB7               	goto	u641
  4322  03B6  2BB8               	goto	u640
  4323  03B7                     u641:
  4324  03B7  2BE8               	goto	l2032
  4325  03B8                     u640:
  4326  03B8                     l2022:
  4327                           
  4328                           ;flexar_driver.c: 146:                     if(array_val>800U){
  4329  03B8  3003               	movlw	3
  4330  03B9  024B               	subwf	trimmer_handler@array_val+1,w
  4331  03BA  3021               	movlw	33
  4332  03BB  1903               	skipnz
  4333  03BC  024A               	subwf	trimmer_handler@array_val,w
  4334  03BD  1C03               	skipc
  4335  03BE  2BC0               	goto	u651
  4336  03BF  2BC1               	goto	u650
  4337  03C0                     u651:
  4338  03C0  2BC5               	goto	l2026
  4339  03C1                     u650:
  4340  03C1                     l2024:
  4341                           
  4342                           ;flexar_driver.c: 147:                         array_val = 800U;
  4343  03C1  3020               	movlw	32
  4344  03C2  00CA               	movwf	trimmer_handler@array_val
  4345  03C3  3003               	movlw	3
  4346  03C4  00CB               	movwf	trimmer_handler@array_val+1
  4347  03C5                     l2026:	
  4348                           ;flexar_driver.c: 148:                     }
  4349                           
  4350                           
  4351                           ;flexar_driver.c: 152:                     if(driver_mode == 4U){
  4352  03C5  3004               	movlw	4
  4353  03C6  065C               	xorwf	_driver_mode,w
  4354  03C7  1D03               	btfss	3,2
  4355  03C8  2BCA               	goto	u661
  4356  03C9  2BCB               	goto	u660
  4357  03CA                     u661:
  4358  03CA  2BDA               	goto	l2030
  4359  03CB                     u660:
  4360  03CB                     l2028:
  4361                           
  4362                           ;flexar_driver.c: 154:                         PWM5_LoadDutyValue(array_val);
  4363  03CB  084B               	movf	trimmer_handler@array_val+1,w
  4364  03CC  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  4365  03CD  084A               	movf	trimmer_handler@array_val,w
  4366  03CE  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  4367  03CF  3186  26F0  3183   	fcall	_PWM5_LoadDutyValue
  4368                           
  4369                           ;flexar_driver.c: 155:                         PWM6_LoadDutyValue(800U);
  4370  03D2  3020               	movlw	32
  4371  03D3  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  4372  03D4  3003               	movlw	3
  4373  03D5  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  4374  03D6  3186  26DA  3183   	fcall	_PWM6_LoadDutyValue
  4375                           
  4376                           ;flexar_driver.c: 156:                     }
  4377  03D9  2C20               	goto	l453
  4378  03DA                     l2030:
  4379                           
  4380                           ;flexar_driver.c: 159:                         PWM6_LoadDutyValue(array_val);
  4381  03DA  084B               	movf	trimmer_handler@array_val+1,w
  4382  03DB  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  4383  03DC  084A               	movf	trimmer_handler@array_val,w
  4384  03DD  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  4385  03DE  3186  26DA  3183   	fcall	_PWM6_LoadDutyValue
  4386                           
  4387                           ;flexar_driver.c: 160:                         PWM5_LoadDutyValue(0U);
  4388  03E1  3000               	movlw	0
  4389  03E2  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  4390  03E3  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  4391  03E4  3186  26F0  3183   	fcall	_PWM5_LoadDutyValue
  4392  03E7  2C20               	goto	l453
  4393  03E8                     l2032:
  4394  03E8  3005               	movlw	5
  4395  03E9  065C               	xorwf	_driver_mode,w
  4396  03EA  1D03               	btfss	3,2
  4397  03EB  2BED               	goto	u671
  4398  03EC  2BEE               	goto	u670
  4399  03ED                     u671:
  4400  03ED  2C1E               	goto	l443
  4401  03EE                     u670:
  4402  03EE                     l2034:
  4403                           
  4404                           ;flexar_driver.c: 165:                     array_val = array_val >> 3U;
  4405  03EE  084B               	movf	trimmer_handler@array_val+1,w
  4406  03EF  00F5               	movwf	??_trimmer_handler+1
  4407  03F0  084A               	movf	trimmer_handler@array_val,w
  4408  03F1  00F4               	movwf	??_trimmer_handler
  4409  03F2  36F5               	lsrf	??_trimmer_handler+1,f
  4410  03F3  0CF4               	rrf	??_trimmer_handler,f
  4411  03F4  36F5               	lsrf	??_trimmer_handler+1,f
  4412  03F5  0CF4               	rrf	??_trimmer_handler,f
  4413  03F6  36F5               	lsrf	??_trimmer_handler+1,f
  4414  03F7  0CF4               	rrf	??_trimmer_handler,f
  4415  03F8  0874               	movf	??_trimmer_handler,w
  4416  03F9  00CA               	movwf	trimmer_handler@array_val
  4417  03FA  0875               	movf	??_trimmer_handler+1,w
  4418  03FB  00CB               	movwf	trimmer_handler@array_val+1
  4419                           
  4420                           ;flexar_driver.c: 166:                     PR2 = (14U + array_val);
  4421  03FC  084A               	movf	trimmer_handler@array_val,w
  4422  03FD  3E0E               	addlw	14
  4423  03FE  009E               	movwf	30	;volatile
  4424                           
  4425                           ;flexar_driver.c: 167:                     array_val = 2*(PR2+1);
  4426  03FF  081E               	movf	30,w	;volatile
  4427  0400  00F4               	movwf	??_trimmer_handler
  4428  0401  01F5               	clrf	??_trimmer_handler+1
  4429  0402  35F4               	lslf	??_trimmer_handler,f
  4430  0403  0DF5               	rlf	??_trimmer_handler+1,f
  4431  0404  0874               	movf	??_trimmer_handler,w
  4432  0405  3E02               	addlw	2
  4433  0406  00F6               	movwf	??_trimmer_handler+2
  4434  0407  3000               	movlw	0
  4435  0408  3D75               	addwfc	??_trimmer_handler+1,w
  4436  0409  00F7               	movwf	??_trimmer_handler+3
  4437  040A  0876               	movf	??_trimmer_handler+2,w
  4438  040B  00CA               	movwf	trimmer_handler@array_val
  4439  040C  0877               	movf	??_trimmer_handler+3,w
  4440  040D  00CB               	movwf	trimmer_handler@array_val+1
  4441  040E                     l2036:
  4442                           
  4443                           ;flexar_driver.c: 168:                     PWM5_LoadDutyValue(array_val);
  4444  040E  084B               	movf	trimmer_handler@array_val+1,w
  4445  040F  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  4446  0410  084A               	movf	trimmer_handler@array_val,w
  4447  0411  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  4448  0412  3186  26F0  3183   	fcall	_PWM5_LoadDutyValue
  4449  0415                     l2038:
  4450                           
  4451                           ;flexar_driver.c: 169:                     PWM6_LoadDutyValue(array_val);
  4452  0415  0020               	movlb	0	; select bank0
  4453  0416  084B               	movf	trimmer_handler@array_val+1,w
  4454  0417  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  4455  0418  084A               	movf	trimmer_handler@array_val,w
  4456  0419  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  4457  041A  3186  26DA  3183   	fcall	_PWM6_LoadDutyValue
  4458                           
  4459                           ;flexar_driver.c: 170:                 }
  4460  041D  2C20               	goto	l453
  4461  041E                     l443:
  4462  041E  2C20               	goto	l453
  4463  041F                     l2040:
  4464                           
  4465                           ;flexar_driver.c: 178:         index_tmr = 0U;
  4466  041F  01C0               	clrf	_index_tmr
  4467  0420                     l453:
  4468  0420  0008               	return
  4469  0421                     __end_of_trimmer_handler:
  4470                           
  4471                           	psect	text3
  4472  0552                     __ptext3:	
  4473 ;; *************** function _flash_handler *****************
  4474 ;; Defined at:
  4475 ;;		line 85 in file "flexar_driver.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4489 ;;      Params:         0       0       0       0
  4490 ;;      Locals:         0       0       0       0
  4491 ;;      Temps:          1       0       0       0
  4492 ;;      Totals:         1       0       0       0
  4493 ;;Total ram usage:        1 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 4
  4496 ;; This function calls:
  4497 ;;		_DATAEE_WriteByte
  4498 ;; This function is called by:
  4499 ;;		_loop_handler
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _flash_handler
  4505  0552                     _flash_handler:
  4506  0552                     l2042:	
  4507                           ;incstack = 0
  4508                           ; Regs used in _flash_handler: [wreg+status,2+status,0+pclath+cstack]
  4509                           
  4510                           
  4511                           ;flexar_driver.c: 86:     if(eepdriver_mode != driver_mode){
  4512  0552  087D               	movf	_eepdriver_mode,w
  4513  0553  0020               	movlb	0	; select bank0
  4514  0554  065C               	xorwf	_driver_mode,w
  4515  0555  1903               	skipnz
  4516  0556  2D58               	goto	u681
  4517  0557  2D59               	goto	u680
  4518  0558                     u681:
  4519  0558  2D8A               	goto	l2054
  4520  0559                     u680:
  4521  0559                     l2044:
  4522                           
  4523                           ;flexar_driver.c: 88:         if(eeptimer < 1875000U){
  4524  0559  0833               	movf	_eeptimer+3,w
  4525  055A  1D03               	btfss	3,2
  4526  055B  2D65               	goto	u691
  4527  055C  3038               	movlw	56
  4528  055D  0230               	subwf	_eeptimer,w
  4529  055E  309C               	movlw	156
  4530  055F  3B31               	subwfb	_eeptimer+1,w
  4531  0560  301C               	movlw	28
  4532  0561  3B32               	subwfb	_eeptimer+2,w
  4533  0562  1803               	btfsc	3,0
  4534  0563  2D65               	goto	u691
  4535  0564  2D66               	goto	u690
  4536  0565                     u691:
  4537  0565  2D70               	goto	l2048
  4538  0566                     u690:
  4539  0566                     l2046:
  4540                           
  4541                           ;flexar_driver.c: 89:             eeptimer++;
  4542  0566  3001               	movlw	1
  4543  0567  0020               	movlb	0	; select bank0
  4544  0568  07B0               	addwf	_eeptimer,f
  4545  0569  3000               	movlw	0
  4546  056A  3DB1               	addwfc	_eeptimer+1,f
  4547  056B  3000               	movlw	0
  4548  056C  3DB2               	addwfc	_eeptimer+2,f
  4549  056D  3000               	movlw	0
  4550  056E  3DB3               	addwfc	_eeptimer+3,f
  4551                           
  4552                           ;flexar_driver.c: 90:         }
  4553  056F  2D92               	goto	l430
  4554  0570                     l2048:
  4555                           
  4556                           ;flexar_driver.c: 92:             eeptimer = 0U;
  4557  0570  3000               	movlw	0
  4558  0571  0020               	movlb	0	; select bank0
  4559  0572  00B3               	movwf	_eeptimer+3
  4560  0573  3000               	movlw	0
  4561  0574  00B2               	movwf	_eeptimer+2
  4562  0575  3000               	movlw	0
  4563  0576  00B1               	movwf	_eeptimer+1
  4564  0577  3000               	movlw	0
  4565  0578  00B0               	movwf	_eeptimer
  4566  0579                     l2050:
  4567                           
  4568                           ;flexar_driver.c: 93:             DATAEE_WriteByte(0x7000U,driver_mode);
  4569  0579  3000               	movlw	0
  4570  057A  00F0               	movwf	DATAEE_WriteByte@bAdd
  4571  057B  3070               	movlw	112
  4572  057C  00F1               	movwf	DATAEE_WriteByte@bAdd+1
  4573  057D  085C               	movf	_driver_mode,w
  4574  057E  00F4               	movwf	??_flash_handler
  4575  057F  0874               	movf	??_flash_handler,w
  4576  0580  00F2               	movwf	DATAEE_WriteByte@bData
  4577  0581  3186  264B  3185   	fcall	_DATAEE_WriteByte
  4578  0584                     l2052:
  4579                           
  4580                           ;flexar_driver.c: 94:             eepdriver_mode = driver_mode;
  4581  0584  0020               	movlb	0	; select bank0
  4582  0585  085C               	movf	_driver_mode,w
  4583  0586  00F4               	movwf	??_flash_handler
  4584  0587  0874               	movf	??_flash_handler,w
  4585  0588  00FD               	movwf	_eepdriver_mode
  4586  0589  2D92               	goto	l430
  4587  058A                     l2054:
  4588                           
  4589                           ;flexar_driver.c: 98:         eeptimer = 0U;
  4590  058A  3000               	movlw	0
  4591  058B  00B3               	movwf	_eeptimer+3
  4592  058C  3000               	movlw	0
  4593  058D  00B2               	movwf	_eeptimer+2
  4594  058E  3000               	movlw	0
  4595  058F  00B1               	movwf	_eeptimer+1
  4596  0590  3000               	movlw	0
  4597  0591  00B0               	movwf	_eeptimer
  4598  0592                     l430:
  4599  0592  0008               	return
  4600  0593                     __end_of_flash_handler:
  4601                           
  4602                           	psect	text4
  4603  064B                     __ptext4:	
  4604 ;; *************** function _DATAEE_WriteByte *****************
  4605 ;; Defined at:
  4606 ;;		line 180 in file "mcc_generated_files/memory.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  bAdd            2    0[COMMON] unsigned short 
  4609 ;;  bData           1    2[COMMON] unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  GIEBitValue     1    3[COMMON] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4621 ;;      Params:         3       0       0       0
  4622 ;;      Locals:         1       0       0       0
  4623 ;;      Temps:          0       0       0       0
  4624 ;;      Totals:         4       0       0       0
  4625 ;;Total ram usage:        4 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 3
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_flash_handler
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function _DATAEE_WriteByte
  4637  064B                     _DATAEE_WriteByte:
  4638  064B                     l1808:	
  4639                           ;incstack = 0
  4640                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  4641                           
  4642                           
  4643                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  4644  064B  3000               	movlw	0
  4645  064C  1B8B               	btfsc	11,7	;volatile
  4646  064D  3001               	movlw	1
  4647  064E  00F3               	movwf	DATAEE_WriteByte@GIEBitValue
  4648                           
  4649                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  4650  064F  0871               	movf	DATAEE_WriteByte@bAdd+1,w
  4651  0650  0031               	movlb	17	; select bank17
  4652  0651  0092               	movwf	18	;volatile
  4653  0652                     l1810:
  4654                           
  4655                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  4656  0652  0870               	movf	DATAEE_WriteByte@bAdd,w
  4657  0653  0091               	movwf	17	;volatile
  4658  0654                     l1812:
  4659                           
  4660                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  4661  0654  0872               	movf	DATAEE_WriteByte@bData,w
  4662  0655  0093               	movwf	19	;volatile
  4663  0656                     l1814:
  4664                           
  4665                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  4666  0656  1715               	bsf	21,6	;volsfr
  4667  0657                     l1816:
  4668                           
  4669                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  4670  0657  1515               	bsf	21,2	;volsfr
  4671  0658                     l1818:
  4672                           
  4673                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  4674  0658  138B               	bcf	11,7	;volatile
  4675  0659                     l1820:
  4676                           
  4677                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  4678  0659  3055               	movlw	85
  4679  065A  0096               	movwf	22	;volsfr
  4680  065B                     l1822:
  4681                           
  4682                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  4683  065B  30AA               	movlw	170
  4684  065C  0096               	movwf	22	;volsfr
  4685  065D                     l1824:
  4686                           
  4687                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  4688  065D  1495               	bsf	21,1	;volsfr
  4689  065E                     l292:	
  4690                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  4691                           
  4692                           
  4693                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  4694  065E  1895               	btfsc	21,1	;volsfr
  4695  065F  2E61               	goto	u571
  4696  0660  2E62               	goto	u570
  4697  0661                     u571:
  4698  0661  2E5E               	goto	l292
  4699  0662                     u570:
  4700  0662                     l294:
  4701                           
  4702                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  4703  0662  1115               	bcf	21,2	;volsfr
  4704  0663                     l1826:
  4705                           
  4706                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  4707  0663  0C73               	rrf	DATAEE_WriteByte@GIEBitValue,w
  4708  0664  1C03               	skipc
  4709  0665  138B               	bcf	11,7	;volatile
  4710  0666  1803               	skipnc
  4711  0667  178B               	bsf	11,7	;volatile
  4712  0668                     l295:
  4713  0668  0008               	return
  4714  0669                     __end_of_DATAEE_WriteByte:
  4715                           
  4716                           	psect	text5
  4717  01A5                     __ptext5:	
  4718 ;; *************** function _driver_run *****************
  4719 ;; Defined at:
  4720 ;;		line 182 in file "flexar_driver.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  duty_val        4   17[BANK0 ] unsigned long 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4734 ;;      Params:         0       0       0       0
  4735 ;;      Locals:         0       4       0       0
  4736 ;;      Temps:          0       4       0       0
  4737 ;;      Totals:         0       8       0       0
  4738 ;;Total ram usage:        8 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 4
  4741 ;; This function calls:
  4742 ;;		_PWM5_LoadDutyValue
  4743 ;;		_PWM6_LoadDutyValue
  4744 ;;		___lldiv
  4745 ;;		___lmul
  4746 ;; This function is called by:
  4747 ;;		_main
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _driver_run
  4753  01A5                     _driver_run:
  4754  01A5                     l2170:	
  4755                           ;incstack = 0
  4756                           ; Regs used in _driver_run: [wreg+status,2+status,0+pclath+cstack]
  4757                           
  4758                           
  4759                           ;flexar_driver.c: 184:     period_tmr++;
  4760  01A5  3001               	movlw	1
  4761  01A6  0020               	movlb	0	; select bank0
  4762  01A7  07B4               	addwf	_period_tmr,f
  4763  01A8  3000               	movlw	0
  4764  01A9  3DB5               	addwfc	_period_tmr+1,f
  4765                           
  4766                           ;flexar_driver.c: 186:     if(driver_mode <= 2U){
  4767  01AA  3003               	movlw	3
  4768  01AB  025C               	subwf	_driver_mode,w
  4769  01AC  1803               	skipnc
  4770  01AD  29AF               	goto	u851
  4771  01AE  29B0               	goto	u850
  4772  01AF                     u851:
  4773  01AF  2B0E               	goto	l474
  4774  01B0                     u850:
  4775  01B0                     l2172:
  4776                           
  4777                           ;flexar_driver.c: 187:         if(driver_mode == 2U){
  4778  01B0  3002               	movlw	2
  4779  01B1  065C               	xorwf	_driver_mode,w
  4780  01B2  1D03               	btfss	3,2
  4781  01B3  29B5               	goto	u861
  4782  01B4  29B6               	goto	u860
  4783  01B5                     u861:
  4784  01B5  2AD1               	goto	l2194
  4785  01B6                     u860:
  4786  01B6                     l2174:
  4787                           
  4788                           ;flexar_driver.c: 189:             if(signal_toggle){
  4789  01B6  0841               	movf	_signal_toggle,w
  4790  01B7  1903               	btfsc	3,2
  4791  01B8  29BA               	goto	u871
  4792  01B9  29BB               	goto	u870
  4793  01BA                     u871:
  4794  01BA  2A33               	goto	l2182
  4795  01BB                     u870:
  4796  01BB                     l2176:
  4797                           
  4798                           ;flexar_driver.c: 190:                 if(period_tmr <= period_halfval){
  4799  01BB  0835               	movf	_period_tmr+1,w
  4800  01BC  0237               	subwf	_period_halfval+1,w
  4801  01BD  1D03               	skipz
  4802  01BE  29C1               	goto	u885
  4803  01BF  0834               	movf	_period_tmr,w
  4804  01C0  0236               	subwf	_period_halfval,w
  4805  01C1                     u885:
  4806  01C1  1C03               	skipc
  4807  01C2  29C4               	goto	u881
  4808  01C3  29C5               	goto	u880
  4809  01C4                     u881:
  4810  01C4  29F6               	goto	l2180
  4811  01C5                     u880:
  4812  01C5                     l2178:
  4813                           
  4814                           ;flexar_driver.c: 192:                     duty_val = ((((uint32_t)period_tmr) * 400U)/(
      +                          (uint32_t)period_halfval)) + 400U;
  4815  01C5  0836               	movf	_period_halfval,w
  4816  01C6  00C3               	movwf	___lldiv@divisor
  4817  01C7  0837               	movf	_period_halfval+1,w
  4818  01C8  00C4               	movwf	___lldiv@divisor+1
  4819  01C9  01C5               	clrf	___lldiv@divisor+2
  4820  01CA  01C6               	clrf	___lldiv@divisor+3
  4821  01CB  0834               	movf	_period_tmr,w
  4822  01CC  00F0               	movwf	___lmul@multiplier
  4823  01CD  0835               	movf	_period_tmr+1,w
  4824  01CE  00F1               	movwf	___lmul@multiplier+1
  4825  01CF  01F2               	clrf	___lmul@multiplier+2
  4826  01D0  01F3               	clrf	___lmul@multiplier+3
  4827  01D1  3000               	movlw	0
  4828  01D2  00F7               	movwf	___lmul@multiplicand+3
  4829  01D3  3000               	movlw	0
  4830  01D4  00F6               	movwf	___lmul@multiplicand+2
  4831  01D5  3001               	movlw	1
  4832  01D6  00F5               	movwf	___lmul@multiplicand+1
  4833  01D7  3090               	movlw	144
  4834  01D8  00F4               	movwf	___lmul@multiplicand
  4835  01D9  3185  25CF  3181   	fcall	___lmul
  4836  01DC  0873               	movf	?___lmul+3,w
  4837  01DD  0020               	movlb	0	; select bank0
  4838  01DE  00CA               	movwf	___lldiv@dividend+3
  4839  01DF  0872               	movf	?___lmul+2,w
  4840  01E0  00C9               	movwf	___lldiv@dividend+2
  4841  01E1  0871               	movf	?___lmul+1,w
  4842  01E2  00C8               	movwf	___lldiv@dividend+1
  4843  01E3  0870               	movf	?___lmul,w
  4844  01E4  00C7               	movwf	___lldiv@dividend
  4845  01E5  3184  24A1  3181   	fcall	___lldiv
  4846  01E8  3090               	movlw	144
  4847  01E9  0020               	movlb	0	; select bank0
  4848  01EA  0743               	addwf	?___lldiv,w
  4849  01EB  00D4               	movwf	driver_run@duty_val
  4850  01EC  3001               	movlw	1
  4851  01ED  3D44               	addwfc	?___lldiv+1,w
  4852  01EE  00D5               	movwf	driver_run@duty_val+1
  4853  01EF  3000               	movlw	0
  4854  01F0  3D45               	addwfc	?___lldiv+2,w
  4855  01F1  00D6               	movwf	driver_run@duty_val+2
  4856  01F2  3000               	movlw	0
  4857  01F3  3D46               	addwfc	?___lldiv+3,w
  4858  01F4  00D7               	movwf	driver_run@duty_val+3
  4859                           
  4860                           ;flexar_driver.c: 193:                 }
  4861  01F5  2AAA               	goto	l2188
  4862  01F6                     l2180:
  4863                           
  4864                           ;flexar_driver.c: 196:                     duty_val = 1200U - ((((uint32_t)period_tmr) *
      +                           800U)/((uint32_t)period_val));
  4865  01F6  0838               	movf	_period_val,w
  4866  01F7  00C3               	movwf	___lldiv@divisor
  4867  01F8  0839               	movf	_period_val+1,w
  4868  01F9  00C4               	movwf	___lldiv@divisor+1
  4869  01FA  01C5               	clrf	___lldiv@divisor+2
  4870  01FB  01C6               	clrf	___lldiv@divisor+3
  4871  01FC  0834               	movf	_period_tmr,w
  4872  01FD  00F0               	movwf	___lmul@multiplier
  4873  01FE  0835               	movf	_period_tmr+1,w
  4874  01FF  00F1               	movwf	___lmul@multiplier+1
  4875  0200  01F2               	clrf	___lmul@multiplier+2
  4876  0201  01F3               	clrf	___lmul@multiplier+3
  4877  0202  3000               	movlw	0
  4878  0203  00F7               	movwf	___lmul@multiplicand+3
  4879  0204  3000               	movlw	0
  4880  0205  00F6               	movwf	___lmul@multiplicand+2
  4881  0206  3003               	movlw	3
  4882  0207  00F5               	movwf	___lmul@multiplicand+1
  4883  0208  3020               	movlw	32
  4884  0209  00F4               	movwf	___lmul@multiplicand
  4885  020A  3185  25CF  3181   	fcall	___lmul
  4886  020D  0873               	movf	?___lmul+3,w
  4887  020E  0020               	movlb	0	; select bank0
  4888  020F  00CA               	movwf	___lldiv@dividend+3
  4889  0210  0872               	movf	?___lmul+2,w
  4890  0211  00C9               	movwf	___lldiv@dividend+2
  4891  0212  0871               	movf	?___lmul+1,w
  4892  0213  00C8               	movwf	___lldiv@dividend+1
  4893  0214  0870               	movf	?___lmul,w
  4894  0215  00C7               	movwf	___lldiv@dividend
  4895  0216  3184  24A1  3181   	fcall	___lldiv
  4896  0219  30B0               	movlw	176
  4897  021A  0020               	movlb	0	; select bank0
  4898  021B  00D0               	movwf	??_driver_run
  4899  021C  3004               	movlw	4
  4900  021D  00D1               	movwf	??_driver_run+1
  4901  021E  3000               	movlw	0
  4902  021F  00D2               	movwf	??_driver_run+2
  4903  0220  3000               	movlw	0
  4904  0221  00D3               	movwf	??_driver_run+3
  4905  0222  0843               	movf	?___lldiv,w
  4906  0223  02D0               	subwf	??_driver_run,f
  4907  0224  0844               	movf	?___lldiv+1,w
  4908  0225  3BD1               	subwfb	??_driver_run+1,f
  4909  0226  0845               	movf	?___lldiv+2,w
  4910  0227  3BD2               	subwfb	??_driver_run+2,f
  4911  0228  0846               	movf	?___lldiv+3,w
  4912  0229  3BD3               	subwfb	??_driver_run+3,f
  4913  022A  0853               	movf	??_driver_run+3,w
  4914  022B  00D7               	movwf	driver_run@duty_val+3
  4915  022C  0852               	movf	??_driver_run+2,w
  4916  022D  00D6               	movwf	driver_run@duty_val+2
  4917  022E  0851               	movf	??_driver_run+1,w
  4918  022F  00D5               	movwf	driver_run@duty_val+1
  4919  0230  0850               	movf	??_driver_run,w
  4920  0231  00D4               	movwf	driver_run@duty_val
  4921  0232  2AAA               	goto	l2188
  4922  0233                     l2182:
  4923                           
  4924                           ;flexar_driver.c: 200:                 if(period_tmr <= period_halfval){
  4925  0233  0835               	movf	_period_tmr+1,w
  4926  0234  0237               	subwf	_period_halfval+1,w
  4927  0235  1D03               	skipz
  4928  0236  2A39               	goto	u895
  4929  0237  0834               	movf	_period_tmr,w
  4930  0238  0236               	subwf	_period_halfval,w
  4931  0239                     u895:
  4932  0239  1C03               	skipc
  4933  023A  2A3C               	goto	u891
  4934  023B  2A3D               	goto	u890
  4935  023C                     u891:
  4936  023C  2A7A               	goto	l2186
  4937  023D                     u890:
  4938  023D                     l2184:
  4939                           
  4940                           ;flexar_driver.c: 202:                     duty_val = (400U - ((((uint32_t)period_tmr) *
      +                           400U)/((uint32_t)period_halfval)));
  4941  023D  0836               	movf	_period_halfval,w
  4942  023E  00C3               	movwf	___lldiv@divisor
  4943  023F  0837               	movf	_period_halfval+1,w
  4944  0240  00C4               	movwf	___lldiv@divisor+1
  4945  0241  01C5               	clrf	___lldiv@divisor+2
  4946  0242  01C6               	clrf	___lldiv@divisor+3
  4947  0243  0834               	movf	_period_tmr,w
  4948  0244  00F0               	movwf	___lmul@multiplier
  4949  0245  0835               	movf	_period_tmr+1,w
  4950  0246  00F1               	movwf	___lmul@multiplier+1
  4951  0247  01F2               	clrf	___lmul@multiplier+2
  4952  0248  01F3               	clrf	___lmul@multiplier+3
  4953  0249  3000               	movlw	0
  4954  024A  00F7               	movwf	___lmul@multiplicand+3
  4955  024B  3000               	movlw	0
  4956  024C  00F6               	movwf	___lmul@multiplicand+2
  4957  024D  3001               	movlw	1
  4958  024E  00F5               	movwf	___lmul@multiplicand+1
  4959  024F  3090               	movlw	144
  4960  0250  00F4               	movwf	___lmul@multiplicand
  4961  0251  3185  25CF  3181   	fcall	___lmul
  4962  0254  0873               	movf	?___lmul+3,w
  4963  0255  0020               	movlb	0	; select bank0
  4964  0256  00CA               	movwf	___lldiv@dividend+3
  4965  0257  0872               	movf	?___lmul+2,w
  4966  0258  00C9               	movwf	___lldiv@dividend+2
  4967  0259  0871               	movf	?___lmul+1,w
  4968  025A  00C8               	movwf	___lldiv@dividend+1
  4969  025B  0870               	movf	?___lmul,w
  4970  025C  00C7               	movwf	___lldiv@dividend
  4971  025D  3184  24A1  3181   	fcall	___lldiv
  4972  0260  3090               	movlw	144
  4973  0261  0020               	movlb	0	; select bank0
  4974  0262  00D0               	movwf	??_driver_run
  4975  0263  3001               	movlw	1
  4976  0264  00D1               	movwf	??_driver_run+1
  4977  0265  3000               	movlw	0
  4978  0266  00D2               	movwf	??_driver_run+2
  4979  0267  3000               	movlw	0
  4980  0268  00D3               	movwf	??_driver_run+3
  4981  0269  0843               	movf	?___lldiv,w
  4982  026A  02D0               	subwf	??_driver_run,f
  4983  026B  0844               	movf	?___lldiv+1,w
  4984  026C  3BD1               	subwfb	??_driver_run+1,f
  4985  026D  0845               	movf	?___lldiv+2,w
  4986  026E  3BD2               	subwfb	??_driver_run+2,f
  4987  026F  0846               	movf	?___lldiv+3,w
  4988  0270  3BD3               	subwfb	??_driver_run+3,f
  4989  0271  0853               	movf	??_driver_run+3,w
  4990  0272  00D7               	movwf	driver_run@duty_val+3
  4991  0273  0852               	movf	??_driver_run+2,w
  4992  0274  00D6               	movwf	driver_run@duty_val+2
  4993  0275  0851               	movf	??_driver_run+1,w
  4994  0276  00D5               	movwf	driver_run@duty_val+1
  4995  0277  0850               	movf	??_driver_run,w
  4996  0278  00D4               	movwf	driver_run@duty_val
  4997                           
  4998                           ;flexar_driver.c: 203:                 }
  4999  0279  2AAA               	goto	l2188
  5000  027A                     l2186:
  5001                           
  5002                           ;flexar_driver.c: 205:                     duty_val = (((((uint32_t)period_tmr) * 800U)/
      +                          ((uint32_t)period_val)) - 400U);
  5003  027A  0838               	movf	_period_val,w
  5004  027B  00C3               	movwf	___lldiv@divisor
  5005  027C  0839               	movf	_period_val+1,w
  5006  027D  00C4               	movwf	___lldiv@divisor+1
  5007  027E  01C5               	clrf	___lldiv@divisor+2
  5008  027F  01C6               	clrf	___lldiv@divisor+3
  5009  0280  0834               	movf	_period_tmr,w
  5010  0281  00F0               	movwf	___lmul@multiplier
  5011  0282  0835               	movf	_period_tmr+1,w
  5012  0283  00F1               	movwf	___lmul@multiplier+1
  5013  0284  01F2               	clrf	___lmul@multiplier+2
  5014  0285  01F3               	clrf	___lmul@multiplier+3
  5015  0286  3000               	movlw	0
  5016  0287  00F7               	movwf	___lmul@multiplicand+3
  5017  0288  3000               	movlw	0
  5018  0289  00F6               	movwf	___lmul@multiplicand+2
  5019  028A  3003               	movlw	3
  5020  028B  00F5               	movwf	___lmul@multiplicand+1
  5021  028C  3020               	movlw	32
  5022  028D  00F4               	movwf	___lmul@multiplicand
  5023  028E  3185  25CF  3181   	fcall	___lmul
  5024  0291  0873               	movf	?___lmul+3,w
  5025  0292  0020               	movlb	0	; select bank0
  5026  0293  00CA               	movwf	___lldiv@dividend+3
  5027  0294  0872               	movf	?___lmul+2,w
  5028  0295  00C9               	movwf	___lldiv@dividend+2
  5029  0296  0871               	movf	?___lmul+1,w
  5030  0297  00C8               	movwf	___lldiv@dividend+1
  5031  0298  0870               	movf	?___lmul,w
  5032  0299  00C7               	movwf	___lldiv@dividend
  5033  029A  3184  24A1  3181   	fcall	___lldiv
  5034  029D  3070               	movlw	112
  5035  029E  0020               	movlb	0	; select bank0
  5036  029F  0743               	addwf	?___lldiv,w
  5037  02A0  00D4               	movwf	driver_run@duty_val
  5038  02A1  30FE               	movlw	254
  5039  02A2  3D44               	addwfc	?___lldiv+1,w
  5040  02A3  00D5               	movwf	driver_run@duty_val+1
  5041  02A4  30FF               	movlw	255
  5042  02A5  3D45               	addwfc	?___lldiv+2,w
  5043  02A6  00D6               	movwf	driver_run@duty_val+2
  5044  02A7  30FF               	movlw	255
  5045  02A8  3D46               	addwfc	?___lldiv+3,w
  5046  02A9  00D7               	movwf	driver_run@duty_val+3
  5047  02AA                     l2188:
  5048                           
  5049                           ;flexar_driver.c: 208:             if(duty_val >= 800U){
  5050  02AA  0857               	movf	driver_run@duty_val+3,w
  5051  02AB  1D03               	btfss	3,2
  5052  02AC  2AB8               	goto	u900
  5053  02AD  0856               	movf	driver_run@duty_val+2,w
  5054  02AE  1D03               	btfss	3,2
  5055  02AF  2AB8               	goto	u900
  5056  02B0  3020               	movlw	32
  5057  02B1  0254               	subwf	driver_run@duty_val,w
  5058  02B2  3003               	movlw	3
  5059  02B3  3B55               	subwfb	driver_run@duty_val+1,w
  5060  02B4  1C03               	btfss	3,0
  5061  02B5  2AB7               	goto	u901
  5062  02B6  2AB8               	goto	u900
  5063  02B7                     u901:
  5064  02B7  2AC1               	goto	l2192
  5065  02B8                     u900:
  5066  02B8                     l2190:
  5067                           
  5068                           ;flexar_driver.c: 209:                 duty_val = 800U;
  5069  02B8  3000               	movlw	0
  5070  02B9  0020               	movlb	0	; select bank0
  5071  02BA  00D7               	movwf	driver_run@duty_val+3
  5072  02BB  3000               	movlw	0
  5073  02BC  00D6               	movwf	driver_run@duty_val+2
  5074  02BD  3003               	movlw	3
  5075  02BE  00D5               	movwf	driver_run@duty_val+1
  5076  02BF  3020               	movlw	32
  5077  02C0  00D4               	movwf	driver_run@duty_val
  5078  02C1                     l2192:	
  5079                           ;flexar_driver.c: 210:             }
  5080                           
  5081                           
  5082                           ;flexar_driver.c: 214:             PWM5_LoadDutyValue((uint16_t)duty_val);
  5083  02C1  0020               	movlb	0	; select bank0
  5084  02C2  0855               	movf	driver_run@duty_val+1,w
  5085  02C3  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  5086  02C4  0854               	movf	driver_run@duty_val,w
  5087  02C5  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  5088  02C6  3186  26F0  3181   	fcall	_PWM5_LoadDutyValue
  5089                           
  5090                           ;flexar_driver.c: 215:             PWM6_LoadDutyValue((uint16_t)duty_val);
  5091  02C9  0020               	movlb	0	; select bank0
  5092  02CA  0855               	movf	driver_run@duty_val+1,w
  5093  02CB  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5094  02CC  0854               	movf	driver_run@duty_val,w
  5095  02CD  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5096  02CE  3186  26DA  3181   	fcall	_PWM6_LoadDutyValue
  5097  02D1                     l2194:	
  5098                           ;flexar_driver.c: 216:         }
  5099                           
  5100                           
  5101                           ;flexar_driver.c: 220:         if(period_tmr >= period_val){
  5102  02D1  0020               	movlb	0	; select bank0
  5103  02D2  0839               	movf	_period_val+1,w
  5104  02D3  0235               	subwf	_period_tmr+1,w
  5105  02D4  1D03               	skipz
  5106  02D5  2AD8               	goto	u915
  5107  02D6  0838               	movf	_period_val,w
  5108  02D7  0234               	subwf	_period_tmr,w
  5109  02D8                     u915:
  5110  02D8  1C03               	skipc
  5111  02D9  2ADB               	goto	u911
  5112  02DA  2ADC               	goto	u910
  5113  02DB                     u911:
  5114  02DB  2B0E               	goto	l474
  5115  02DC                     u910:
  5116  02DC                     l2196:
  5117                           
  5118                           ;flexar_driver.c: 221:             period_tmr = 0U;
  5119  02DC  01B4               	clrf	_period_tmr
  5120  02DD  01B5               	clrf	_period_tmr+1
  5121  02DE                     l2198:
  5122                           
  5123                           ;flexar_driver.c: 222:             signal_toggle = !signal_toggle;
  5124  02DE  0841               	movf	_signal_toggle,w
  5125  02DF  1903               	btfsc	3,2
  5126  02E0  2AE2               	goto	u921
  5127  02E1  2AE4               	goto	u920
  5128  02E2                     u921:
  5129  02E2  3001               	movlw	1
  5130  02E3  2AE5               	goto	u930
  5131  02E4                     u920:
  5132  02E4  3000               	movlw	0
  5133  02E5                     u930:
  5134  02E5  00D0               	movwf	??_driver_run
  5135  02E6  0850               	movf	??_driver_run,w
  5136  02E7  00C1               	movwf	_signal_toggle
  5137  02E8                     l2200:
  5138                           
  5139                           ;flexar_driver.c: 223:             if(driver_mode == 1U){
  5140  02E8  035C               	decf	_driver_mode,w
  5141  02E9  1D03               	btfss	3,2
  5142  02EA  2AEC               	goto	u941
  5143  02EB  2AED               	goto	u940
  5144  02EC                     u941:
  5145  02EC  2B0E               	goto	l472
  5146  02ED                     u940:
  5147  02ED                     l2202:
  5148                           
  5149                           ;flexar_driver.c: 225:                 if(signal_toggle){
  5150  02ED  0841               	movf	_signal_toggle,w
  5151  02EE  1903               	btfsc	3,2
  5152  02EF  2AF1               	goto	u951
  5153  02F0  2AF2               	goto	u950
  5154  02F1                     u951:
  5155  02F1  2B01               	goto	l2206
  5156  02F2                     u950:
  5157  02F2                     l2204:
  5158                           
  5159                           ;flexar_driver.c: 226:                     PWM5_LoadDutyValue(800U);
  5160  02F2  3020               	movlw	32
  5161  02F3  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  5162  02F4  3003               	movlw	3
  5163  02F5  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  5164  02F6  3186  26F0  3181   	fcall	_PWM5_LoadDutyValue
  5165                           
  5166                           ;flexar_driver.c: 227:                     PWM6_LoadDutyValue(800U);
  5167  02F9  3020               	movlw	32
  5168  02FA  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5169  02FB  3003               	movlw	3
  5170  02FC  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5171  02FD  3186  26DA  3181   	fcall	_PWM6_LoadDutyValue
  5172                           
  5173                           ;flexar_driver.c: 228:                 }
  5174  0300  2B0E               	goto	l474
  5175  0301                     l2206:
  5176                           
  5177                           ;flexar_driver.c: 230:                     PWM5_LoadDutyValue(0U);
  5178  0301  3000               	movlw	0
  5179  0302  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  5180  0303  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  5181  0304  3186  26F0  3181   	fcall	_PWM5_LoadDutyValue
  5182                           
  5183                           ;flexar_driver.c: 231:                     PWM6_LoadDutyValue(0U);
  5184  0307  3000               	movlw	0
  5185  0308  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5186  0309  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5187  030A  3186  26DA  3181   	fcall	_PWM6_LoadDutyValue
  5188  030D  2B0E               	goto	l474
  5189  030E                     l472:	
  5190                           ;flexar_driver.c: 240:         }
  5191                           
  5192  030E                     l474:	
  5193                           ;flexar_driver.c: 241:     }
  5194                           
  5195  030E  0008               	return
  5196  030F                     __end_of_driver_run:
  5197                           
  5198                           	psect	text6
  5199  05CF                     __ptext6:	
  5200 ;; *************** function ___lmul *****************
  5201 ;; Defined at:
  5202 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  multiplier      4    0[COMMON] unsigned long 
  5205 ;;  multiplicand    4    4[COMMON] unsigned long 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  product         4    8[COMMON] unsigned long 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  4    0[COMMON] unsigned long 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5217 ;;      Params:         8       0       0       0
  5218 ;;      Locals:         4       0       0       0
  5219 ;;      Temps:          0       0       0       0
  5220 ;;      Totals:        12       0       0       0
  5221 ;;Total ram usage:       12 bytes
  5222 ;; Hardware stack levels used: 1
  5223 ;; Hardware stack levels required when called: 3
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_driver_run
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           
  5232                           ;psect for function ___lmul
  5233  05CF                     ___lmul:
  5234  05CF                     l2056:	
  5235                           ;incstack = 0
  5236                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5237                           
  5238  05CF  3000               	movlw	0
  5239  05D0  00FB               	movwf	___lmul@product+3
  5240  05D1  3000               	movlw	0
  5241  05D2  00FA               	movwf	___lmul@product+2
  5242  05D3  3000               	movlw	0
  5243  05D4  00F9               	movwf	___lmul@product+1
  5244  05D5  3000               	movlw	0
  5245  05D6  00F8               	movwf	___lmul@product
  5246  05D7                     l2058:
  5247  05D7  1C70               	btfss	___lmul@multiplier,0
  5248  05D8  2DDA               	goto	u701
  5249  05D9  2DDB               	goto	u700
  5250  05DA                     u701:
  5251  05DA  2DE3               	goto	l2062
  5252  05DB                     u700:
  5253  05DB                     l2060:
  5254  05DB  0874               	movf	___lmul@multiplicand,w
  5255  05DC  07F8               	addwf	___lmul@product,f
  5256  05DD  0875               	movf	___lmul@multiplicand+1,w
  5257  05DE  3DF9               	addwfc	___lmul@product+1,f
  5258  05DF  0876               	movf	___lmul@multiplicand+2,w
  5259  05E0  3DFA               	addwfc	___lmul@product+2,f
  5260  05E1  0877               	movf	___lmul@multiplicand+3,w
  5261  05E2  3DFB               	addwfc	___lmul@product+3,f
  5262  05E3                     l2062:
  5263  05E3  3001               	movlw	1
  5264  05E4                     u715:
  5265  05E4  35F4               	lslf	___lmul@multiplicand,f
  5266  05E5  0DF5               	rlf	___lmul@multiplicand+1,f
  5267  05E6  0DF6               	rlf	___lmul@multiplicand+2,f
  5268  05E7  0DF7               	rlf	___lmul@multiplicand+3,f
  5269  05E8  0B89               	decfsz	9,f
  5270  05E9  2DE4               	goto	u715
  5271  05EA                     l2064:
  5272  05EA  3001               	movlw	1
  5273  05EB                     u725:
  5274  05EB  36F3               	lsrf	___lmul@multiplier+3,f
  5275  05EC  0CF2               	rrf	___lmul@multiplier+2,f
  5276  05ED  0CF1               	rrf	___lmul@multiplier+1,f
  5277  05EE  0CF0               	rrf	___lmul@multiplier,f
  5278  05EF  0B89               	decfsz	9,f
  5279  05F0  2DEB               	goto	u725
  5280  05F1  0873               	movf	___lmul@multiplier+3,w
  5281  05F2  0472               	iorwf	___lmul@multiplier+2,w
  5282  05F3  0471               	iorwf	___lmul@multiplier+1,w
  5283  05F4  0470               	iorwf	___lmul@multiplier,w
  5284  05F5  1D03               	skipz
  5285  05F6  2DF8               	goto	u731
  5286  05F7  2DF9               	goto	u730
  5287  05F8                     u731:
  5288  05F8  2DD7               	goto	l2058
  5289  05F9                     u730:
  5290  05F9                     l2066:
  5291  05F9  087B               	movf	___lmul@product+3,w
  5292  05FA  00F3               	movwf	?___lmul+3
  5293  05FB  087A               	movf	___lmul@product+2,w
  5294  05FC  00F2               	movwf	?___lmul+2
  5295  05FD  0879               	movf	___lmul@product+1,w
  5296  05FE  00F1               	movwf	?___lmul+1
  5297  05FF  0878               	movf	___lmul@product,w
  5298  0600  00F0               	movwf	?___lmul
  5299  0601                     l664:
  5300  0601  0008               	return
  5301  0602                     __end_of___lmul:
  5302                           
  5303                           	psect	text7
  5304  04A1                     __ptext7:	
  5305 ;; *************** function ___lldiv *****************
  5306 ;; Defined at:
  5307 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  divisor         4    0[BANK0 ] unsigned long 
  5310 ;;  dividend        4    4[BANK0 ] unsigned long 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  quotient        4    8[BANK0 ] unsigned long 
  5313 ;;  counter         1   12[BANK0 ] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  4    0[BANK0 ] unsigned long 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5323 ;;      Params:         0       8       0       0
  5324 ;;      Locals:         0       5       0       0
  5325 ;;      Temps:          1       0       0       0
  5326 ;;      Totals:         1      13       0       0
  5327 ;;Total ram usage:       14 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 3
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_driver_run
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function ___lldiv
  5339  04A1                     ___lldiv:
  5340  04A1                     l2070:	
  5341                           ;incstack = 0
  5342                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5343                           
  5344  04A1  3000               	movlw	0
  5345  04A2  0020               	movlb	0	; select bank0
  5346  04A3  00CE               	movwf	___lldiv@quotient+3
  5347  04A4  3000               	movlw	0
  5348  04A5  00CD               	movwf	___lldiv@quotient+2
  5349  04A6  3000               	movlw	0
  5350  04A7  00CC               	movwf	___lldiv@quotient+1
  5351  04A8  3000               	movlw	0
  5352  04A9  00CB               	movwf	___lldiv@quotient
  5353  04AA  0846               	movf	___lldiv@divisor+3,w
  5354  04AB  0445               	iorwf	___lldiv@divisor+2,w
  5355  04AC  0444               	iorwf	___lldiv@divisor+1,w
  5356  04AD  0443               	iorwf	___lldiv@divisor,w
  5357  04AE  1903               	skipnz
  5358  04AF  2CB1               	goto	u741
  5359  04B0  2CB2               	goto	u740
  5360  04B1                     u741:
  5361  04B1  2CF3               	goto	l2090
  5362  04B2                     u740:
  5363  04B2                     l2072:
  5364  04B2  01CF               	clrf	___lldiv@counter
  5365  04B3  0ACF               	incf	___lldiv@counter,f
  5366  04B4  2CC0               	goto	l2076
  5367  04B5                     l2074:
  5368  04B5  3001               	movlw	1
  5369  04B6                     u755:
  5370  04B6  35C3               	lslf	___lldiv@divisor,f
  5371  04B7  0DC4               	rlf	___lldiv@divisor+1,f
  5372  04B8  0DC5               	rlf	___lldiv@divisor+2,f
  5373  04B9  0DC6               	rlf	___lldiv@divisor+3,f
  5374  04BA  0B89               	decfsz	9,f
  5375  04BB  2CB6               	goto	u755
  5376  04BC  3001               	movlw	1
  5377  04BD  00FC               	movwf	??___lldiv
  5378  04BE  087C               	movf	??___lldiv,w
  5379  04BF  07CF               	addwf	___lldiv@counter,f
  5380  04C0                     l2076:
  5381  04C0  1FC6               	btfss	___lldiv@divisor+3,7
  5382  04C1  2CC3               	goto	u761
  5383  04C2  2CC4               	goto	u760
  5384  04C3                     u761:
  5385  04C3  2CB5               	goto	l2074
  5386  04C4                     u760:
  5387  04C4                     l2078:
  5388  04C4  3001               	movlw	1
  5389  04C5                     u775:
  5390  04C5  35CB               	lslf	___lldiv@quotient,f
  5391  04C6  0DCC               	rlf	___lldiv@quotient+1,f
  5392  04C7  0DCD               	rlf	___lldiv@quotient+2,f
  5393  04C8  0DCE               	rlf	___lldiv@quotient+3,f
  5394  04C9  0B89               	decfsz	9,f
  5395  04CA  2CC5               	goto	u775
  5396  04CB                     l2080:
  5397  04CB  0846               	movf	___lldiv@divisor+3,w
  5398  04CC  024A               	subwf	___lldiv@dividend+3,w
  5399  04CD  1D03               	skipz
  5400  04CE  2CD9               	goto	u785
  5401  04CF  0845               	movf	___lldiv@divisor+2,w
  5402  04D0  0249               	subwf	___lldiv@dividend+2,w
  5403  04D1  1D03               	skipz
  5404  04D2  2CD9               	goto	u785
  5405  04D3  0844               	movf	___lldiv@divisor+1,w
  5406  04D4  0248               	subwf	___lldiv@dividend+1,w
  5407  04D5  1D03               	skipz
  5408  04D6  2CD9               	goto	u785
  5409  04D7  0843               	movf	___lldiv@divisor,w
  5410  04D8  0247               	subwf	___lldiv@dividend,w
  5411  04D9                     u785:
  5412  04D9  1C03               	skipc
  5413  04DA  2CDC               	goto	u781
  5414  04DB  2CDD               	goto	u780
  5415  04DC                     u781:
  5416  04DC  2CE6               	goto	l2086
  5417  04DD                     u780:
  5418  04DD                     l2082:
  5419  04DD  0843               	movf	___lldiv@divisor,w
  5420  04DE  02C7               	subwf	___lldiv@dividend,f
  5421  04DF  0844               	movf	___lldiv@divisor+1,w
  5422  04E0  3BC8               	subwfb	___lldiv@dividend+1,f
  5423  04E1  0845               	movf	___lldiv@divisor+2,w
  5424  04E2  3BC9               	subwfb	___lldiv@dividend+2,f
  5425  04E3  0846               	movf	___lldiv@divisor+3,w
  5426  04E4  3BCA               	subwfb	___lldiv@dividend+3,f
  5427  04E5                     l2084:
  5428  04E5  144B               	bsf	___lldiv@quotient,0
  5429  04E6                     l2086:
  5430  04E6  3001               	movlw	1
  5431  04E7                     u795:
  5432  04E7  36C6               	lsrf	___lldiv@divisor+3,f
  5433  04E8  0CC5               	rrf	___lldiv@divisor+2,f
  5434  04E9  0CC4               	rrf	___lldiv@divisor+1,f
  5435  04EA  0CC3               	rrf	___lldiv@divisor,f
  5436  04EB  0B89               	decfsz	9,f
  5437  04EC  2CE7               	goto	u795
  5438  04ED                     l2088:
  5439  04ED  3001               	movlw	1
  5440  04EE  02CF               	subwf	___lldiv@counter,f
  5441  04EF  1D03               	btfss	3,2
  5442  04F0  2CF2               	goto	u801
  5443  04F1  2CF3               	goto	u800
  5444  04F2                     u801:
  5445  04F2  2CC4               	goto	l2078
  5446  04F3                     u800:
  5447  04F3                     l2090:
  5448  04F3  084E               	movf	___lldiv@quotient+3,w
  5449  04F4  00C6               	movwf	?___lldiv+3
  5450  04F5  084D               	movf	___lldiv@quotient+2,w
  5451  04F6  00C5               	movwf	?___lldiv+2
  5452  04F7  084C               	movf	___lldiv@quotient+1,w
  5453  04F8  00C4               	movwf	?___lldiv+1
  5454  04F9  084B               	movf	___lldiv@quotient,w
  5455  04FA  00C3               	movwf	?___lldiv
  5456  04FB                     l686:
  5457  04FB  0008               	return
  5458  04FC                     __end_of___lldiv:
  5459                           
  5460                           	psect	text8
  5461  0034                     __ptext8:	
  5462 ;; *************** function _driver_init *****************
  5463 ;; Defined at:
  5464 ;;		line 247 in file "flexar_driver.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;		None
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  i               1   11[COMMON] unsigned char 
  5469 ;;  adc_initval     2    9[COMMON] unsigned short 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5479 ;;      Params:         0       0       0       0
  5480 ;;      Locals:         3       0       0       0
  5481 ;;      Temps:          2       0       0       0
  5482 ;;      Totals:         5       0       0       0
  5483 ;;Total ram usage:        5 bytes
  5484 ;; Hardware stack levels used: 1
  5485 ;; Hardware stack levels required when called: 6
  5486 ;; This function calls:
  5487 ;;		_ADC_GetConversion
  5488 ;;		_DATAEE_ReadByte
  5489 ;;		_PWM5_LoadDutyValue
  5490 ;;		_PWM6_LoadDutyValue
  5491 ;;		_buzzer_pwm_config
  5492 ;;		_driver_handler
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _driver_init
  5500  0034                     _driver_init:
  5501  0034                     l2118:	
  5502                           ;incstack = 0
  5503                           ; Regs used in _driver_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5504                           
  5505                           
  5506                           ;flexar_driver.c: 248:      _delay((unsigned long)((500)*(32000000/4000.0)));
  5507  0034  3015               	movlw	21
  5508  0035  00F8               	movwf	??_driver_init+1
  5509  0036  304B               	movlw	75
  5510  0037  00F7               	movwf	??_driver_init
  5511  0038  30BE               	movlw	190
  5512  0039                     u1047:
  5513  0039  0B89               	decfsz	9,f
  5514  003A  2839               	goto	u1047
  5515  003B  0BF7               	decfsz	??_driver_init,f
  5516  003C  2839               	goto	u1047
  5517  003D  0BF8               	decfsz	??_driver_init+1,f
  5518  003E  2839               	goto	u1047
  5519  003F  3200               	nop2
  5520  0040                     l2120:
  5521                           
  5522                           ;flexar_driver.c: 250:     driver_mode = DATAEE_ReadByte(0x7000U);
  5523  0040  3000               	movlw	0
  5524  0041  00F0               	movwf	DATAEE_ReadByte@bAdd
  5525  0042  3070               	movlw	112
  5526  0043  00F1               	movwf	DATAEE_ReadByte@bAdd+1
  5527  0044  3187  2735  3180   	fcall	_DATAEE_ReadByte
  5528  0047  00F7               	movwf	??_driver_init
  5529  0048  0877               	movf	??_driver_init,w
  5530  0049  0020               	movlb	0	; select bank0
  5531  004A  00DC               	movwf	_driver_mode
  5532  004B                     l2122:
  5533                           
  5534                           ;flexar_driver.c: 251:     if((driver_mode == 0U)||(driver_mode >= 7U)){
  5535  004B  085C               	movf	_driver_mode,w
  5536  004C  1903               	btfsc	3,2
  5537  004D  284F               	goto	u821
  5538  004E  2850               	goto	u820
  5539  004F                     u821:
  5540  004F  2856               	goto	l479
  5541  0050                     u820:
  5542  0050                     l2124:
  5543  0050  3007               	movlw	7
  5544  0051  025C               	subwf	_driver_mode,w
  5545  0052  1C03               	skipc
  5546  0053  2855               	goto	u831
  5547  0054  2856               	goto	u830
  5548  0055                     u831:
  5549  0055  2858               	goto	l2126
  5550  0056                     u830:
  5551  0056                     l479:
  5552                           
  5553                           ;flexar_driver.c: 252:         driver_mode = 1U;
  5554  0056  01DC               	clrf	_driver_mode
  5555  0057  0ADC               	incf	_driver_mode,f
  5556  0058                     l2126:
  5557                           
  5558                           ;flexar_driver.c: 254:     eepdriver_mode = driver_mode;
  5559  0058  085C               	movf	_driver_mode,w
  5560  0059  00F7               	movwf	??_driver_init
  5561  005A  0877               	movf	??_driver_init,w
  5562  005B  00FD               	movwf	_eepdriver_mode
  5563  005C                     l2128:
  5564                           
  5565                           ;flexar_driver.c: 255:     buzzer_pwm_config();
  5566  005C  3186  2669  3180   	fcall	_buzzer_pwm_config
  5567  005F                     l2130:
  5568                           
  5569                           ;flexar_driver.c: 257:     uint16_t adc_initval = ADC_GetConversion(channel_ANA4);
  5570  005F  3004               	movlw	4
  5571  0060  3186  26BF  3180   	fcall	_ADC_GetConversion
  5572  0063  0871               	movf	?_ADC_GetConversion+1,w
  5573  0064  00FA               	movwf	driver_init@adc_initval+1
  5574  0065  0870               	movf	?_ADC_GetConversion,w
  5575  0066  00F9               	movwf	driver_init@adc_initval
  5576  0067                     l2132:
  5577                           
  5578                           ;flexar_driver.c: 258:     for (uint8_t i = 0; i <= 7U; i++){
  5579  0067  01FB               	clrf	driver_init@i
  5580  0068                     l2138:
  5581                           
  5582                           ;flexar_driver.c: 259:         adc_avgval[adc_avgcounter] = adc_initval;
  5583  0068  0020               	movlb	0	; select bank0
  5584  0069  353F               	lslf	_adc_avgcounter,w
  5585  006A  3E20               	addlw	(low (_adc_avgval| 0))& (0+255)
  5586  006B  0086               	movwf	6
  5587  006C  0187               	clrf	7
  5588  006D  0879               	movf	driver_init@adc_initval,w
  5589  006E  3FC0               	movwi [0]fsr1
  5590  006F  087A               	movf	driver_init@adc_initval+1,w
  5591  0070  3FC1               	movwi [1]fsr1
  5592  0071                     l2140:
  5593                           
  5594                           ;flexar_driver.c: 260:     }
  5595  0071  3001               	movlw	1
  5596  0072  00F7               	movwf	??_driver_init
  5597  0073  0877               	movf	??_driver_init,w
  5598  0074  07FB               	addwf	driver_init@i,f
  5599  0075                     l2142:
  5600  0075  3008               	movlw	8
  5601  0076  027B               	subwf	driver_init@i,w
  5602  0077  1C03               	skipc
  5603  0078  287A               	goto	u841
  5604  0079  287B               	goto	u840
  5605  007A                     u841:
  5606  007A  2868               	goto	l2138
  5607  007B                     u840:
  5608  007B                     l2144:
  5609                           
  5610                           ;flexar_driver.c: 263:     LATC = 0x2U;
  5611  007B  3002               	movlw	2
  5612  007C  0022               	movlb	2	; select bank2
  5613  007D  008E               	movwf	14	;volatile
  5614                           
  5615                           ;flexar_driver.c: 264:     _delay((unsigned long)((30)*(32000000/4000.0)));
  5616  007E  3002               	movlw	2
  5617  007F  00F8               	movwf	??_driver_init+1
  5618  0080  3038               	movlw	56
  5619  0081  00F7               	movwf	??_driver_init
  5620  0082  30AD               	movlw	173
  5621  0083                     u1057:
  5622  0083  0B89               	decfsz	9,f
  5623  0084  2883               	goto	u1057
  5624  0085  0BF7               	decfsz	??_driver_init,f
  5625  0086  2883               	goto	u1057
  5626  0087  0BF8               	decfsz	??_driver_init+1,f
  5627  0088  2883               	goto	u1057
  5628  0089  0000               	nop
  5629                           
  5630                           ;flexar_driver.c: 265:     LATC = 0x4U;
  5631  008A  3004               	movlw	4
  5632  008B  0022               	movlb	2	; select bank2
  5633  008C  008E               	movwf	14	;volatile
  5634                           
  5635                           ;flexar_driver.c: 266:      _delay((unsigned long)((30)*(32000000/4000.0)));
  5636  008D  3002               	movlw	2
  5637  008E  00F8               	movwf	??_driver_init+1
  5638  008F  3038               	movlw	56
  5639  0090  00F7               	movwf	??_driver_init
  5640  0091  30AD               	movlw	173
  5641  0092                     u1067:
  5642  0092  0B89               	decfsz	9,f
  5643  0093  2892               	goto	u1067
  5644  0094  0BF7               	decfsz	??_driver_init,f
  5645  0095  2892               	goto	u1067
  5646  0096  0BF8               	decfsz	??_driver_init+1,f
  5647  0097  2892               	goto	u1067
  5648  0098  0000               	nop
  5649                           
  5650                           ;flexar_driver.c: 267:     LATC = 0x8U;
  5651  0099  3008               	movlw	8
  5652  009A  0022               	movlb	2	; select bank2
  5653  009B  008E               	movwf	14	;volatile
  5654                           
  5655                           ;flexar_driver.c: 268:      _delay((unsigned long)((30)*(32000000/4000.0)));
  5656  009C  3002               	movlw	2
  5657  009D  00F8               	movwf	??_driver_init+1
  5658  009E  3038               	movlw	56
  5659  009F  00F7               	movwf	??_driver_init
  5660  00A0  30AD               	movlw	173
  5661  00A1                     u1077:
  5662  00A1  0B89               	decfsz	9,f
  5663  00A2  28A1               	goto	u1077
  5664  00A3  0BF7               	decfsz	??_driver_init,f
  5665  00A4  28A1               	goto	u1077
  5666  00A5  0BF8               	decfsz	??_driver_init+1,f
  5667  00A6  28A1               	goto	u1077
  5668  00A7  0000               	nop
  5669                           
  5670                           ;flexar_driver.c: 269:     LATC = 0x10U;
  5671  00A8  3010               	movlw	16
  5672  00A9  0022               	movlb	2	; select bank2
  5673  00AA  008E               	movwf	14	;volatile
  5674                           
  5675                           ;flexar_driver.c: 270:      _delay((unsigned long)((30)*(32000000/4000.0)));
  5676  00AB  3002               	movlw	2
  5677  00AC  00F8               	movwf	??_driver_init+1
  5678  00AD  3038               	movlw	56
  5679  00AE  00F7               	movwf	??_driver_init
  5680  00AF  30AD               	movlw	173
  5681  00B0                     u1087:
  5682  00B0  0B89               	decfsz	9,f
  5683  00B1  28B0               	goto	u1087
  5684  00B2  0BF7               	decfsz	??_driver_init,f
  5685  00B3  28B0               	goto	u1087
  5686  00B4  0BF8               	decfsz	??_driver_init+1,f
  5687  00B5  28B0               	goto	u1087
  5688  00B6  0000               	nop
  5689                           
  5690                           ;flexar_driver.c: 271:     LATC = 0x20U;
  5691  00B7  3020               	movlw	32
  5692  00B8  0022               	movlb	2	; select bank2
  5693  00B9  008E               	movwf	14	;volatile
  5694                           
  5695                           ;flexar_driver.c: 272:      _delay((unsigned long)((30)*(32000000/4000.0)));
  5696  00BA  3002               	movlw	2
  5697  00BB  00F8               	movwf	??_driver_init+1
  5698  00BC  3038               	movlw	56
  5699  00BD  00F7               	movwf	??_driver_init
  5700  00BE  30AD               	movlw	173
  5701  00BF                     u1097:
  5702  00BF  0B89               	decfsz	9,f
  5703  00C0  28BF               	goto	u1097
  5704  00C1  0BF7               	decfsz	??_driver_init,f
  5705  00C2  28BF               	goto	u1097
  5706  00C3  0BF8               	decfsz	??_driver_init+1,f
  5707  00C4  28BF               	goto	u1097
  5708  00C5  0000               	nop
  5709  00C6                     l2146:
  5710                           
  5711                           ;flexar_driver.c: 274:     PWM5_LoadDutyValue(125U);
  5712  00C6  307D               	movlw	125
  5713  00C7  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  5714  00C8  3000               	movlw	0
  5715  00C9  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  5716  00CA  3186  26F0  3180   	fcall	_PWM5_LoadDutyValue
  5717  00CD                     l2148:
  5718                           
  5719                           ;flexar_driver.c: 275:     PWM6_LoadDutyValue(125U);
  5720  00CD  307D               	movlw	125
  5721  00CE  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5722  00CF  3000               	movlw	0
  5723  00D0  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5724  00D1  3186  26DA  3180   	fcall	_PWM6_LoadDutyValue
  5725                           
  5726                           ;flexar_driver.c: 278:     switch(driver_mode){
  5727  00D4  297F               	goto	l2162
  5728  00D5                     l2150:
  5729                           
  5730                           ;flexar_driver.c: 281:             LATC = 0x20U;
  5731  00D5  3020               	movlw	32
  5732  00D6  0022               	movlb	2	; select bank2
  5733  00D7  008E               	movwf	14	;volatile
  5734                           
  5735                           ;flexar_driver.c: 282:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5736  00D8  3002               	movlw	2
  5737  00D9  00F8               	movwf	??_driver_init+1
  5738  00DA  3038               	movlw	56
  5739  00DB  00F7               	movwf	??_driver_init
  5740  00DC  30AD               	movlw	173
  5741  00DD                     u1107:
  5742  00DD  0B89               	decfsz	9,f
  5743  00DE  28DD               	goto	u1107
  5744  00DF  0BF7               	decfsz	??_driver_init,f
  5745  00E0  28DD               	goto	u1107
  5746  00E1  0BF8               	decfsz	??_driver_init+1,f
  5747  00E2  28DD               	goto	u1107
  5748  00E3  0000               	nop
  5749                           
  5750                           ;flexar_driver.c: 283:             LATC = 0x10U;
  5751  00E4  3010               	movlw	16
  5752  00E5  0022               	movlb	2	; select bank2
  5753  00E6  008E               	movwf	14	;volatile
  5754                           
  5755                           ;flexar_driver.c: 284:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5756  00E7  3002               	movlw	2
  5757  00E8  00F8               	movwf	??_driver_init+1
  5758  00E9  3038               	movlw	56
  5759  00EA  00F7               	movwf	??_driver_init
  5760  00EB  30AD               	movlw	173
  5761  00EC                     u1117:
  5762  00EC  0B89               	decfsz	9,f
  5763  00ED  28EC               	goto	u1117
  5764  00EE  0BF7               	decfsz	??_driver_init,f
  5765  00EF  28EC               	goto	u1117
  5766  00F0  0BF8               	decfsz	??_driver_init+1,f
  5767  00F1  28EC               	goto	u1117
  5768  00F2  0000               	nop
  5769                           
  5770                           ;flexar_driver.c: 285:             LATC = 0x8U;
  5771  00F3  3008               	movlw	8
  5772  00F4  0022               	movlb	2	; select bank2
  5773  00F5  008E               	movwf	14	;volatile
  5774                           
  5775                           ;flexar_driver.c: 286:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5776  00F6  3002               	movlw	2
  5777  00F7  00F8               	movwf	??_driver_init+1
  5778  00F8  3038               	movlw	56
  5779  00F9  00F7               	movwf	??_driver_init
  5780  00FA  30AD               	movlw	173
  5781  00FB                     u1127:
  5782  00FB  0B89               	decfsz	9,f
  5783  00FC  28FB               	goto	u1127
  5784  00FD  0BF7               	decfsz	??_driver_init,f
  5785  00FE  28FB               	goto	u1127
  5786  00FF  0BF8               	decfsz	??_driver_init+1,f
  5787  0100  28FB               	goto	u1127
  5788  0101  0000               	nop
  5789                           
  5790                           ;flexar_driver.c: 287:             LATC = 0x4U;
  5791  0102  3004               	movlw	4
  5792  0103  0022               	movlb	2	; select bank2
  5793  0104  008E               	movwf	14	;volatile
  5794                           
  5795                           ;flexar_driver.c: 288:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5796  0105  3002               	movlw	2
  5797  0106  00F8               	movwf	??_driver_init+1
  5798  0107  3038               	movlw	56
  5799  0108  00F7               	movwf	??_driver_init
  5800  0109  30AD               	movlw	173
  5801  010A                     u1137:
  5802  010A  0B89               	decfsz	9,f
  5803  010B  290A               	goto	u1137
  5804  010C  0BF7               	decfsz	??_driver_init,f
  5805  010D  290A               	goto	u1137
  5806  010E  0BF8               	decfsz	??_driver_init+1,f
  5807  010F  290A               	goto	u1137
  5808  0110  0000               	nop
  5809                           
  5810                           ;flexar_driver.c: 289:             LATC = 0x2U;
  5811  0111  3002               	movlw	2
  5812  0112  0022               	movlb	2	; select bank2
  5813  0113  008E               	movwf	14	;volatile
  5814                           
  5815                           ;flexar_driver.c: 290:             break;
  5816  0114  299F               	goto	l2164
  5817  0115                     l2152:
  5818                           
  5819                           ;flexar_driver.c: 292:             LATC = 0x20U;
  5820  0115  3020               	movlw	32
  5821  0116  0022               	movlb	2	; select bank2
  5822  0117  008E               	movwf	14	;volatile
  5823                           
  5824                           ;flexar_driver.c: 293:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5825  0118  3002               	movlw	2
  5826  0119  00F8               	movwf	??_driver_init+1
  5827  011A  3038               	movlw	56
  5828  011B  00F7               	movwf	??_driver_init
  5829  011C  30AD               	movlw	173
  5830  011D                     u1147:
  5831  011D  0B89               	decfsz	9,f
  5832  011E  291D               	goto	u1147
  5833  011F  0BF7               	decfsz	??_driver_init,f
  5834  0120  291D               	goto	u1147
  5835  0121  0BF8               	decfsz	??_driver_init+1,f
  5836  0122  291D               	goto	u1147
  5837  0123  0000               	nop
  5838                           
  5839                           ;flexar_driver.c: 294:             LATC = 0x10U;
  5840  0124  3010               	movlw	16
  5841  0125  0022               	movlb	2	; select bank2
  5842  0126  008E               	movwf	14	;volatile
  5843                           
  5844                           ;flexar_driver.c: 295:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5845  0127  3002               	movlw	2
  5846  0128  00F8               	movwf	??_driver_init+1
  5847  0129  3038               	movlw	56
  5848  012A  00F7               	movwf	??_driver_init
  5849  012B  30AD               	movlw	173
  5850  012C                     u1157:
  5851  012C  0B89               	decfsz	9,f
  5852  012D  292C               	goto	u1157
  5853  012E  0BF7               	decfsz	??_driver_init,f
  5854  012F  292C               	goto	u1157
  5855  0130  0BF8               	decfsz	??_driver_init+1,f
  5856  0131  292C               	goto	u1157
  5857  0132  0000               	nop
  5858                           
  5859                           ;flexar_driver.c: 296:             LATC = 0x8U;
  5860  0133  3008               	movlw	8
  5861  0134  0022               	movlb	2	; select bank2
  5862  0135  008E               	movwf	14	;volatile
  5863                           
  5864                           ;flexar_driver.c: 297:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5865  0136  3002               	movlw	2
  5866  0137  00F8               	movwf	??_driver_init+1
  5867  0138  3038               	movlw	56
  5868  0139  00F7               	movwf	??_driver_init
  5869  013A  30AD               	movlw	173
  5870  013B                     u1167:
  5871  013B  0B89               	decfsz	9,f
  5872  013C  293B               	goto	u1167
  5873  013D  0BF7               	decfsz	??_driver_init,f
  5874  013E  293B               	goto	u1167
  5875  013F  0BF8               	decfsz	??_driver_init+1,f
  5876  0140  293B               	goto	u1167
  5877  0141  0000               	nop
  5878                           
  5879                           ;flexar_driver.c: 298:             LATC = 0x4U;
  5880  0142  3004               	movlw	4
  5881  0143  0022               	movlb	2	; select bank2
  5882  0144  008E               	movwf	14	;volatile
  5883                           
  5884                           ;flexar_driver.c: 299:             break;
  5885  0145  299F               	goto	l2164
  5886  0146                     l2154:
  5887                           
  5888                           ;flexar_driver.c: 302:             LATC = 0x20U;
  5889  0146  3020               	movlw	32
  5890  0147  0022               	movlb	2	; select bank2
  5891  0148  008E               	movwf	14	;volatile
  5892                           
  5893                           ;flexar_driver.c: 303:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5894  0149  3002               	movlw	2
  5895  014A  00F8               	movwf	??_driver_init+1
  5896  014B  3038               	movlw	56
  5897  014C  00F7               	movwf	??_driver_init
  5898  014D  30AD               	movlw	173
  5899  014E                     u1177:
  5900  014E  0B89               	decfsz	9,f
  5901  014F  294E               	goto	u1177
  5902  0150  0BF7               	decfsz	??_driver_init,f
  5903  0151  294E               	goto	u1177
  5904  0152  0BF8               	decfsz	??_driver_init+1,f
  5905  0153  294E               	goto	u1177
  5906  0154  0000               	nop
  5907                           
  5908                           ;flexar_driver.c: 304:             LATC = 0x10U;
  5909  0155  3010               	movlw	16
  5910  0156  0022               	movlb	2	; select bank2
  5911  0157  008E               	movwf	14	;volatile
  5912                           
  5913                           ;flexar_driver.c: 305:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5914  0158  3002               	movlw	2
  5915  0159  00F8               	movwf	??_driver_init+1
  5916  015A  3038               	movlw	56
  5917  015B  00F7               	movwf	??_driver_init
  5918  015C  30AD               	movlw	173
  5919  015D                     u1187:
  5920  015D  0B89               	decfsz	9,f
  5921  015E  295D               	goto	u1187
  5922  015F  0BF7               	decfsz	??_driver_init,f
  5923  0160  295D               	goto	u1187
  5924  0161  0BF8               	decfsz	??_driver_init+1,f
  5925  0162  295D               	goto	u1187
  5926  0163  0000               	nop
  5927                           
  5928                           ;flexar_driver.c: 306:             LATC = 0x8U;
  5929  0164  3008               	movlw	8
  5930  0165  0022               	movlb	2	; select bank2
  5931  0166  008E               	movwf	14	;volatile
  5932                           
  5933                           ;flexar_driver.c: 307:             break;
  5934  0167  299F               	goto	l2164
  5935  0168                     l2156:
  5936                           
  5937                           ;flexar_driver.c: 310:             LATC = 0x20U;
  5938  0168  3020               	movlw	32
  5939  0169  0022               	movlb	2	; select bank2
  5940  016A  008E               	movwf	14	;volatile
  5941                           
  5942                           ;flexar_driver.c: 311:              _delay((unsigned long)((30)*(32000000/4000.0)));
  5943  016B  3002               	movlw	2
  5944  016C  00F8               	movwf	??_driver_init+1
  5945  016D  3038               	movlw	56
  5946  016E  00F7               	movwf	??_driver_init
  5947  016F  30AD               	movlw	173
  5948  0170                     u1197:
  5949  0170  0B89               	decfsz	9,f
  5950  0171  2970               	goto	u1197
  5951  0172  0BF7               	decfsz	??_driver_init,f
  5952  0173  2970               	goto	u1197
  5953  0174  0BF8               	decfsz	??_driver_init+1,f
  5954  0175  2970               	goto	u1197
  5955  0176  0000               	nop
  5956                           
  5957                           ;flexar_driver.c: 312:             LATC = 0x10U;
  5958  0177  3010               	movlw	16
  5959  0178  0022               	movlb	2	; select bank2
  5960  0179  008E               	movwf	14	;volatile
  5961                           
  5962                           ;flexar_driver.c: 313:             break;
  5963  017A  299F               	goto	l2164
  5964  017B                     l2158:
  5965                           
  5966                           ;flexar_driver.c: 315:             LATC = 0x20U;
  5967  017B  3020               	movlw	32
  5968  017C  0022               	movlb	2	; select bank2
  5969  017D  008E               	movwf	14	;volatile
  5970                           
  5971                           ;flexar_driver.c: 316:            break;
  5972  017E  299F               	goto	l2164
  5973  017F                     l2162:
  5974  017F  0020               	movlb	0	; select bank0
  5975  0180  085C               	movf	_driver_mode,w
  5976  0181  00F7               	movwf	??_driver_init
  5977  0182  01F8               	clrf	??_driver_init+1
  5978                           
  5979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5980                           ; Switch size 1, requested type "simple"
  5981                           ; Number of cases is 1, Range of values is 0 to 0
  5982                           ; switch strategies available:
  5983                           ; Name         Instructions Cycles
  5984                           ; simple_byte            4     3 (average)
  5985                           ; direct_byte            8     6 (fixed)
  5986                           ; jumptable            260     6 (fixed)
  5987                           ;	Chosen strategy is simple_byte
  5988  0183  0878               	movf	??_driver_init+1,w
  5989  0184  3A00               	xorlw	0	; case 0
  5990  0185  1903               	skipnz
  5991  0186  2988               	goto	l2302
  5992  0187  299F               	goto	l2164
  5993  0188                     l2302:
  5994                           
  5995                           ; Switch size 1, requested type "simple"
  5996                           ; Number of cases is 7, Range of values is 1 to 7
  5997                           ; switch strategies available:
  5998                           ; Name         Instructions Cycles
  5999                           ; simple_byte           22    12 (average)
  6000                           ; direct_byte           23     9 (fixed)
  6001                           ; jumptable            263     9 (fixed)
  6002                           ;	Chosen strategy is simple_byte
  6003  0188  0877               	movf	??_driver_init,w
  6004  0189  3A01               	xorlw	1	; case 1
  6005  018A  1903               	skipnz
  6006  018B  28D5               	goto	l2150
  6007  018C  3A03               	xorlw	3	; case 2
  6008  018D  1903               	skipnz
  6009  018E  2915               	goto	l2152
  6010  018F  3A01               	xorlw	1	; case 3
  6011  0190  1903               	skipnz
  6012  0191  2946               	goto	l2154
  6013  0192  3A07               	xorlw	7	; case 4
  6014  0193  1903               	skipnz
  6015  0194  2946               	goto	l2154
  6016  0195  3A01               	xorlw	1	; case 5
  6017  0196  1903               	skipnz
  6018  0197  2968               	goto	l2156
  6019  0198  3A03               	xorlw	3	; case 6
  6020  0199  1903               	skipnz
  6021  019A  297B               	goto	l2158
  6022  019B  3A01               	xorlw	1	; case 7
  6023  019C  1903               	skipnz
  6024  019D  28D5               	goto	l2150
  6025  019E  299F               	goto	l2164
  6026  019F                     l2164:
  6027                           
  6028                           ;flexar_driver.c: 320:     driver_handler(driver_mode);
  6029  019F  0020               	movlb	0	; select bank0
  6030  01A0  085C               	movf	_driver_mode,w
  6031  01A1  3184  24FC  3180   	fcall	_driver_handler
  6032  01A4                     l492:
  6033  01A4  0008               	return
  6034  01A5                     __end_of_driver_init:
  6035                           
  6036                           	psect	text9
  6037  04FC                     __ptext9:	
  6038 ;; *************** function _driver_handler *****************
  6039 ;; Defined at:
  6040 ;;		line 44 in file "flexar_driver.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  mode_select     1    wreg     unsigned char 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  mode_select     1    6[COMMON] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6054 ;;      Params:         0       0       0       0
  6055 ;;      Locals:         1       0       0       0
  6056 ;;      Temps:          2       0       0       0
  6057 ;;      Totals:         3       0       0       0
  6058 ;;Total ram usage:        3 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 5
  6061 ;; This function calls:
  6062 ;;		_buzzer_pwm_config
  6063 ;;		_drive_pwm_config
  6064 ;; This function is called by:
  6065 ;;		_loop_handler
  6066 ;;		_driver_init
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _driver_handler
  6072  04FC                     _driver_handler:
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _driver_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6076                           ;driver_handler@mode_select stored from wreg
  6077  04FC  00F6               	movwf	driver_handler@mode_select
  6078  04FD                     l1936:
  6079                           
  6080                           ;flexar_driver.c: 45:     PWM6CONbits.PWM6EN = 0;
  6081  04FD  002C               	movlb	12	; select bank12
  6082  04FE  139C               	bcf	28,7	;volatile
  6083                           
  6084                           ;flexar_driver.c: 46:     PWM5CONbits.PWM5EN = 0;
  6085  04FF  1399               	bcf	25,7	;volatile
  6086                           
  6087                           ;flexar_driver.c: 47:     switch(mode_select){
  6088  0500  2D32               	goto	l1970
  6089  0501                     l1938:
  6090                           
  6091                           ;flexar_driver.c: 51:             LED_mode = 0x2U;
  6092  0501  3002               	movlw	2
  6093  0502  00F4               	movwf	??_driver_handler
  6094  0503  0874               	movf	??_driver_handler,w
  6095  0504  0020               	movlb	0	; select bank0
  6096  0505  00BC               	movwf	_LED_mode
  6097  0506                     l1940:
  6098                           
  6099                           ;flexar_driver.c: 52:             drive_pwm_config();
  6100  0506  3186  2687  3184   	fcall	_drive_pwm_config
  6101  0509                     l1942:
  6102                           
  6103                           ;flexar_driver.c: 53:             driver_mode = 1U;
  6104  0509  0020               	movlb	0	; select bank0
  6105  050A  01DC               	clrf	_driver_mode
  6106  050B  0ADC               	incf	_driver_mode,f
  6107                           
  6108                           ;flexar_driver.c: 54:             break;
  6109  050C  2D51               	goto	l423
  6110  050D                     l1944:
  6111                           
  6112                           ;flexar_driver.c: 57:             LED_mode = 0x4U;
  6113  050D  3004               	movlw	4
  6114  050E  00F4               	movwf	??_driver_handler
  6115  050F  0874               	movf	??_driver_handler,w
  6116  0510  0020               	movlb	0	; select bank0
  6117  0511  00BC               	movwf	_LED_mode
  6118  0512                     l1946:
  6119                           
  6120                           ;flexar_driver.c: 58:             drive_pwm_config();
  6121  0512  3186  2687  3184   	fcall	_drive_pwm_config
  6122                           
  6123                           ;flexar_driver.c: 59:             break;
  6124  0515  2D51               	goto	l423
  6125  0516                     l1948:
  6126                           
  6127                           ;flexar_driver.c: 63:             LED_mode = 0x8U;
  6128  0516  3008               	movlw	8
  6129  0517  00F4               	movwf	??_driver_handler
  6130  0518  0874               	movf	??_driver_handler,w
  6131  0519  0020               	movlb	0	; select bank0
  6132  051A  00BC               	movwf	_LED_mode
  6133  051B  2D12               	goto	l1946
  6134  051C                     l1952:
  6135                           
  6136                           ;flexar_driver.c: 68:             LED_mode = 0x10U;
  6137  051C  3010               	movlw	16
  6138  051D  00F4               	movwf	??_driver_handler
  6139  051E  0874               	movf	??_driver_handler,w
  6140  051F  0020               	movlb	0	; select bank0
  6141  0520  00BC               	movwf	_LED_mode
  6142  0521                     l1954:
  6143                           
  6144                           ;flexar_driver.c: 69:             buzzer_pwm_config();
  6145  0521  3186  2669  3184   	fcall	_buzzer_pwm_config
  6146                           
  6147                           ;flexar_driver.c: 70:             break;
  6148  0524  2D51               	goto	l423
  6149  0525                     l1956:
  6150                           
  6151                           ;flexar_driver.c: 73:            LED_mode = 0x20U;
  6152  0525  3020               	movlw	32
  6153  0526  00F4               	movwf	??_driver_handler
  6154  0527  0874               	movf	??_driver_handler,w
  6155  0528  0020               	movlb	0	; select bank0
  6156  0529  00BC               	movwf	_LED_mode
  6157  052A                     l1958:
  6158                           
  6159                           ;flexar_driver.c: 74:            T2CONbits.TMR2ON = 0;
  6160  052A  111F               	bcf	31,2	;volatile
  6161  052B                     l1960:
  6162                           
  6163                           ;flexar_driver.c: 75:            PWM6CONbits.PWM6EN = 0;
  6164  052B  002C               	movlb	12	; select bank12
  6165  052C  139C               	bcf	28,7	;volatile
  6166  052D                     l1962:
  6167                           
  6168                           ;flexar_driver.c: 76:            PWM5CONbits.PWM5EN = 0;
  6169  052D  1399               	bcf	25,7	;volatile
  6170  052E                     l1964:
  6171                           
  6172                           ;flexar_driver.c: 77:            TRISCbits.TRISC0 = 1U;
  6173  052E  0021               	movlb	1	; select bank1
  6174  052F  140E               	bsf	14,0	;volatile
  6175  0530                     l1966:
  6176                           
  6177                           ;flexar_driver.c: 78:            TRISAbits.TRISA2 = 1U;
  6178  0530  150C               	bsf	12,2	;volatile
  6179                           
  6180                           ;flexar_driver.c: 79:            break;
  6181  0531  2D51               	goto	l423
  6182  0532                     l1970:
  6183  0532  0876               	movf	driver_handler@mode_select,w
  6184  0533  00F4               	movwf	??_driver_handler
  6185  0534  01F5               	clrf	??_driver_handler+1
  6186                           
  6187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6188                           ; Switch size 1, requested type "simple"
  6189                           ; Number of cases is 1, Range of values is 0 to 0
  6190                           ; switch strategies available:
  6191                           ; Name         Instructions Cycles
  6192                           ; simple_byte            4     3 (average)
  6193                           ; direct_byte            8     6 (fixed)
  6194                           ; jumptable            260     6 (fixed)
  6195                           ;	Chosen strategy is simple_byte
  6196  0535  0875               	movf	??_driver_handler+1,w
  6197  0536  3A00               	xorlw	0	; case 0
  6198  0537  1903               	skipnz
  6199  0538  2D3A               	goto	l2304
  6200  0539  2D51               	goto	l423
  6201  053A                     l2304:
  6202                           
  6203                           ; Switch size 1, requested type "simple"
  6204                           ; Number of cases is 7, Range of values is 1 to 7
  6205                           ; switch strategies available:
  6206                           ; Name         Instructions Cycles
  6207                           ; simple_byte           22    12 (average)
  6208                           ; direct_byte           23     9 (fixed)
  6209                           ; jumptable            263     9 (fixed)
  6210                           ;	Chosen strategy is simple_byte
  6211  053A  0874               	movf	??_driver_handler,w
  6212  053B  3A01               	xorlw	1	; case 1
  6213  053C  1903               	skipnz
  6214  053D  2D01               	goto	l1938
  6215  053E  3A03               	xorlw	3	; case 2
  6216  053F  1903               	skipnz
  6217  0540  2D0D               	goto	l1944
  6218  0541  3A01               	xorlw	1	; case 3
  6219  0542  1903               	skipnz
  6220  0543  2D16               	goto	l1948
  6221  0544  3A07               	xorlw	7	; case 4
  6222  0545  1903               	skipnz
  6223  0546  2D16               	goto	l1948
  6224  0547  3A01               	xorlw	1	; case 5
  6225  0548  1903               	skipnz
  6226  0549  2D1C               	goto	l1952
  6227  054A  3A03               	xorlw	3	; case 6
  6228  054B  1903               	skipnz
  6229  054C  2D25               	goto	l1956
  6230  054D  3A01               	xorlw	1	; case 7
  6231  054E  1903               	skipnz
  6232  054F  2D01               	goto	l1938
  6233  0550  2D51               	goto	l423
  6234  0551                     l423:
  6235  0551  0008               	return
  6236  0552                     __end_of_driver_handler:
  6237                           
  6238                           	psect	text10
  6239  0687                     __ptext10:	
  6240 ;; *************** function _drive_pwm_config *****************
  6241 ;; Defined at:
  6242 ;;		line 338 in file "flexar_driver.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6256 ;;      Params:         0       0       0       0
  6257 ;;      Locals:         0       0       0       0
  6258 ;;      Temps:          0       0       0       0
  6259 ;;      Totals:         0       0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 3
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_driver_handler
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _drive_pwm_config
  6272  0687                     _drive_pwm_config:
  6273  0687                     l1828:	
  6274                           ;incstack = 0
  6275                           ; Regs used in _drive_pwm_config: [wreg]
  6276                           
  6277                           
  6278                           ;flexar_driver.c: 339:     TRISCbits.TRISC0 = 0U;
  6279  0687  0021               	movlb	1	; select bank1
  6280  0688  100E               	bcf	14,0	;volatile
  6281                           
  6282                           ;flexar_driver.c: 340:     TRISAbits.TRISA2 = 0U;
  6283  0689  110C               	bcf	12,2	;volatile
  6284                           
  6285                           ;flexar_driver.c: 342:     T2CONbits.TMR2ON = 0;
  6286  068A  0020               	movlb	0	; select bank0
  6287  068B  111F               	bcf	31,2	;volatile
  6288                           
  6289                           ;flexar_driver.c: 343:     PWM6CONbits.PWM6EN = 0;
  6290  068C  002C               	movlb	12	; select bank12
  6291  068D  139C               	bcf	28,7	;volatile
  6292                           
  6293                           ;flexar_driver.c: 344:     PWM5CONbits.PWM5EN = 0;
  6294  068E  1399               	bcf	25,7	;volatile
  6295  068F                     l1830:
  6296                           
  6297                           ;flexar_driver.c: 347:     T2CON = 0x05;
  6298  068F  3005               	movlw	5
  6299  0690  0020               	movlb	0	; select bank0
  6300  0691  009F               	movwf	31	;volatile
  6301                           
  6302                           ;flexar_driver.c: 348:     PR2 = 0xC7;
  6303  0692  30C7               	movlw	199
  6304  0693  009E               	movwf	30	;volatile
  6305                           
  6306                           ;flexar_driver.c: 349:     PWM5DCH = 0xC7;
  6307  0694  30C7               	movlw	199
  6308  0695  002C               	movlb	12	; select bank12
  6309  0696  0098               	movwf	24	;volatile
  6310                           
  6311                           ;flexar_driver.c: 350:     PWM5DCL = 0xC0;
  6312  0697  30C0               	movlw	192
  6313  0698  0097               	movwf	23	;volatile
  6314                           
  6315                           ;flexar_driver.c: 351:     PWM6DCH = 0xC7;
  6316  0699  30C7               	movlw	199
  6317  069A  009B               	movwf	27	;volatile
  6318                           
  6319                           ;flexar_driver.c: 352:     PWM6DCL = 0xC0;
  6320  069B  30C0               	movlw	192
  6321  069C  009A               	movwf	26	;volatile
  6322  069D                     l1832:
  6323                           
  6324                           ;flexar_driver.c: 354:     T2CONbits.TMR2ON = 1;
  6325  069D  0020               	movlb	0	; select bank0
  6326  069E  151F               	bsf	31,2	;volatile
  6327  069F                     l1834:
  6328                           
  6329                           ;flexar_driver.c: 355:     PWM6CONbits.PWM6EN = 1;
  6330  069F  002C               	movlb	12	; select bank12
  6331  06A0  179C               	bsf	28,7	;volatile
  6332  06A1                     l1836:
  6333                           
  6334                           ;flexar_driver.c: 356:     PWM5CONbits.PWM5EN = 1;
  6335  06A1  1799               	bsf	25,7	;volatile
  6336  06A2                     l498:
  6337  06A2  0008               	return
  6338  06A3                     __end_of_drive_pwm_config:
  6339                           
  6340                           	psect	text11
  6341  0669                     __ptext11:	
  6342 ;; *************** function _buzzer_pwm_config *****************
  6343 ;; Defined at:
  6344 ;;		line 323 in file "flexar_driver.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0, pclath, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6358 ;;      Params:         0       0       0       0
  6359 ;;      Locals:         0       0       0       0
  6360 ;;      Temps:          0       0       0       0
  6361 ;;      Totals:         0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 4
  6365 ;; This function calls:
  6366 ;;		_PWM5_LoadDutyValue
  6367 ;;		_PWM6_LoadDutyValue
  6368 ;; This function is called by:
  6369 ;;		_driver_handler
  6370 ;;		_driver_init
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function _buzzer_pwm_config
  6376  0669                     _buzzer_pwm_config:
  6377  0669                     l1838:	
  6378                           ;incstack = 0
  6379                           ; Regs used in _buzzer_pwm_config: [wreg+status,2+status,0+pclath+cstack]
  6380                           
  6381                           
  6382                           ;flexar_driver.c: 324:     T2CONbits.TMR2ON = 0;
  6383  0669  0020               	movlb	0	; select bank0
  6384  066A  111F               	bcf	31,2	;volatile
  6385                           
  6386                           ;flexar_driver.c: 325:     PWM6CONbits.PWM6EN = 0;
  6387  066B  002C               	movlb	12	; select bank12
  6388  066C  139C               	bcf	28,7	;volatile
  6389                           
  6390                           ;flexar_driver.c: 326:     PWM5CONbits.PWM5EN = 0;
  6391  066D  1399               	bcf	25,7	;volatile
  6392  066E                     l1840:
  6393                           
  6394                           ;flexar_driver.c: 328:     T2CON = 0x07;
  6395  066E  3007               	movlw	7
  6396  066F  0020               	movlb	0	; select bank0
  6397  0670  009F               	movwf	31	;volatile
  6398                           
  6399                           ;flexar_driver.c: 329:     PR2 = 128U;
  6400  0671  3080               	movlw	128
  6401  0672  009E               	movwf	30	;volatile
  6402  0673                     l1842:
  6403                           
  6404                           ;flexar_driver.c: 330:     PWM5_LoadDutyValue(258U);
  6405  0673  3002               	movlw	2
  6406  0674  00F0               	movwf	PWM5_LoadDutyValue@dutyValue
  6407  0675  3001               	movlw	1
  6408  0676  00F1               	movwf	PWM5_LoadDutyValue@dutyValue+1
  6409  0677  3186  26F0  3186   	fcall	_PWM5_LoadDutyValue
  6410  067A                     l1844:
  6411                           
  6412                           ;flexar_driver.c: 331:     PWM6_LoadDutyValue(258U);
  6413  067A  3002               	movlw	2
  6414  067B  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  6415  067C  3001               	movlw	1
  6416  067D  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  6417  067E  3186  26DA  3186   	fcall	_PWM6_LoadDutyValue
  6418  0681                     l1846:
  6419                           
  6420                           ;flexar_driver.c: 333:     T2CONbits.TMR2ON = 1;
  6421  0681  0020               	movlb	0	; select bank0
  6422  0682  151F               	bsf	31,2	;volatile
  6423  0683                     l1848:
  6424                           
  6425                           ;flexar_driver.c: 334:     PWM6CONbits.PWM6EN = 1;
  6426  0683  002C               	movlb	12	; select bank12
  6427  0684  179C               	bsf	28,7	;volatile
  6428  0685                     l1850:
  6429                           
  6430                           ;flexar_driver.c: 335:     PWM5CONbits.PWM5EN = 1;
  6431  0685  1799               	bsf	25,7	;volatile
  6432  0686                     l495:
  6433  0686  0008               	return
  6434  0687                     __end_of_buzzer_pwm_config:
  6435                           
  6436                           	psect	text12
  6437  06DA                     __ptext12:	
  6438 ;; *************** function _PWM6_LoadDutyValue *****************
  6439 ;; Defined at:
  6440 ;;		line 72 in file "mcc_generated_files/pwm6.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  dutyValue       2    0[COMMON] unsigned short 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;		None
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6454 ;;      Params:         2       0       0       0
  6455 ;;      Locals:         0       0       0       0
  6456 ;;      Temps:          2       0       0       0
  6457 ;;      Totals:         4       0       0       0
  6458 ;;Total ram usage:        4 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 3
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_trimmer_handler
  6465 ;;		_driver_run
  6466 ;;		_driver_init
  6467 ;;		_buzzer_pwm_config
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _PWM6_LoadDutyValue
  6473  06DA                     _PWM6_LoadDutyValue:
  6474  06DA                     l1790:	
  6475                           ;incstack = 0
  6476                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  6477                           
  6478                           
  6479                           ;mcc_generated_files/pwm6.c: 72:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 73:  {;mcc_generated_files/pwm6.c: 75:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6480  06DA  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
  6481  06DB  00F3               	movwf	??_PWM6_LoadDutyValue+1
  6482  06DC  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
  6483  06DD  00F2               	movwf	??_PWM6_LoadDutyValue
  6484  06DE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  6485  06DF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  6486  06E0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  6487  06E1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  6488  06E2  0872               	movf	??_PWM6_LoadDutyValue,w
  6489  06E3  002C               	movlb	12	; select bank12
  6490  06E4  009B               	movwf	27	;volatile
  6491                           
  6492                           ;mcc_generated_files/pwm6.c: 78:      PWM6DCL = (dutyValue & 0x0003)<<6;
  6493  06E5  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
  6494  06E6  3903               	andlw	3
  6495  06E7  00F2               	movwf	??_PWM6_LoadDutyValue
  6496  06E8  3005               	movlw	5
  6497  06E9                     u545:
  6498  06E9  35F2               	lslf	??_PWM6_LoadDutyValue,f
  6499  06EA  3EFF               	addlw	-1
  6500  06EB  1D03               	skipz
  6501  06EC  2EE9               	goto	u545
  6502  06ED  3572               	lslf	??_PWM6_LoadDutyValue,w
  6503  06EE  009A               	movwf	26	;volatile
  6504  06EF                     l239:
  6505  06EF  0008               	return
  6506  06F0                     __end_of_PWM6_LoadDutyValue:
  6507                           
  6508                           	psect	text13
  6509  06F0                     __ptext13:	
  6510 ;; *************** function _PWM5_LoadDutyValue *****************
  6511 ;; Defined at:
  6512 ;;		line 72 in file "mcc_generated_files/pwm5.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  dutyValue       2    0[COMMON] unsigned short 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      void 
  6519 ;; Registers used:
  6520 ;;		wreg, status,2, status,0
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6526 ;;      Params:         2       0       0       0
  6527 ;;      Locals:         0       0       0       0
  6528 ;;      Temps:          2       0       0       0
  6529 ;;      Totals:         4       0       0       0
  6530 ;;Total ram usage:        4 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 3
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_trimmer_handler
  6537 ;;		_driver_run
  6538 ;;		_driver_init
  6539 ;;		_buzzer_pwm_config
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           
  6544                           ;psect for function _PWM5_LoadDutyValue
  6545  06F0                     _PWM5_LoadDutyValue:
  6546  06F0                     l1792:	
  6547                           ;incstack = 0
  6548                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  6549                           
  6550                           
  6551                           ;mcc_generated_files/pwm5.c: 72:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 73:  {;mcc_generated_files/pwm5.c: 75:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6552  06F0  0871               	movf	PWM5_LoadDutyValue@dutyValue+1,w
  6553  06F1  00F3               	movwf	??_PWM5_LoadDutyValue+1
  6554  06F2  0870               	movf	PWM5_LoadDutyValue@dutyValue,w
  6555  06F3  00F2               	movwf	??_PWM5_LoadDutyValue
  6556  06F4  36F3               	lsrf	??_PWM5_LoadDutyValue+1,f
  6557  06F5  0CF2               	rrf	??_PWM5_LoadDutyValue,f
  6558  06F6  36F3               	lsrf	??_PWM5_LoadDutyValue+1,f
  6559  06F7  0CF2               	rrf	??_PWM5_LoadDutyValue,f
  6560  06F8  0872               	movf	??_PWM5_LoadDutyValue,w
  6561  06F9  002C               	movlb	12	; select bank12
  6562  06FA  0098               	movwf	24	;volatile
  6563                           
  6564                           ;mcc_generated_files/pwm5.c: 78:      PWM5DCL = (dutyValue & 0x0003)<<6;
  6565  06FB  0870               	movf	PWM5_LoadDutyValue@dutyValue,w
  6566  06FC  3903               	andlw	3
  6567  06FD  00F2               	movwf	??_PWM5_LoadDutyValue
  6568  06FE  3005               	movlw	5
  6569  06FF                     u555:
  6570  06FF  35F2               	lslf	??_PWM5_LoadDutyValue,f
  6571  0700  3EFF               	addlw	-1
  6572  0701  1D03               	skipz
  6573  0702  2EFF               	goto	u555
  6574  0703  3572               	lslf	??_PWM5_LoadDutyValue,w
  6575  0704  0097               	movwf	23	;volatile
  6576  0705                     l251:
  6577  0705  0008               	return
  6578  0706                     __end_of_PWM5_LoadDutyValue:
  6579                           
  6580                           	psect	text14
  6581  0735                     __ptext14:	
  6582 ;; *************** function _DATAEE_ReadByte *****************
  6583 ;; Defined at:
  6584 ;;		line 202 in file "mcc_generated_files/memory.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  bAdd            2    0[COMMON] unsigned short 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      unsigned char 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6598 ;;      Params:         2       0       0       0
  6599 ;;      Locals:         0       0       0       0
  6600 ;;      Temps:          0       0       0       0
  6601 ;;      Totals:         2       0       0       0
  6602 ;;Total ram usage:        2 bytes
  6603 ;; Hardware stack levels used: 1
  6604 ;; Hardware stack levels required when called: 3
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_driver_init
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function _DATAEE_ReadByte
  6614  0735                     _DATAEE_ReadByte:
  6615  0735                     l1920:	
  6616                           ;incstack = 0
  6617                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  6618                           
  6619                           
  6620                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
  6621  0735  0871               	movf	DATAEE_ReadByte@bAdd+1,w
  6622  0736  0031               	movlb	17	; select bank17
  6623  0737  0092               	movwf	18	;volatile
  6624  0738                     l1922:
  6625                           
  6626                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
  6627  0738  0870               	movf	DATAEE_ReadByte@bAdd,w
  6628  0739  0091               	movwf	17	;volatile
  6629  073A                     l1924:
  6630                           
  6631                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
  6632  073A  1715               	bsf	21,6	;volsfr
  6633  073B                     l1926:
  6634                           
  6635                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
  6636  073B  1415               	bsf	21,0	;volsfr
  6637  073C                     l1928:
  6638                           
  6639                           ;mcc_generated_files/memory.c: 208:     __nop();
  6640  073C  0000               	nop
  6641  073D                     l1930:
  6642                           
  6643                           ;mcc_generated_files/memory.c: 209:     __nop();
  6644  073D  0000               	nop
  6645  073E                     l1932:
  6646                           
  6647                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
  6648  073E  0031               	movlb	17	; select bank17
  6649  073F  0813               	movf	19,w	;volatile
  6650  0740                     l298:
  6651  0740  0008               	return
  6652  0741                     __end_of_DATAEE_ReadByte:
  6653                           
  6654                           	psect	text15
  6655  06BF                     __ptext15:	
  6656 ;; *************** function _ADC_GetConversion *****************
  6657 ;; Defined at:
  6658 ;;		line 116 in file "mcc_generated_files/adc.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  channel         1    wreg     enum E4894
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  channel         1    3[COMMON] enum E4894
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  2    0[COMMON] unsigned short 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6672 ;;      Params:         2       0       0       0
  6673 ;;      Locals:         1       0       0       0
  6674 ;;      Temps:          1       0       0       0
  6675 ;;      Totals:         4       0       0       0
  6676 ;;Total ram usage:        4 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 3
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_trimmer_handler
  6683 ;;		_driver_init
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _ADC_GetConversion
  6689  06BF                     _ADC_GetConversion:
  6690                           
  6691                           ;incstack = 0
  6692                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6693                           ;ADC_GetConversion@channel stored from wreg
  6694  06BF  00F3               	movwf	ADC_GetConversion@channel
  6695  06C0                     l1796:
  6696                           
  6697                           ;mcc_generated_files/adc.c: 116: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 117: {;mcc_generated_files/adc.c: 119:     ADCON0bits.CHS = ch
      +                          annel;
  6698  06C0  0873               	movf	ADC_GetConversion@channel,w
  6699  06C1  00F2               	movwf	??_ADC_GetConversion
  6700  06C2  0DF2               	rlf	??_ADC_GetConversion,f
  6701  06C3  0DF2               	rlf	??_ADC_GetConversion,f
  6702  06C4  0021               	movlb	1	; select bank1
  6703  06C5  081D               	movf	29,w	;volatile
  6704  06C6  0672               	xorwf	??_ADC_GetConversion,w
  6705  06C7  3903               	andlw	-253
  6706  06C8  0672               	xorwf	??_ADC_GetConversion,w
  6707  06C9  009D               	movwf	29	;volatile
  6708  06CA                     l1798:
  6709                           
  6710                           ;mcc_generated_files/adc.c: 122:     ADCON0bits.ADON = 1;
  6711  06CA  141D               	bsf	29,0	;volatile
  6712  06CB                     l1800:
  6713                           
  6714                           ;mcc_generated_files/adc.c: 125:     _delay((unsigned long)((5)*(32000000/4000000.0)));
  6715  06CB  300D               	movlw	13
  6716  06CC                     u1207:
  6717  06CC  0B89               	decfsz	9,f
  6718  06CD  2ECC               	goto	u1207
  6719  06CE  0000               	nop
  6720  06CF                     l1802:
  6721                           
  6722                           ;mcc_generated_files/adc.c: 128:     ADCON0bits.ADGO = 1;
  6723  06CF  0021               	movlb	1	; select bank1
  6724  06D0  149D               	bsf	29,1	;volatile
  6725  06D1                     l189:	
  6726                           ;mcc_generated_files/adc.c: 132:     {;mcc_generated_files/adc.c: 133:     }
  6727                           
  6728                           
  6729                           ;mcc_generated_files/adc.c: 131:     while (ADCON0bits.ADGO)
  6730  06D1  189D               	btfsc	29,1	;volatile
  6731  06D2  2ED4               	goto	u561
  6732  06D3  2ED5               	goto	u560
  6733  06D4                     u561:
  6734  06D4  2ED1               	goto	l189
  6735  06D5                     u560:
  6736  06D5                     l1804:
  6737                           
  6738                           ;mcc_generated_files/adc.c: 136:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6739  06D5  081C               	movf	28,w	;volatile
  6740  06D6  00F1               	movwf	?_ADC_GetConversion+1
  6741  06D7  081B               	movf	27,w	;volatile
  6742  06D8  00F0               	movwf	?_ADC_GetConversion
  6743  06D9                     l192:
  6744  06D9  0008               	return
  6745  06DA                     __end_of_ADC_GetConversion:
  6746                           
  6747                           	psect	text16
  6748  06A3                     __ptext16:	
  6749 ;; *************** function _SYSTEM_Initialize *****************
  6750 ;; Defined at:
  6751 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6765 ;;      Params:         0       0       0       0
  6766 ;;      Locals:         0       0       0       0
  6767 ;;      Temps:          0       0       0       0
  6768 ;;      Totals:         0       0       0       0
  6769 ;;Total ram usage:        0 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 5
  6772 ;; This function calls:
  6773 ;;		_ADC_Initialize
  6774 ;;		_OSCILLATOR_Initialize
  6775 ;;		_PIN_MANAGER_Initialize
  6776 ;;		_PMD_Initialize
  6777 ;;		_PWM5_Initialize
  6778 ;;		_PWM6_Initialize
  6779 ;;		_TMR0_Initialize
  6780 ;;		_TMR2_Initialize
  6781 ;;		_WDT_Initialize
  6782 ;; This function is called by:
  6783 ;;		_main
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           
  6788                           ;psect for function _SYSTEM_Initialize
  6789  06A3                     _SYSTEM_Initialize:
  6790  06A3                     l2094:	
  6791                           ;incstack = 0
  6792                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6793                           
  6794                           
  6795                           ;mcc_generated_files/mcc.c: 51:     PMD_Initialize();
  6796  06A3  3187  2751  3186   	fcall	_PMD_Initialize
  6797  06A6                     l2096:
  6798                           
  6799                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  6800  06A6  3186  2627  3186   	fcall	_PIN_MANAGER_Initialize
  6801  06A9                     l2098:
  6802                           
  6803                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  6804  06A9  3187  2759  3186   	fcall	_OSCILLATOR_Initialize
  6805  06AC                     l2100:
  6806                           
  6807                           ;mcc_generated_files/mcc.c: 54:     WDT_Initialize();
  6808  06AC  3187  2774  3186   	fcall	_WDT_Initialize
  6809  06AF                     l2102:
  6810                           
  6811                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
  6812  06AF  3187  2761  3186   	fcall	_PWM6_Initialize
  6813  06B2                     l2104:
  6814                           
  6815                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  6816  06B2  3187  2728  3186   	fcall	_ADC_Initialize
  6817  06B5                     l2106:
  6818                           
  6819                           ;mcc_generated_files/mcc.c: 57:     PWM5_Initialize();
  6820  06B5  3187  2749  3186   	fcall	_PWM5_Initialize
  6821  06B8                     l2108:
  6822                           
  6823                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  6824  06B8  3187  2741  3186   	fcall	_TMR2_Initialize
  6825  06BB                     l2110:
  6826                           
  6827                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  6828  06BB  3187  2706  3186   	fcall	_TMR0_Initialize
  6829  06BE                     l45:
  6830  06BE  0008               	return
  6831  06BF                     __end_of_SYSTEM_Initialize:
  6832                           
  6833                           	psect	text17
  6834  0774                     __ptext17:	
  6835 ;; *************** function _WDT_Initialize *****************
  6836 ;; Defined at:
  6837 ;;		line 76 in file "mcc_generated_files/mcc.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;		None
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6851 ;;      Params:         0       0       0       0
  6852 ;;      Locals:         0       0       0       0
  6853 ;;      Temps:          0       0       0       0
  6854 ;;      Totals:         0       0       0       0
  6855 ;;Total ram usage:        0 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; Hardware stack levels required when called: 3
  6858 ;; This function calls:
  6859 ;;		Nothing
  6860 ;; This function is called by:
  6861 ;;		_SYSTEM_Initialize
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           
  6866                           ;psect for function _WDT_Initialize
  6867  0774                     _WDT_Initialize:
  6868  0774                     l1878:	
  6869                           ;incstack = 0
  6870                           ; Regs used in _WDT_Initialize: [wreg]
  6871                           
  6872                           
  6873                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x1A;
  6874  0774  301A               	movlw	26
  6875  0775  0021               	movlb	1	; select bank1
  6876  0776  0097               	movwf	23	;volatile
  6877  0777                     l51:
  6878  0777  0008               	return
  6879  0778                     __end_of_WDT_Initialize:
  6880                           
  6881                           	psect	text18
  6882  0741                     __ptext18:	
  6883 ;; *************** function _TMR2_Initialize *****************
  6884 ;; Defined at:
  6885 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6899 ;;      Params:         0       0       0       0
  6900 ;;      Locals:         0       0       0       0
  6901 ;;      Temps:          0       0       0       0
  6902 ;;      Totals:         0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 3
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_SYSTEM_Initialize
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           
  6914                           ;psect for function _TMR2_Initialize
  6915  0741                     _TMR2_Initialize:
  6916  0741                     l1900:	
  6917                           ;incstack = 0
  6918                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6919                           
  6920                           
  6921                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xC7;
  6922  0741  30C7               	movlw	199
  6923  0742  0020               	movlb	0	; select bank0
  6924  0743  009E               	movwf	30	;volatile
  6925  0744                     l1902:
  6926                           
  6927                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6928  0744  019D               	clrf	29	;volatile
  6929  0745                     l1904:
  6930                           
  6931                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6932  0745  1091               	bcf	17,1	;volatile
  6933  0746                     l1906:
  6934                           
  6935                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  6936  0746  3005               	movlw	5
  6937  0747  009F               	movwf	31	;volatile
  6938  0748                     l208:
  6939  0748  0008               	return
  6940  0749                     __end_of_TMR2_Initialize:
  6941                           
  6942                           	psect	text19
  6943  0706                     __ptext19:	
  6944 ;; *************** function _TMR0_Initialize *****************
  6945 ;; Defined at:
  6946 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0, pclath, cstack
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6960 ;;      Params:         0       0       0       0
  6961 ;;      Locals:         0       0       0       0
  6962 ;;      Temps:          0       0       0       0
  6963 ;;      Totals:         0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used: 1
  6966 ;; Hardware stack levels required when called: 4
  6967 ;; This function calls:
  6968 ;;		_TMR0_SetInterruptHandler
  6969 ;; This function is called by:
  6970 ;;		_SYSTEM_Initialize
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           
  6975                           ;psect for function _TMR0_Initialize
  6976  0706                     _TMR0_Initialize:
  6977  0706                     l1908:	
  6978                           ;incstack = 0
  6979                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6980                           
  6981                           
  6982                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x62;
  6983  0706  3062               	movlw	98
  6984  0707  0020               	movlb	0	; select bank0
  6985  0708  0098               	movwf	24	;volatile
  6986                           
  6987                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xFE;
  6988  0709  30FE               	movlw	254
  6989  070A  0096               	movwf	22	;volatile
  6990  070B                     l1910:
  6991                           
  6992                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  6993  070B  0195               	clrf	21	;volatile
  6994  070C                     l1912:
  6995                           
  6996                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  6997  070C  1290               	bcf	16,5	;volatile
  6998  070D                     l1914:
  6999                           
  7000                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  7001  070D  0021               	movlb	1	; select bank1
  7002  070E  1690               	bsf	16,5	;volatile
  7003  070F                     l1916:
  7004                           
  7005                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7006  070F  307C               	movlw	low _TMR0_DefaultInterruptHandler
  7007  0710  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7008  0711  3007               	movlw	high _TMR0_DefaultInterruptHandler
  7009  0712  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7010  0713  3187  276E  3187   	fcall	_TMR0_SetInterruptHandler
  7011  0716                     l1918:
  7012                           
  7013                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x84;
  7014  0716  3084               	movlw	132
  7015  0717  0020               	movlb	0	; select bank0
  7016  0718  0097               	movwf	23	;volatile
  7017  0719                     l115:
  7018  0719  0008               	return
  7019  071A                     __end_of_TMR0_Initialize:
  7020                           
  7021                           	psect	text20
  7022  076E                     __ptext20:	
  7023 ;; *************** function _TMR0_SetInterruptHandler *****************
  7024 ;; Defined at:
  7025 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  7028 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7040 ;;      Params:         2       0       0       0
  7041 ;;      Locals:         0       0       0       0
  7042 ;;      Temps:          0       0       0       0
  7043 ;;      Totals:         2       0       0       0
  7044 ;;Total ram usage:        2 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 3
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_TMR0_Initialize
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           
  7055                           ;psect for function _TMR0_SetInterruptHandler
  7056  076E                     _TMR0_SetInterruptHandler:
  7057  076E                     l1794:	
  7058                           ;incstack = 0
  7059                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7060                           
  7061                           
  7062                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  7063  076E  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7064  076F  0020               	movlb	0	; select bank0
  7065  0770  00DE               	movwf	_TMR0_InterruptHandler+1
  7066  0771  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7067  0772  00DD               	movwf	_TMR0_InterruptHandler
  7068  0773                     l137:
  7069  0773  0008               	return
  7070  0774                     __end_of_TMR0_SetInterruptHandler:
  7071                           
  7072                           	psect	text21
  7073  0761                     __ptext21:	
  7074 ;; *************** function _PWM6_Initialize *****************
  7075 ;; Defined at:
  7076 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7090 ;;      Params:         0       0       0       0
  7091 ;;      Locals:         0       0       0       0
  7092 ;;      Temps:          0       0       0       0
  7093 ;;      Totals:         0       0       0       0
  7094 ;;Total ram usage:        0 bytes
  7095 ;; Hardware stack levels used: 1
  7096 ;; Hardware stack levels required when called: 3
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_SYSTEM_Initialize
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function _PWM6_Initialize
  7106  0761                     _PWM6_Initialize:
  7107  0761                     l1880:	
  7108                           ;incstack = 0
  7109                           ; Regs used in _PWM6_Initialize: [wreg+status,2]
  7110                           
  7111                           
  7112                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x00;
  7113  0761  002C               	movlb	12	; select bank12
  7114  0762  019C               	clrf	28	;volatile
  7115  0763                     l1882:
  7116                           
  7117                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0xC7;
  7118  0763  30C7               	movlw	199
  7119  0764  009B               	movwf	27	;volatile
  7120  0765                     l1884:
  7121                           
  7122                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  7123  0765  30C0               	movlw	192
  7124  0766  009A               	movwf	26	;volatile
  7125  0767                     l236:
  7126  0767  0008               	return
  7127  0768                     __end_of_PWM6_Initialize:
  7128                           
  7129                           	psect	text22
  7130  0749                     __ptext22:	
  7131 ;; *************** function _PWM5_Initialize *****************
  7132 ;; Defined at:
  7133 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7147 ;;      Params:         0       0       0       0
  7148 ;;      Locals:         0       0       0       0
  7149 ;;      Temps:          0       0       0       0
  7150 ;;      Totals:         0       0       0       0
  7151 ;;Total ram usage:        0 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 3
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_SYSTEM_Initialize
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           
  7162                           ;psect for function _PWM5_Initialize
  7163  0749                     _PWM5_Initialize:
  7164  0749                     l1898:	
  7165                           ;incstack = 0
  7166                           ; Regs used in _PWM5_Initialize: [wreg]
  7167                           
  7168                           
  7169                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x10;
  7170  0749  3010               	movlw	16
  7171  074A  002C               	movlb	12	; select bank12
  7172  074B  0099               	movwf	25	;volatile
  7173                           
  7174                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0xC7;
  7175  074C  30C7               	movlw	199
  7176  074D  0098               	movwf	24	;volatile
  7177                           
  7178                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
  7179  074E  30C0               	movlw	192
  7180  074F  0097               	movwf	23	;volatile
  7181  0750                     l248:
  7182  0750  0008               	return
  7183  0751                     __end_of_PWM5_Initialize:
  7184                           
  7185                           	psect	text23
  7186  0751                     __ptext23:	
  7187 ;; *************** function _PMD_Initialize *****************
  7188 ;; Defined at:
  7189 ;;		line 82 in file "mcc_generated_files/mcc.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		status,2
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7203 ;;      Params:         0       0       0       0
  7204 ;;      Locals:         0       0       0       0
  7205 ;;      Temps:          0       0       0       0
  7206 ;;      Totals:         0       0       0       0
  7207 ;;Total ram usage:        0 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 3
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_SYSTEM_Initialize
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function _PMD_Initialize
  7219  0751                     _PMD_Initialize:
  7220  0751                     l1852:	
  7221                           ;incstack = 0
  7222                           ; Regs used in _PMD_Initialize: [status,2]
  7223                           
  7224                           
  7225                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
  7226  0751  0032               	movlb	18	; select bank18
  7227  0752  0191               	clrf	17	;volatile
  7228                           
  7229                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
  7230  0753  0192               	clrf	18	;volatile
  7231                           
  7232                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
  7233  0754  0193               	clrf	19	;volatile
  7234                           
  7235                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
  7236  0755  0194               	clrf	20	;volatile
  7237                           
  7238                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
  7239  0756  0195               	clrf	21	;volatile
  7240                           
  7241                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
  7242  0757  0196               	clrf	22	;volatile
  7243  0758                     l54:
  7244  0758  0008               	return
  7245  0759                     __end_of_PMD_Initialize:
  7246                           
  7247                           	psect	text24
  7248  0627                     __ptext24:	
  7249 ;; *************** function _PIN_MANAGER_Initialize *****************
  7250 ;; Defined at:
  7251 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7265 ;;      Params:         0       0       0       0
  7266 ;;      Locals:         0       0       0       0
  7267 ;;      Temps:          0       0       0       0
  7268 ;;      Totals:         0       0       0       0
  7269 ;;Total ram usage:        0 bytes
  7270 ;; Hardware stack levels used: 1
  7271 ;; Hardware stack levels required when called: 3
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_SYSTEM_Initialize
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function _PIN_MANAGER_Initialize
  7281  0627                     _PIN_MANAGER_Initialize:
  7282  0627                     l1854:	
  7283                           ;incstack = 0
  7284                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7285                           
  7286                           
  7287                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7288  0627  0022               	movlb	2	; select bank2
  7289  0628  018C               	clrf	12	;volatile
  7290                           
  7291                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  7292  0629  018E               	clrf	14	;volatile
  7293  062A                     l1856:
  7294                           
  7295                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x11;
  7296  062A  3011               	movlw	17
  7297  062B  0021               	movlb	1	; select bank1
  7298  062C  008C               	movwf	12	;volatile
  7299  062D                     l1858:
  7300                           
  7301                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x00;
  7302  062D  018E               	clrf	14	;volatile
  7303  062E                     l1860:
  7304                           
  7305                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  7306  062E  0023               	movlb	3	; select bank3
  7307  062F  018E               	clrf	14	;volatile
  7308  0630                     l1862:
  7309                           
  7310                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x10;
  7311  0630  3010               	movlw	16
  7312  0631  008C               	movwf	12	;volatile
  7313  0632                     l1864:
  7314                           
  7315                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x04;
  7316  0632  3004               	movlw	4
  7317  0633  0024               	movlb	4	; select bank4
  7318  0634  008C               	movwf	12	;volatile
  7319  0635                     l1866:
  7320                           
  7321                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x01;
  7322  0635  3001               	movlw	1
  7323  0636  008E               	movwf	14	;volatile
  7324  0637                     l1868:
  7325                           
  7326                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x01;
  7327  0637  3001               	movlw	1
  7328  0638  0025               	movlb	5	; select bank5
  7329  0639  008C               	movwf	12	;volatile
  7330  063A                     l1870:
  7331                           
  7332                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  7333  063A  018E               	clrf	14	;volatile
  7334                           
  7335                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  7336  063B  3037               	movlw	55
  7337  063C  0026               	movlb	6	; select bank6
  7338  063D  008C               	movwf	12	;volatile
  7339                           
  7340                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  7341  063E  303F               	movlw	63
  7342  063F  008E               	movwf	14	;volatile
  7343                           
  7344                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  7345  0640  303F               	movlw	63
  7346  0641  0027               	movlb	7	; select bank7
  7347  0642  008C               	movwf	12	;volatile
  7348                           
  7349                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  7350  0643  303F               	movlw	63
  7351  0644  008E               	movwf	14	;volatile
  7352                           
  7353                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x03;
  7354  0645  3003               	movlw	3
  7355  0646  003D               	movlb	29	; select bank29
  7356  0647  00A0               	movwf	32	;volatile
  7357                           
  7358                           ;mcc_generated_files/pin_manager.c: 107:     RA2PPS = 0x02;
  7359  0648  3002               	movlw	2
  7360  0649  0092               	movwf	18	;volatile
  7361  064A                     l89:
  7362  064A  0008               	return
  7363  064B                     __end_of_PIN_MANAGER_Initialize:
  7364                           
  7365                           	psect	text25
  7366  0759                     __ptext25:	
  7367 ;; *************** function _OSCILLATOR_Initialize *****************
  7368 ;; Defined at:
  7369 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7383 ;;      Params:         0       0       0       0
  7384 ;;      Locals:         0       0       0       0
  7385 ;;      Temps:          0       0       0       0
  7386 ;;      Totals:         0       0       0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; Hardware stack levels required when called: 3
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_SYSTEM_Initialize
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           
  7398                           ;psect for function _OSCILLATOR_Initialize
  7399  0759                     _OSCILLATOR_Initialize:
  7400  0759                     l1872:	
  7401                           ;incstack = 0
  7402                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7403                           
  7404                           
  7405                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x00;
  7406  0759  0032               	movlb	18	; select bank18
  7407  075A  0199               	clrf	25	;volatile
  7408                           
  7409                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  7410  075B  019B               	clrf	27	;volatile
  7411                           
  7412                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  7413  075C  019D               	clrf	29	;volatile
  7414  075D                     l1874:
  7415                           
  7416                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x07;
  7417  075D  3007               	movlw	7
  7418  075E  009F               	movwf	31	;volatile
  7419  075F                     l1876:
  7420                           
  7421                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  7422  075F  019E               	clrf	30	;volatile
  7423  0760                     l48:
  7424  0760  0008               	return
  7425  0761                     __end_of_OSCILLATOR_Initialize:
  7426                           
  7427                           	psect	text26
  7428  0728                     __ptext26:	
  7429 ;; *************** function _ADC_Initialize *****************
  7430 ;; Defined at:
  7431 ;;		line 67 in file "mcc_generated_files/adc.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;		None
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7445 ;;      Params:         0       0       0       0
  7446 ;;      Locals:         0       0       0       0
  7447 ;;      Temps:          0       0       0       0
  7448 ;;      Totals:         0       0       0       0
  7449 ;;Total ram usage:        0 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; Hardware stack levels required when called: 3
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_SYSTEM_Initialize
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           
  7460                           ;psect for function _ADC_Initialize
  7461  0728                     _ADC_Initialize:
  7462  0728                     l1886:	
  7463                           ;incstack = 0
  7464                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0]
  7465                           
  7466                           
  7467                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xE0;
  7468  0728  30E0               	movlw	224
  7469  0729  0021               	movlb	1	; select bank1
  7470  072A  009E               	movwf	30	;volatile
  7471  072B                     l1888:
  7472                           
  7473                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
  7474  072B  019F               	clrf	31	;volatile
  7475  072C                     l1890:
  7476                           
  7477                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  7478  072C  019B               	clrf	27	;volatile
  7479  072D                     l1892:
  7480                           
  7481                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  7482  072D  019C               	clrf	28	;volatile
  7483  072E                     l1894:
  7484                           
  7485                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  7486  072E  3001               	movlw	1
  7487  072F  009D               	movwf	29	;volatile
  7488  0730                     l1896:
  7489                           
  7490                           ;mcc_generated_files/adc.c: 85:     ADCON0bits.CHS = channel_ANA4;
  7491  0730  081D               	movf	29,w	;volatile
  7492  0731  3903               	andlw	-253
  7493  0732  3810               	iorlw	16
  7494  0733  009D               	movwf	29	;volatile
  7495  0734                     l174:
  7496  0734  0008               	return
  7497  0735                     __end_of_ADC_Initialize:
  7498                           
  7499                           	psect	intentry
  7500  0004                     __pintentry:	
  7501 ;; *************** function _INTERRUPT_InterruptManager *****************
  7502 ;; Defined at:
  7503 ;;		line 54 in file "mcc_generated_files/interrupt_manager.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2, status,0, pclath, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7517 ;;      Params:         0       0       0       0
  7518 ;;      Locals:         0       0       0       0
  7519 ;;      Temps:          0       0       0       0
  7520 ;;      Totals:         0       0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 2
  7524 ;; This function calls:
  7525 ;;		_TMR0_ISR
  7526 ;; This function is called by:
  7527 ;;		Interrupt level 1
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531  0004                     _INTERRUPT_InterruptManager:
  7532                           
  7533                           ;incstack = 0
  7534  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7535                           
  7536                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7537  0005  3180               	pagesel	$
  7538  0006                     i1l2236:
  7539                           
  7540                           ;mcc_generated_files/interrupt_manager.c: 57:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  7541  0006  0021               	movlb	1	; select bank1
  7542  0007  1E90               	btfss	16,5	;volatile
  7543  0008  280A               	goto	u99_21
  7544  0009  280B               	goto	u99_20
  7545  000A                     u99_21:
  7546  000A  2816               	goto	i1l155
  7547  000B                     u99_20:
  7548  000B                     i1l2238:
  7549  000B  0020               	movlb	0	; select bank0
  7550  000C  1E90               	btfss	16,5	;volatile
  7551  000D  280F               	goto	u100_21
  7552  000E  2810               	goto	u100_20
  7553  000F                     u100_21:
  7554  000F  2816               	goto	i1l155
  7555  0010                     u100_20:
  7556  0010                     i1l2240:
  7557                           
  7558                           ;mcc_generated_files/interrupt_manager.c: 58:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 59:         TMR0_ISR();
  7559  0010  3187  271A  3180   	fcall	_TMR0_ISR
  7560  0013                     i1l2242:
  7561                           
  7562                           ;mcc_generated_files/interrupt_manager.c: 60:         timer_flag = 1;
  7563  0013  0020               	movlb	0	; select bank0
  7564  0014  01C2               	clrf	_timer_flag
  7565  0015  0AC2               	incf	_timer_flag,f
  7566  0016                     i1l155:	
  7567                           ;mcc_generated_files/interrupt_manager.c: 61:     }
  7568                           
  7569  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7570  0017  0009               	retfie
  7571  0018                     __end_of_INTERRUPT_InterruptManager:
  7572                           
  7573                           	psect	text28
  7574  071A                     __ptext28:	
  7575 ;; *************** function _TMR0_ISR *****************
  7576 ;; Defined at:
  7577 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;		None
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, status,2, status,0, pclath, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7591 ;;      Params:         0       0       0       0
  7592 ;;      Locals:         0       0       0       0
  7593 ;;      Temps:          0       0       0       0
  7594 ;;      Totals:         0       0       0       0
  7595 ;;Total ram usage:        0 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 1
  7598 ;; This function calls:
  7599 ;;		Absolute function
  7600 ;;		_TMR0_DefaultInterruptHandler
  7601 ;; This function is called by:
  7602 ;;		_INTERRUPT_InterruptManager
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           
  7607                           ;psect for function _TMR0_ISR
  7608  071A                     _TMR0_ISR:
  7609  071A                     i1l2112:	
  7610                           ;incstack = 0
  7611                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7612                           
  7613                           
  7614                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  7615  071A  0020               	movlb	0	; select bank0
  7616  071B  1290               	bcf	16,5	;volatile
  7617  071C                     i1l2114:
  7618                           
  7619                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  7620  071C  085D               	movf	_TMR0_InterruptHandler,w
  7621  071D  045E               	iorwf	_TMR0_InterruptHandler+1,w
  7622  071E  1903               	btfsc	3,2
  7623  071F  2F21               	goto	u81_21
  7624  0720  2F22               	goto	u81_20
  7625  0721                     u81_21:
  7626  0721  2F27               	goto	i1l134
  7627  0722                     u81_20:
  7628  0722                     i1l2116:
  7629                           
  7630                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  7631  0722  085E               	movf	_TMR0_InterruptHandler+1,w
  7632  0723  008A               	movwf	10
  7633  0724  085D               	movf	_TMR0_InterruptHandler,w
  7634  0725  000A               	callw
  7635  0726  3187               	pagesel	$
  7636  0727                     i1l134:
  7637  0727  0008               	return
  7638  0728                     __end_of_TMR0_ISR:
  7639                           
  7640                           	psect	text29
  7641  077C                     __ptext29:	
  7642 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7643 ;; Defined at:
  7644 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		None
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7658 ;;      Params:         0       0       0       0
  7659 ;;      Locals:         0       0       0       0
  7660 ;;      Temps:          0       0       0       0
  7661 ;;      Totals:         0       0       0       0
  7662 ;;Total ram usage:        0 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_TMR0_Initialize
  7668 ;;		_TMR0_ISR
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function _TMR0_DefaultInterruptHandler
  7674  077C                     _TMR0_DefaultInterruptHandler:
  7675  077C                     i1l140:	
  7676                           ;incstack = 0
  7677                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7678                           
  7679  077C  0008               	return
  7680  077D                     __end_of_TMR0_DefaultInterruptHandler:
  7681  007E                     btemp	set	126	;btemp
  7682  007E                     int$flags	set	126
  7683  007E                     wtemp0	set	126
  7684                           
  7685                           	psect	config
  7686                           
  7687                           ;Config register CONFIG1 @ 0x8007
  7688                           ;	FEXTOSC External Oscillator mode Selection bits
  7689                           ;	FEXTOSC = OFF, Oscillator not enabled
  7690                           ;	Power-up default value for COSC bits
  7691                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
  7692                           ;	Clock Out Enable bit
  7693                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  7694                           ;	Clock Switch Enable bit
  7695                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7696                           ;	Fail-Safe Clock Monitor Enable
  7697                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7698  8007                     	org	32775
  7699  8007  3F8C               	dw	16268
  7700                           
  7701                           ;Config register CONFIG2 @ 0x8008
  7702                           ;	Master Clear Enable bit
  7703                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  7704                           ;	Power-up Timer Enable bit
  7705                           ;	PWRTE = OFF, PWRT disabled
  7706                           ;	Watchdog Timer Enable bits
  7707                           ;	WDTE = SLEEP, WDT enabled while running and disabled in SLEEP/IDLE; SWDTEN is ignored
  7708                           ;	Low-power BOR enable bit
  7709                           ;	LPBOREN = OFF, ULPBOR disabled
  7710                           ;	Brown-out Reset Enable bits
  7711                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  7712                           ;	Brown-out Reset Voltage selection bit
  7713                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  7714                           ;	PPSLOCK bit One-Way Set Enable bit
  7715                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  7716                           ;	Stack Overflow/Underflow Reset Enable bit
  7717                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7718                           ;	Debugger enable bit
  7719                           ;	DEBUG = OFF, Background debugger disabled
  7720  8008                     	org	32776
  7721  8008  3FFB               	dw	16379
  7722                           
  7723                           ;Config register CONFIG3 @ 0x8009
  7724                           ;	User NVM self-write protection bits
  7725                           ;	WRT = OFF, Write protection off
  7726                           ;	Low Voltage Programming Enable bit
  7727                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  7728  8009                     	org	32777
  7729  8009  3FFF               	dw	16383
  7730                           
  7731                           ;Config register CONFIG4 @ 0x800A
  7732                           ;	User NVM Program Memory Code Protection bit
  7733                           ;	CP = OFF, User NVM code protection disabled
  7734                           ;	Data NVM Memory Code Protection bit
  7735                           ;	CPD = OFF, Data NVM code protection disabled
  7736  800A                     	org	32778
  7737  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    128
    Data        4
    BSS         35
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     23      63
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _loop_handler->_trimmer_handler
    _trimmer_handler->_ADC_GetConversion
    _trimmer_handler->_PWM5_LoadDutyValue
    _trimmer_handler->_PWM6_LoadDutyValue
    _flash_handler->_DATAEE_WriteByte
    _driver_run->___lldiv
    ___lldiv->___lmul
    _driver_init->_driver_handler
    _buzzer_pwm_config->_PWM5_LoadDutyValue
    _buzzer_pwm_config->_PWM6_LoadDutyValue
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_driver_run
    _loop_handler->_trimmer_handler
    _driver_run->___lldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10369
                                             21 BANK0      2     2      0
                  _SYSTEM_Initialize
                        _driver_init
                         _driver_run
                       _loop_handler
 ---------------------------------------------------------------------------------
 (1) _loop_handler                                         1     1      0    3280
                                              8 COMMON     1     1      0
                     _driver_handler
                      _flash_handler
                    _trimmer_handler
 ---------------------------------------------------------------------------------
 (2) _trimmer_handler                                     13    13      0    1713
                                              4 COMMON     4     4      0
                                              0 BANK0      9     9      0
                  _ADC_GetConversion
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _flash_handler                                        1     1      0     241
                                              4 COMMON     1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     241
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _driver_run                                           8     8      0    2846
                                             13 BANK0      8     8      0
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     700
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _driver_init                                          5     5      0    4145
                                              7 COMMON     5     5      0
                  _ADC_GetConversion
                    _DATAEE_ReadByte
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _buzzer_pwm_config
                     _driver_handler
 ---------------------------------------------------------------------------------
 (2) _driver_handler                                       3     3      0    1326
                                              4 COMMON     3     3      0
                  _buzzer_pwm_config
                   _drive_pwm_config
 ---------------------------------------------------------------------------------
 (3) _drive_pwm_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buzzer_pwm_config                                    0     0      0    1304
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     652
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     652
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     120
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _driver_init
     _ADC_GetConversion
     _DATAEE_ReadByte
     _PWM5_LoadDutyValue
     _PWM6_LoadDutyValue
     _buzzer_pwm_config
       _PWM5_LoadDutyValue
       _PWM6_LoadDutyValue
     _driver_handler
       _buzzer_pwm_config
       _drive_pwm_config
   _driver_run
     _PWM5_LoadDutyValue
     _PWM6_LoadDutyValue
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _loop_handler
     _driver_handler
     _flash_handler
       _DATAEE_WriteByte
     _trimmer_handler
       _ADC_GetConversion
       _PWM5_LoadDutyValue
       _PWM6_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      4D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul 07 13:00:47 2022

                                      l51 0777                                        l45 06BE  
                                      l54 0758                                        l48 0760  
                                      l89 064A               __size_of_PWM6_LoadDutyValue 0016  
                                     l115 0719                                       l208 0748  
                                     l137 0773                                       l410 05CE  
                                     l251 0705                                       l236 0767  
                                     l174 0734                                       l430 0592  
                                     l239 06EF                                       l423 0551  
                                     l248 0750                                       l192 06D9  
                                     l443 041E                                       l292 065E  
                                     l189 06D1                                       l453 0420  
                                     l294 0662                                       l295 0668  
                                     l472 030E                                       l298 0740  
                                     l474 030E                                       l492 01A4  
                                     l495 0686                                       l479 0056  
                                     l664 0601                                       l498 06A2  
                                     l686 04FB                                       _PR2 001E  
                                     u600 0352                                       u601 0351  
                                     u610 0373                                       u611 0372  
                                     u700 05DB                                       u620 038A  
                                     u701 05DA                                       u621 0389  
                                     u630 0399                                       u631 0398  
                                     u615 036F                                       u560 06D5  
                                     u800 04F3                                       u640 03B8  
                                     u561 06D4                                       u545 06E9  
                                     u801 04F2                                       u641 03B7  
                                     u730 05F9                                       u570 0662  
                                     u650 03C1                                       u555 06FF  
                                     u731 05F8                                       u715 05E4  
                                     u571 0661                                       u651 03C0  
                                     u820 0050                                       u740 04B2  
                                     u900 02B8                                       u660 03CB  
                                     u580 0323                                       u821 004F  
                                     u741 04B1                                       u725 05EB  
                                     u901 02B7                                       u661 03CA  
                                     u581 0322                                       u830 0056  
                                     u910 02DC                                       u670 03EE  
                                     u590 032D                                       u831 0055  
                                     u911 02DB                                       u671 03ED  
                                     u591 032C                                       u840 007B  
                                     u760 04C4                                       u920 02E4  
                                     u680 0559                                       u841 007A  
                                     u761 04C3                                       u921 02E2  
                                     u681 0558                                       u930 02E5  
                                     u850 01B0                                       u690 0566  
                                     u755 04B6                                       u915 02D8  
                                     u851 01AF                                       u691 0565  
                                     u780 04DD                                       u940 02ED  
                                     u860 01B6                                       u781 04DC  
                                     u941 02EC                                       u861 01B5  
                                     u950 02F2                                       u870 01BB  
                                     u775 04C5                                       u951 02F1  
                                     u871 01BA                                       u880 01C5  
                                     u960 0598                                       u785 04D9  
                                     u881 01C4                                       u961 0597  
                                     u890 023D                                       u970 059E  
                                     u795 04E7                                       u891 023C  
                                     u971 059D                                       u980 05AC  
                                     u885 01C1                                       u981 05AB  
                                     u895 0239                          trimmer_handler@i 0047  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0741  
                                     wreg 0009                                      l2000 033C  
                                    l2010 0373                                      l2002 0348  
                                    l2100 06AC                                      l2020 03B2  
                                    l2012 038A                                      l2004 034C  
                                    l2110 06BB                                      l2102 06AF  
                                    l2030 03DA                                      l2022 03B8  
                                    l2014 038F                                      l2006 0352  
                                    l2104 06B2                                      l2120 0040  
                                    l2200 02E8                                      l2024 03C1  
                                    l2032 03E8                                      l2016 0399  
                                    l2040 041F                                      l2008 0369  
                                    l2106 06B5                                      l2130 005F  
                                    l2122 004B                                      l2202 02ED  
                                    l2050 0579                                      l2042 0552  
                                    l2034 03EE                                      l2026 03C5  
                                    l2018 03A7                                      l2210 0598  
                                    l2108 06B8                                      l2140 0071  
                                    l2132 0067                                      l2124 0050  
                                    l2060 05DB                                      l2204 02F2  
                                    l2052 0584                                      l2044 0559  
                                    l2036 040E                                      l2028 03CB  
                                    l2220 05B0                                      l2212 059E  
                                    l2302 0188                                      l2150 00D5  
                                    l2142 0075                                      l2126 0058  
                                    l2118 0034                                      l2070 04A1  
                                    l2062 05E3                                      l2206 0301  
                                    l2046 0566                                      l2054 058A  
                                    l2038 0415                                      l2222 05B8  
                                    l2214 05A3                                      l2230 05C5  
                                    l2304 053A                                      l2152 0115  
                                    l2144 007B                                      l2128 005C  
                                    l2080 04CB                                      l2072 04B2  
                                    l2064 05EA                                      l2056 05CF  
                                    l2048 0570                                      l2232 05C9  
                                    l2224 05BC                                      l2216 05A7  
                                    l2208 0593                                      l2154 0146  
                                    l2162 017F                                      l2146 00C6  
                                    l2138 0068                                      l2082 04DD  
                                    l2074 04B5                                      l2090 04F3  
                                    l2066 05F9                                      l2058 05D7  
                                    l2170 01A5                                      l2234 05CC  
                                    l2218 05AC                                      l2226 05C1  
                                    l2250 0612                                      l2156 0168  
                                    l2164 019F                                      l2148 00CD  
                                    l2084 04E5                                      l2076 04C0  
                                    l2180 01F6                                      l2172 01B0  
                                    l2228 05C2                                      l2260 0622  
                                    l2252 0613                                      l2244 0602  
                                    l2094 06A3                                      l2158 017B  
                                    l2086 04E6                                      l2078 04C4  
                                    l2190 02B8                                      l2182 0233  
                                    l2174 01B6                                      l2254 0616  
                                    l2246 0605                                      l2096 06A6  
                                    l1800 06CB                                      l2088 04ED  
                                    l2192 02C1                                      l2184 023D  
                                    l2176 01BB                                      l2256 061C  
                                    l2248 0611                                      l2098 06A9  
                                    l1802 06CF                                      l2186 027A  
                                    l2178 01C5                                      l2194 02D1  
                                    l1810 0652                                      l2258 061F  
                                    l1900 0741                                      l1804 06D5  
                                    l2196 02DC                                      l2188 02AA  
                                    l1820 0659                                      l1812 0654  
                                    l1910 070B                                      l1902 0744  
                                    l1830 068F                                      l2198 02DE  
                                    l1822 065B                                      l1814 0656  
                                    l1912 070C                                      l1904 0745  
                                    l1920 0735                                      l1840 066E  
                                    l1832 069D                                      l1824 065D  
                                    l1816 0657                                      l1808 064B  
                                    l1914 070D                                      l1906 0746  
                                    l1930 073D                                      l1922 0738  
                                    l1850 0685                                      l1842 0673  
                                    l1834 069F                                      l1826 0663  
                                    l1818 0658                                      l1860 062E  
                                    l1852 0751                                      l1916 070F  
                                    l1908 0706                                      l1932 073E  
                                    l1924 073A                                      l1844 067A  
                                    l1836 06A1                                      l1828 0687  
                                    l1940 0506                                      l1870 063A  
                                    l1862 0630                                      l1854 0627  
                                    l1918 0716                                      l1926 073B  
                                    l1790 06DA                                      l1846 0681  
                                    l1838 0669                                      l1942 0509  
                                    l1872 0759                                      l1864 0632  
                                    l1856 062A                                      l1880 0761  
                                    l1928 073C                                      l1792 06F0  
                                    l1848 0683                                      l1960 052B  
                                    l1952 051C                                      l1944 050D  
                                    l1936 04FD                                      l1890 072C  
                                    l1874 075D                                      l1866 0635  
                                    l1858 062D                                      l1882 0763  
                                    l1794 076E                                      l1962 052D  
                                    l1954 0521                                      l1946 0512  
                                    l1938 0501                                      l1970 0532  
                                    l1892 072D                                      l1876 075F  
                                    l1868 0637                                      l1884 0765  
                                    l1796 06C0                                      l1964 052E  
                                    l1956 0525                                      l1948 0516  
                                    l1980 0318                                      l1894 072E  
                                    l1886 0728                                      l1878 0774  
                                    l1798 06CA                                      l1966 0530  
                                    l1958 052A                                      l1990 032F  
                                    l1982 031A                                      l1896 0730  
                                    l1888 072B                                      l1992 0333  
                                    l1984 0323                                      l1976 030F  
                                    l1898 0749                                      l1994 033B  
                                    l1986 0327                                      l1978 0318  
                                    l1988 032D                                      u1010 061C  
                                    u1011 061B                                      u1107 00DD  
                                    u1027 060B                                      u1117 00EC  
                                    u1037 05A4                                      u1207 06CC  
                                    u1127 00FB                                      u1047 0039  
                                    u1137 010A                                      u1057 0083  
                                    u1147 011D                                      u1067 0092  
                                    u1157 012C                                      u1077 00A1  
                                    _LATA 010C                                      u1167 013B  
                                    u1087 00B0                                      _LATC 010E  
                                    u1177 014E                                      u1097 00BF  
                                    u1187 015D                                      u1197 0170  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUC 020E                                      _main 0602  
                            ?_driver_init 0070                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      fsr1l 0006  
                                    btemp 007E                                      start 0018  
                         _PWM5_Initialize 0749                __end_of_PWM5_LoadDutyValue 0706  
               __size_of_DATAEE_WriteByte 001E                   __end_of_TMR0_Initialize 071A  
          ??_TMR0_DefaultInterruptHandler 0070                 trimmer_handler@adc_avgsum 0045  
          __size_of_OSCILLATOR_Initialize 0008             __end_of_OSCILLATOR_Initialize 0761  
               trimmer_handler@adc_newval 0043                                     _ADACT 009F  
                                   ?_main 0070                           __end_of___lldiv 04FC  
                                   _T2CON 001F                                     i1l140 077C  
                                   i1l134 0727                                     i1l155 0016  
                         ??_flash_handler 0074                                     _OSCEN 091D  
                                   _TMR0H 0016                                     _TMR0L 0015  
                        _drive_pwm_config 0687                                     u81_20 0722  
                                   u81_21 0721                                     _TRISA 008C  
                                   _TRISC 008E                                     u99_20 000B  
                                   u99_21 000A         __size_of_TMR0_SetInterruptHandler 0006  
                         _PWM6_Initialize 0761                       ___lmul@multiplicand 0074  
               ?_TMR0_SetInterruptHandler 0070                          __end_of_TMR0_ISR 0728  
                 __size_of_driver_handler 0056                           _DATAEE_ReadByte 0735  
                          _WDT_Initialize 0774                     __end_of_period_buffer 04A1  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __initialization 0019  
                            __end_of_main 0627                   __end_of_TMR2_Initialize 0749  
             ?_INTERRUPT_InterruptManager 0070                         _buzzer_pwm_config 0669  
                                  ??_main 0058                            _period_halfval 0036  
                      ?_buzzer_pwm_config 0070                    __end_of_WDT_Initialize 0778  
                                  _ADCON0 009D                                    _ADCON1 009E  
                     ??_buzzer_pwm_config 0074                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _T0CON0 0017  
                                  _T0CON1 0018                                    _RA2PPS 0E92  
                                  _RC0PPS 0EA0                                    u100_20 0010  
                                  u100_21 000F                                    i1l2112 071A  
                                  i1l2114 071C                                    i1l2116 0722  
                                  i1l2240 0010                                    _ODCONA 028C  
                                  i1l2242 0013                                    _ODCONC 028E  
                                  i1l2236 0006                                    i1l2238 000B  
                 __end_of_PWM5_Initialize 0751                                    _INLVLA 038C  
                                  _INLVLC 038E                             _index_lastval 005A  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                                  ___lmul 05CF                 __end_of_buzzer_pwm_config 0687  
                               ??___lldiv 007C                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0768                   __end_of_DATAEE_ReadByte 0741  
                          _PMD_Initialize 0751                              __pdataCOMMON 007D  
                         ?_WDT_Initialize 0070                  ADC_GetConversion@channel 0073  
TMR0_SetInterruptHandler@InterruptHandler 0070                         _SYSTEM_Initialize 06A3  
                 __end_of__initialization 0031                    driver_init@adc_initval 0079  
                      ?_SYSTEM_Initialize 0070                      __size_of_driver_init 0171  
                          __pcstackCOMMON 0070                              __pidataBANK0 0778  
                     ??_SYSTEM_Initialize 0072                                _adc_avgval 0020  
                               ?_TMR0_ISR 0070                          _DATAEE_WriteByte 064B  
                        ?_TMR2_Initialize 0070                    __end_of_PMD_Initialize 0759  
                            driver_init@i 007B                  trimmer_handler@array_val 004A  
               driver_handler@mode_select 0076                            _driver_handler 04FC  
               __end_of_SYSTEM_Initialize 06BF                  trimmer_handler@index_val 0048  
                              __pbssBANK0 0020                          ?_PWM5_Initialize 0070  
                __size_of_trimmer_handler 0112                  __end_of_drive_pwm_config 06A3  
                           ?_loop_handler 0070                                __pmaintext 0602  
        __end_of_TMR0_SetInterruptHandler 0774                                   ?___lmul 0070  
                              ??_TMR0_ISR 0070                __size_of_buzzer_pwm_config 001E  
              __end_of_PWM6_LoadDutyValue 06F0                                __pintentry 0004  
                          ___lmul@product 0078                          ?_PWM6_Initialize 0070  
                         ?_PMD_Initialize 0070                   __size_of_ADC_Initialize 000D  
                        ?_DATAEE_ReadByte 0070                    __end_of_driver_handler 0552  
                          _adc_avgcounter 003F                        _PWM5_LoadDutyValue 06F0  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _NVMADRH 0892                                   _NVMADRL 0891  
                                 _NVMDATH 0894                                   _OSCTUNE 091E  
                                 _NVMDATL 0893                                   _NVMCON2 0896  
                                 _PWM5DCH 0618                                   _PWM5DCL 0617  
                                 _PWM6DCH 061B                                   _PWM6DCL 061A  
                                 _PWM5CON 0619                                   _PWM6CON 061C  
                                 _SLRCONA 030C                                   _SLRCONC 030E  
                     ?_PWM5_LoadDutyValue 0070                      DATAEE_WriteByte@bAdd 0070  
                          ??_loop_handler 0078                                _driver_run 01A5  
                    _ADC_InterruptHandler 003A                           __size_of___lmul 0033  
                                 ___lldiv 04A1                      ??_PWM5_LoadDutyValue 0072  
                              _button_tmr 003E                                   __ptext1 0593  
                                 __ptext2 030F                                   __ptext3 0552  
                                 __ptext4 064B                                   __ptext5 01A5  
                                 __ptext6 05CF                                   __ptext7 04A1  
                                 __ptext8 0034                                   __ptext9 04FC  
                         ?_driver_handler 0070                     _OSCILLATOR_Initialize 0759  
                               _T2CONbits 001F                  ??_PIN_MANAGER_Initialize 0070  
                   __end_of_flash_handler 0593                __size_of_SYSTEM_Initialize 001C  
                                 clrloop0 0769                      end_of_initialization 0031  
                              _period_val 0038                                _period_tmr 0034  
                               _LED_timer 003D                           ___lldiv@divisor 0043  
                         ___lldiv@counter 004F                         ??_trimmer_handler 0074  
                        ??_WDT_Initialize 0070                                _timer_flag 0042  
                _TMR0_SetInterruptHandler 076E                                 _PORTAbits 000C  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                __end_of_DATAEE_WriteByte 0669                               ?_driver_run 0070  
                          __end_of___lmul 0602                             __pidataCOMMON 077B  
                       __size_of_TMR0_ISR 000E                            _ADC_Initialize 0728  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0019  
                    __end_of_loop_handler 05CF                  __size_of_TMR0_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0024                             _period_buffer 0421  
                           ??_driver_init 0077                       DATAEE_ReadByte@bAdd 0070  
                       ?_drive_pwm_config 0070                          ??_PMD_Initialize 0070  
                                ??___lmul 0078                        ??_drive_pwm_config 0070  
                  __end_of_ADC_Initialize 0735                            _eepdriver_mode 007D  
                             __pdataBANK0 005A               PWM5_LoadDutyValue@dutyValue 0070  
                               ___latbits 0000                             __pcstackBANK0 0043  
                     __size_of_driver_run 016A                        _PWM6_LoadDutyValue 06DA  
                __size_of_TMR2_Initialize 0008                       ?_PWM6_LoadDutyValue 0070  
                   _TMR0_InterruptHandler 005D                                 __pnvBANK0 005D  
                  _PIN_MANAGER_Initialize 0627                  __size_of_PWM5_Initialize 0008  
                     __end_of_driver_init 01A5                                  ?___lldiv 0043  
                         ?_ADC_Initialize 0070                          ??_driver_handler 0074  
                    ??_PWM6_LoadDutyValue 0072              ??_INTERRUPT_InterruptManager 0070  
                               _index_tmr 0040                  __size_of_PWM6_Initialize 0007  
                __size_of_DATAEE_ReadByte 000C                           _trimmer_handler 030F  
                       ??_TMR0_Initialize 0072                                 clear_ram0 0768  
                                _PIE0bits 0090                                  _LED_mode 003C  
     __size_of_INTERRUPT_InterruptManager 0014                ??_TMR0_SetInterruptHandler 0072  
                                _PIR0bits 0010                                  _PIR1bits 0011  
                           _signal_toggle 0041                                  _TMR0_ISR 071A  
             __size_of_PWM5_LoadDutyValue 0016                        driver_run@duty_val 0054  
                   __size_of_loop_handler 003C                                _ADCON0bits 009D  
                   DATAEE_WriteByte@bData 0072                         ___lmul@multiplier 0070  
                       ?_DATAEE_WriteByte 0070                         ??_TMR2_Initialize 0070  
                      ??_DATAEE_WriteByte 0073                               _driver_init 0034  
                             _driver_mode 005C                              ??_driver_run 0050  
                            _loop_handler 0593                         _ADC_GetConversion 06BF  
                  __size_of_flash_handler 0041                   ??_OSCILLATOR_Initialize 0070  
                      ?_ADC_GetConversion 0070                          __size_of___lldiv 005B  
                       ??_PWM5_Initialize 0070                       ??_ADC_GetConversion 0072  
                              _T0CON0bits 0017                   __end_of_trimmer_handler 0421  
                      __end_of_driver_run 030F                                  __ptext10 0687  
                                __ptext11 0669                                  __ptext20 076E  
                                __ptext12 06DA                                  __ptext21 0761  
                                __ptext13 06F0                                  __ptext22 0749  
                                __ptext14 0735                                  __ptext23 0751  
                                __ptext15 06BF                                  __ptext24 0627  
                                __ptext16 06A3                                  __ptext25 0759  
                                __ptext17 0774                                  __ptext26 0728  
                                __ptext18 0741                                  __ptext19 0706  
                                __ptext28 071A                                  __ptext29 077C  
                                _eeptimer 0030               DATAEE_WriteByte@GIEBitValue 0073  
                       ??_PWM6_Initialize 0070                             __size_of_main 0025  
    __end_of_TMR0_DefaultInterruptHandler 077D     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 077C                         ??_DATAEE_ReadByte 0072  
               __end_of_ADC_GetConversion 06DA                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0018                _INTERRUPT_InterruptManager 0004  
               __size_of_drive_pwm_config 001C                                _INTCONbits 000B  
                             _NVMCON1bits 0895                             _flash_handler 0552  
                             _PWM5CONbits 0619                               _PWM6CONbits 061C  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                        ___lldiv@dividend 0047                   ?_PIN_MANAGER_Initialize 0070  
                        ??_ADC_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                           __pstringtext1 0421                          ___lldiv@quotient 004B  
                         _TMR0_Initialize 0706                            ?_flash_handler 0070  
                        ?_trimmer_handler 0070               PWM6_LoadDutyValue@dutyValue 0070  
          __end_of_PIN_MANAGER_Initialize 064B                __size_of_ADC_GetConversion 001B  
